{"version":3,"file":"gw-dig.mjs","sources":["../js/site/tile.js","../js/feature/feature.js","../js/feature/tile.js","../js/feature/chance.js","../js/feature/spread.js","../js/site/horde.js","../js/site/item.js","../js/site/utils.js","../js/site/analyze.js","../js/site/site.js","../js/site/log/logger.js","../js/build/buildStep.js","../js/site/log/consoleLogger.js","../js/site/log/index.js","../js/types.js","../js/room.js","../js/hall.js","../js/lake.js","../js/bridge.js","../js/stairs.js","../js/loop.js","../js/digger.js","../js/dungeon.js","../js/build/data.js","../js/build/blueprint.js","../js/build/builder.js"],"sourcesContent":["import * as GWU from 'gw-utils';\nexport const tileIds = {};\nexport const allTiles = [];\nexport function installTile(id, opts = {}) {\n    if (typeof id !== 'string') {\n        opts = id;\n        id = id.id;\n    }\n    const base = { id, index: allTiles.length, priority: 0, tags: [] };\n    opts.extends = opts.extends || id;\n    if (opts.extends) {\n        const root = getTile(opts.extends);\n        if (root) {\n            Object.assign(base, root);\n        }\n        else if (opts.extends !== id) {\n            throw new Error('Cannot extend tile: ' + opts.extends);\n        }\n    }\n    const info = GWU.object.assignOmitting('priority, extends', base, opts);\n    info.id = id;\n    info.index = allTiles.length;\n    if (opts.tags) {\n        info.tags = GWU.tags.make(opts.tags);\n    }\n    if (typeof opts.priority === 'string') {\n        let text = opts.priority.replace(/ /g, '');\n        let index = text.search(/[+-]/);\n        if (index == 0) {\n            info.priority = info.priority + Number.parseInt(text);\n        }\n        else if (index == -1) {\n            if (text.search(/[a-zA-Z]/) == 0) {\n                const tile = getTile(text);\n                if (!tile)\n                    throw new Error('Failed to find tile for priority - ' + text + '.');\n                info.priority = tile.priority;\n            }\n            else {\n                info.priority = Number.parseInt(text);\n            }\n        }\n        else {\n            const id = text.substring(0, index);\n            const delta = Number.parseInt(text.substring(index));\n            const tile = getTile(id);\n            if (!tile)\n                throw new Error('Failed to find tile for priority - ' + id + '.');\n            info.priority = tile.priority + delta;\n        }\n    }\n    else if (opts.priority !== undefined) {\n        info.priority = opts.priority;\n    }\n    if (info.blocksPathing === undefined) {\n        if (info.blocksMove) {\n            info.blocksPathing = true;\n        }\n    }\n    if (tileIds[id]) {\n        info.index = tileIds[id];\n        allTiles[info.index] = info;\n    }\n    else {\n        allTiles.push(info);\n        tileIds[id] = info.index;\n    }\n    return info;\n}\nexport function getTile(name) {\n    if (typeof name === 'string') {\n        name = tileIds[name];\n    }\n    return allTiles[name];\n}\nexport function tileId(name) {\n    var _a;\n    if (typeof name === 'number')\n        return name;\n    return (_a = tileIds[name]) !== null && _a !== void 0 ? _a : -1;\n}\nexport function blocksMove(name) {\n    const info = getTile(name);\n    return info.blocksMove || false;\n}\ntileIds['NOTHING'] = tileIds['NULL'] = installTile('NONE', {\n    priority: 0,\n    ch: '',\n}).index;\ninstallTile('FLOOR', { priority: 10, ch: '.' });\ninstallTile('WALL', {\n    blocksMove: true,\n    blocksVision: true,\n    priority: 50,\n    ch: '#',\n});\ninstallTile('DOOR', {\n    blocksVision: true,\n    door: true,\n    priority: 60,\n    ch: '+',\n});\ninstallTile('SECRET_DOOR', {\n    blocksMove: true,\n    secretDoor: true,\n    priority: 70,\n    ch: '%',\n});\ninstallTile('UP_STAIRS', {\n    stairs: true,\n    priority: 80,\n    ch: '>',\n});\ninstallTile('DOWN_STAIRS', {\n    stairs: true,\n    priority: 80,\n    ch: '<',\n});\ntileIds['DEEP'] = installTile('LAKE', {\n    priority: 40,\n    liquid: true,\n    ch: '~',\n}).index;\ninstallTile('SHALLOW', { priority: 30, ch: '`' });\ninstallTile('BRIDGE', { priority: 45, ch: '=' }); // layers help here\ninstallTile('IMPREGNABLE', {\n    priority: 200,\n    ch: '%',\n    impregnable: true,\n    blocksMove: true,\n    blocksVision: true,\n});\n","import * as GWU from 'gw-utils';\nexport const features = {};\nexport function install(name, fn) {\n    if (typeof fn !== 'function') {\n        fn = make(fn);\n    }\n    features[name] = fn;\n}\nexport const types = {};\nexport function installType(name, fn) {\n    types[name] = fn;\n}\n// FEATURE TYPE\nexport function feature(id) {\n    if (Array.isArray(id))\n        id = id[0];\n    if (id && typeof id !== 'string') {\n        id = id.id;\n    }\n    if (!id || !id.length)\n        throw new Error('Feature effect needs ID');\n    return featureFeature.bind(undefined, id);\n}\nexport function featureFeature(id, site, x, y) {\n    const feat = features[id];\n    if (!feat) {\n        throw new Error('Failed to find feature: ' + id);\n    }\n    return feat(site, x, y);\n}\ninstallType('feature', feature);\ninstallType('effect', feature);\ninstallType('id', feature);\nexport function make(id, config) {\n    if (!id)\n        return GWU.FALSE;\n    if (typeof id === 'string') {\n        if (!id.length)\n            throw new Error('Cannot create effect from empty string.');\n        if (!config) {\n            const parts = id.split(':');\n            id = parts.shift().toLowerCase();\n            config = parts;\n        }\n        // string with no parameters is interpreted as id of registered feature\n        if (config.length === 0) {\n            config = id;\n            id = 'feature';\n        }\n        const handler = types[id];\n        if (!handler)\n            throw new Error('Failed to find effect - ' + id);\n        return handler(config || {});\n    }\n    let steps;\n    if (Array.isArray(id)) {\n        steps = id\n            .map((config) => make(config))\n            .filter((a) => a !== null);\n    }\n    else if (typeof id === 'function') {\n        return id;\n    }\n    else {\n        steps = Object.entries(id)\n            .map(([key, config]) => make(key, config))\n            .filter((a) => a !== null);\n    }\n    if (steps.length === 1) {\n        return steps[0];\n    }\n    return (site, x, y) => {\n        return steps.every((step) => step(site, x, y));\n    };\n}\nexport function makeArray(cfg) {\n    if (!cfg)\n        return [];\n    if (Array.isArray(cfg)) {\n        return cfg\n            .map((c) => make(c))\n            .filter((fn) => fn !== null);\n    }\n    if (typeof cfg === 'string') {\n        if (!cfg.length)\n            throw new Error('Cannot create effect from empty string.');\n        const parts = cfg.split(':');\n        cfg = parts.shift().toLowerCase();\n        const handler = types[cfg];\n        if (!handler)\n            return [];\n        return [handler(parts)];\n    }\n    else if (typeof cfg === 'function') {\n        return [cfg];\n    }\n    const steps = Object.entries(cfg).map(([key, config]) => make(key, config));\n    return steps.filter((s) => s !== null);\n}\n","import { installType } from './feature';\nexport function tile(src) {\n    if (!src)\n        throw new Error('Tile effect needs configuration.');\n    if (typeof src === 'string') {\n        src = { id: src };\n    }\n    else if (Array.isArray(src)) {\n        src = { id: src[0] };\n    }\n    else if (!src.id) {\n        throw new Error('Tile effect needs configuration with id.');\n    }\n    const opts = src;\n    if (opts.id.includes('!')) {\n        opts.superpriority = true;\n    }\n    if (opts.id.includes('~')) {\n        opts.blockedByActors = true;\n        opts.blockedByItems = true;\n    }\n    // if (opts.id.includes('+')) {\n    //     opts.protected = true;\n    // }\n    opts.id = opts.id.replace(/[!~+]*/g, '');\n    return tileAction.bind(undefined, opts);\n}\nexport function tileAction(cfg, site, x, y) {\n    cfg.machine = 0; // >???<\n    if (site.setTile(x, y, cfg.id, cfg)) {\n        return true;\n    }\n    return false;\n}\ninstallType('tile', tile);\n","import { installType } from './feature';\n//////////////////////////////////////////////\n// chance\nexport function chance(opts) {\n    if (Array.isArray(opts)) {\n        opts = opts[0];\n    }\n    if (typeof opts === 'object') {\n        opts = opts.chance;\n    }\n    if (typeof opts === 'string') {\n        if (opts.endsWith('%')) {\n            opts = Number.parseFloat(opts) * 100;\n        }\n        else {\n            opts = Number.parseInt(opts || '10000');\n        }\n    }\n    if (typeof opts !== 'number') {\n        throw new Error('Chance effect config must be number or string that can be a number.');\n    }\n    return chanceAction.bind(undefined, opts);\n}\nexport function chanceAction(cfg, site) {\n    return site.rng.chance(cfg, 10000);\n}\ninstallType('chance', chance);\n","import * as GWU from 'gw-utils';\nimport { tileId } from '../site';\nimport { installType, makeArray } from './feature';\nconst Fl = GWU.flag.fl;\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Flags;\n(function (Flags) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    // E_NEXT_ALWAYS = Fl(0), // Always fire the next effect, even if no tiles changed.\n    // E_NEXT_EVERYWHERE = Fl(1), // next effect spawns in every cell that this effect spawns in, instead of only the origin\n    // E_FIRED = Fl(2), // has already been fired once\n    // E_NO_MARK_FIRED = Fl(3), // Do not mark this cell as having fired an effect (so can log messages multiple times)\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    // E_PROTECTED = Fl(4),\n    // E_NO_REDRAW_CELL = Fl(),\n    Flags[Flags[\"E_TREAT_AS_BLOCKING\"] = Fl(5)] = \"E_TREAT_AS_BLOCKING\";\n    Flags[Flags[\"E_PERMIT_BLOCKING\"] = Fl(6)] = \"E_PERMIT_BLOCKING\";\n    Flags[Flags[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(7)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Flags[Flags[\"E_BLOCKED_BY_ITEMS\"] = Fl(8)] = \"E_BLOCKED_BY_ITEMS\";\n    Flags[Flags[\"E_BLOCKED_BY_ACTORS\"] = Fl(9)] = \"E_BLOCKED_BY_ACTORS\";\n    Flags[Flags[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(10)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Flags[Flags[\"E_SUPERPRIORITY\"] = Fl(11)] = \"E_SUPERPRIORITY\";\n    Flags[Flags[\"E_IGNORE_FOV\"] = Fl(12)] = \"E_IGNORE_FOV\";\n    // E_SPREAD_CIRCLE = Fl(13), // Spread in a circle around the spot (using FOV), radius calculated using spread+decrement\n    // E_SPREAD_LINE = Fl(14), // Spread in a line in one random direction\n    Flags[Flags[\"E_EVACUATE_CREATURES\"] = Fl(15)] = \"E_EVACUATE_CREATURES\";\n    Flags[Flags[\"E_EVACUATE_ITEMS\"] = Fl(16)] = \"E_EVACUATE_ITEMS\";\n    Flags[Flags[\"E_BUILD_IN_WALLS\"] = Fl(17)] = \"E_BUILD_IN_WALLS\";\n    Flags[Flags[\"E_MUST_TOUCH_WALLS\"] = Fl(18)] = \"E_MUST_TOUCH_WALLS\";\n    Flags[Flags[\"E_NO_TOUCH_WALLS\"] = Fl(19)] = \"E_NO_TOUCH_WALLS\";\n    Flags[Flags[\"E_CLEAR_GROUND\"] = Fl(21)] = \"E_CLEAR_GROUND\";\n    Flags[Flags[\"E_CLEAR_SURFACE\"] = Fl(22)] = \"E_CLEAR_SURFACE\";\n    Flags[Flags[\"E_CLEAR_LIQUID\"] = Fl(23)] = \"E_CLEAR_LIQUID\";\n    Flags[Flags[\"E_CLEAR_GAS\"] = Fl(24)] = \"E_CLEAR_GAS\";\n    Flags[Flags[\"E_CLEAR_TILE\"] = Fl(25)] = \"E_CLEAR_TILE\";\n    Flags[Flags[\"E_CLEAR_CELL\"] = Flags.E_CLEAR_GROUND |\n        Flags.E_CLEAR_SURFACE |\n        Flags.E_CLEAR_LIQUID |\n        Flags.E_CLEAR_GAS] = \"E_CLEAR_CELL\";\n    Flags[Flags[\"E_ONLY_IF_EMPTY\"] = Flags.E_BLOCKED_BY_ITEMS | Flags.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    // E_ACTIVATE_DORMANT_MONSTER = Fl(27), // Dormant monsters on this tile will appear -- e.g. when a statue bursts to reveal a monster.\n    // E_AGGRAVATES_MONSTERS = Fl(28), // Will act as though an aggravate monster scroll of effectRadius radius had been read at that point.\n    // E_RESURRECT_ALLY = Fl(29), // Will bring back to life your most recently deceased ally.\n})(Flags || (Flags = {}));\nexport function spread(...args) {\n    let config = {};\n    if (!args.length) {\n        throw new Error('Must have config to create spread.');\n    }\n    if (args.length === 1) {\n        if (typeof args[0] === 'string') {\n            args = args[0].split(':').map((t) => t.trim());\n        }\n        else if (Array.isArray(args[0])) {\n            args = args[0];\n        }\n        else {\n            Object.assign(config, args[0]);\n            args = [config];\n        }\n    }\n    if (args.length >= 3) {\n        Object.assign(config, args[3] || {});\n        config.grow = Number.parseInt(args[0]);\n        config.decrement = Number.parseInt(args[1]);\n        config.features = args[2];\n    }\n    else if (args.length === 2) {\n        throw new Error('Must have actions to run for spread.');\n    }\n    if (typeof config.grow !== 'number')\n        config.grow = Number.parseInt(config.grow || 0);\n    if (typeof config.decrement !== 'number')\n        config.decrement = Number.parseInt(config.decrement || 100);\n    config.flags = GWU.flag.from(Flags, config.flags || 0);\n    config.matchTile = config.matchTile || '';\n    if (typeof config.features === 'string' &&\n        // @ts-ignore\n        config.features.indexOf(':') < 0) {\n        if (tileId(config.features) >= 0) {\n            // @ts-ignore\n            config.features = 'TILE:' + config.features;\n        }\n    }\n    const action = makeArray(config.features);\n    if (!action)\n        throw new Error('Failed to make action for spread.');\n    config.features = action;\n    const fn = spreadFeature.bind(undefined, config);\n    fn.config = config;\n    return fn;\n}\ninstallType('spread', spread);\nexport function spreadFeature(cfg, site, x, y) {\n    const abortIfBlocking = !!(cfg.flags & Flags.E_ABORT_IF_BLOCKS_MAP);\n    const map = site;\n    let didSomething = false;\n    const spawnMap = GWU.grid.alloc(map.width, map.height);\n    if (!computeSpawnMap(cfg, spawnMap, site, x, y)) {\n        GWU.grid.free(spawnMap);\n        return false;\n    }\n    if (abortIfBlocking && mapDisruptedBy(map, spawnMap)) {\n        GWU.grid.free(spawnMap);\n        return false;\n    }\n    if (cfg.flags & Flags.E_EVACUATE_CREATURES) {\n        // first, evacuate creatures, so that they do not re-trigger the tile.\n        if (evacuateCreatures(map, spawnMap)) {\n            didSomething = true;\n        }\n    }\n    if (cfg.flags & Flags.E_EVACUATE_ITEMS) {\n        // first, evacuate items, so that they do not re-trigger the tile.\n        if (evacuateItems(map, spawnMap)) {\n            didSomething = true;\n        }\n    }\n    if (cfg.flags & Flags.E_CLEAR_CELL) {\n        // first, clear other tiles (not base/ground)\n        if (clearCells(map, spawnMap, cfg.flags)) {\n            didSomething = true;\n        }\n    }\n    spawnMap.update((v) => {\n        if (!v)\n            return 0;\n        return 1;\n    });\n    cfg.features.forEach((fn, i) => {\n        spawnMap.forEach((v, x, y) => {\n            if (v !== i + 1)\n                return;\n            if (fn(site, x, y)) {\n                didSomething = true;\n                spawnMap[x][y] += 1;\n            }\n        });\n    });\n    if (didSomething) {\n        didSomething = true;\n    }\n    GWU.grid.free(spawnMap);\n    return didSomething;\n}\nexport function mapDisruptedBy(map, blockingGrid, blockingToMapX = 0, blockingToMapY = 0) {\n    const walkableGrid = GWU.grid.alloc(map.width, map.height);\n    let disrupts = false;\n    // Get all walkable locations after lake added\n    GWU.xy.forRect(map.width, map.height, (i, j) => {\n        const lakeX = i + blockingToMapX;\n        const lakeY = j + blockingToMapY;\n        if (blockingGrid.get(lakeX, lakeY)) {\n            if (map.isStairs(i, j)) {\n                disrupts = true;\n            }\n        }\n        else if (!map.blocksMove(i, j)) {\n            walkableGrid[i][j] = 1;\n        }\n    });\n    let first = true;\n    for (let i = 0; i < walkableGrid.width && !disrupts; ++i) {\n        for (let j = 0; j < walkableGrid.height && !disrupts; ++j) {\n            if (walkableGrid[i][j] == 1) {\n                if (first) {\n                    walkableGrid.floodFill(i, j, 1, 2);\n                    first = false;\n                }\n                else {\n                    disrupts = true;\n                }\n            }\n        }\n    }\n    // console.log('WALKABLE GRID');\n    // walkableGWU.grid.dump();\n    GWU.grid.free(walkableGrid);\n    return disrupts;\n}\n// Spread\nfunction cellIsOk(effect, map, x, y, isStart) {\n    if (!map.hasXY(x, y))\n        return false;\n    if (map.isProtected(x, y))\n        return false;\n    if (map.blocksEffects(x, y) && !effect.matchTile && !isStart) {\n        return false;\n    }\n    if (effect.flags & Flags.E_BUILD_IN_WALLS) {\n        if (!map.isWall(x, y))\n            return false;\n    }\n    else if (effect.flags & Flags.E_MUST_TOUCH_WALLS) {\n        let ok = false;\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (map.isWall(i, j)) {\n                ok = true;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    else if (effect.flags & Flags.E_NO_TOUCH_WALLS) {\n        let ok = true;\n        if (map.isWall(x, y))\n            return false; // or on wall\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (map.isWall(i, j)) {\n                ok = false;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    // if (ctx.bounds && !ctx.bounds.containsXY(x, y)) return false;\n    if (effect.matchTile && !isStart && !map.hasTile(x, y, effect.matchTile)) {\n        return false;\n    }\n    return true;\n}\nexport function computeSpawnMap(effect, spawnMap, site, x, y) {\n    let i, j, dir, t, x2, y2;\n    let madeChange;\n    // const bounds = ctx.bounds || null;\n    // if (bounds) {\n    //   // Activation.debug('- bounds', bounds);\n    // }\n    const map = site;\n    let startProb = effect.grow || 0;\n    let probDec = effect.decrement || 0;\n    spawnMap.fill(0);\n    if (!cellIsOk(effect, map, x, y, true)) {\n        return false;\n    }\n    spawnMap[x][y] = t = 1; // incremented before anything else happens\n    let count = 1;\n    if (startProb) {\n        madeChange = true;\n        if (startProb >= 100) {\n            probDec = probDec || 100;\n        }\n        if (probDec <= 0) {\n            probDec = startProb;\n        }\n        while (madeChange && startProb > 0) {\n            madeChange = false;\n            t++;\n            for (i = 0; i < map.width; i++) {\n                for (j = 0; j < map.height; j++) {\n                    if (spawnMap[i][j] == t - 1) {\n                        for (dir = 0; dir < 4; dir++) {\n                            x2 = i + GWU.xy.DIRS[dir][0];\n                            y2 = j + GWU.xy.DIRS[dir][1];\n                            if (spawnMap.hasXY(x2, y2) &&\n                                !spawnMap[x2][y2] &&\n                                map.rng.chance(startProb) &&\n                                cellIsOk(effect, map, x2, y2, false)) {\n                                spawnMap[x2][y2] = t;\n                                madeChange = true;\n                                ++count;\n                            }\n                        }\n                    }\n                }\n            }\n            startProb -= probDec;\n        }\n    }\n    return count > 0;\n}\nexport function clearCells(map, spawnMap, _flags = 0) {\n    let didSomething = false;\n    // const clearAll = (flags & Flags.E_CLEAR_CELL) === Flags.E_CLEAR_CELL;\n    spawnMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        // if (clearAll) {\n        map.clearTile(i, j);\n        // } else {\n        //     if (flags & Flags.E_CLEAR_GAS) {\n        //         cell.clearDepth(Flags.Depth.GAS);\n        //     }\n        //     if (flags & Flags.E_CLEAR_LIQUID) {\n        //         cell.clearDepth(Flags.Depth.LIQUID);\n        //     }\n        //     if (flags & Flags.E_CLEAR_SURFACE) {\n        //         cell.clearDepth(Flags.Depth.SURFACE);\n        //     }\n        //     if (flags & Flags.E_CLEAR_GROUND) {\n        //         cell.clearDepth(Flags.Depth.GROUND);\n        //     }\n        // }\n        didSomething = true;\n    });\n    return didSomething;\n}\nexport function evacuateCreatures(map, blockingMap) {\n    let didSomething = false;\n    map.eachActor((a) => {\n        if (!blockingMap[a.x][a.y])\n            return;\n        const loc = map.rng.matchingLocNear(a.x, a.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            if (blockingMap[x][y])\n                return false;\n            return !map.forbidsActor(x, y, a);\n        });\n        if (loc && loc[0] >= 0 && loc[1] >= 0) {\n            a.y = loc[0];\n            a.y = loc[1];\n            // map.redrawXY(loc[0], loc[1]);\n            didSomething = true;\n        }\n    });\n    return didSomething;\n}\nexport function evacuateItems(map, blockingMap) {\n    let didSomething = false;\n    map.eachItem((i) => {\n        if (!blockingMap[i.x][i.y])\n            return;\n        const loc = map.rng.matchingLocNear(i.x, i.y, (x, y) => {\n            if (!map.hasXY(x, y))\n                return false;\n            if (blockingMap[x][y])\n                return false;\n            return !map.forbidsItem(x, y, i);\n        });\n        if (loc && loc[0] >= 0 && loc[1] >= 0) {\n            i.x = loc[0];\n            i.y = loc[1];\n            // map.redrawXY(loc[0], loc[1]);\n            didSomething = true;\n        }\n    });\n    return didSomething;\n}\n","import * as GWU from 'gw-utils';\nimport * as FEATURE from '../feature';\nexport const hordes = [];\nexport function installHorde(config) {\n    const info = {};\n    info.id = config.id || config.leader;\n    info.leader = config.leader;\n    info.make = config.make || {};\n    info.members = {};\n    if (config.members) {\n        Object.entries(config.members).forEach(([key, value]) => {\n            let member = {};\n            if (typeof value === 'object' &&\n                ('count' in value || 'make' in value)) {\n                member.count = GWU.range.make(value.count || 1);\n                member.make = value.make || {};\n            }\n            else {\n                // @ts-ignore\n                member.count = GWU.range.make(value);\n            }\n            info.members[key] = member;\n        });\n    }\n    info.tags = [];\n    if (config.tags) {\n        if (typeof config.tags === 'string') {\n            config.tags = config.tags.split(/[:|,]/g).map((t) => t.trim());\n        }\n        info.tags = config.tags;\n    }\n    info.frequency = GWU.frequency.make(config.frequency);\n    info.flags = 0;\n    info.requiredTile = config.requiredTile || null;\n    info.feature = config.feature ? FEATURE.make(config.feature) : null;\n    info.blueprint = config.blueprint || null;\n    hordes.push(info);\n    return info;\n}\nexport function pickHorde(depth, rules, rng) {\n    rng = rng || GWU.random;\n    let tagMatch;\n    if (typeof rules === 'string') {\n        tagMatch = GWU.tags.makeMatch(rules);\n    }\n    else if ('id' in rules) {\n        return hordes.find((h) => h.id === rules.id) || null;\n    }\n    else {\n        tagMatch = GWU.tags.makeMatch(rules);\n    }\n    const choices = hordes.filter((horde) => tagMatch(horde.tags));\n    if (choices.length == 0)\n        return null;\n    const freq = choices.map((info) => info.frequency(depth));\n    const choice = rng.weighted(freq);\n    return choices[choice] || null;\n}\nexport function spawnHorde(info, map, x = -1, y = -1, opts = {}) {\n    // Leader info\n    opts.canSpawn = opts.canSpawn || GWU.TRUE;\n    opts.rng = opts.rng || map.rng;\n    opts.machine = opts.machine || 0;\n    const leader = _spawnLeader(info, map, x, y, opts);\n    if (!leader)\n        return null;\n    _spawnMembers(info, leader, map, opts);\n    return leader;\n}\nfunction _spawnLeader(info, map, x, y, opts) {\n    const leader = {\n        id: info.leader,\n        make: info.make,\n        x,\n        y,\n        machine: opts.machine || 0,\n    };\n    if (x >= 0 && y >= 0) {\n        if (!map.canSpawnActor(x, y, leader))\n            return null;\n    }\n    else {\n        [x, y] = _pickLeaderLoc(leader, map, opts) || [-1, -1];\n        if (x < 0 || y < 0) {\n            return null;\n        }\n    }\n    // pre-placement stuff?  machine? effect?\n    if (!_addLeader(leader, map, x, y, opts)) {\n        return null;\n    }\n    return leader;\n}\nfunction _addLeader(leader, map, x, y, _opts) {\n    return map.addActor(x, y, leader);\n}\nfunction _addMember(member, map, x, y, leader, _opts) {\n    member.leader = leader;\n    return map.addActor(x, y, member);\n}\nfunction _spawnMembers(horde, leader, map, opts) {\n    const entries = Object.entries(horde.members);\n    if (entries.length == 0)\n        return 0;\n    let count = 0;\n    entries.forEach(([kindId, config]) => {\n        const count = config.count.value(opts.rng);\n        for (let i = 0; i < count; ++i) {\n            _spawnMember(kindId, config, map, leader, opts);\n        }\n    });\n    return count;\n}\nfunction _spawnMember(id, member, map, leader, opts) {\n    const instance = {\n        id,\n        make: member.make,\n        x: -1,\n        y: -1,\n        machine: leader.machine,\n    };\n    const [x, y] = _pickMemberLoc(instance, map, leader, opts) || [-1, -1];\n    if (x < 0 || y < 0) {\n        return null;\n    }\n    // pre-placement stuff?  machine? effect?\n    if (!_addMember(instance, map, x, y, leader, opts)) {\n        return null;\n    }\n    return instance;\n}\nfunction _pickLeaderLoc(leader, map, opts) {\n    let loc = opts.rng.matchingLoc(map.width, map.height, (x, y) => {\n        if (!map.hasXY(x, y))\n            return false;\n        if (map.hasActor(x, y))\n            return false; // Brogue kills existing actors, but lets do this instead\n        if (!opts.canSpawn(x, y))\n            return false;\n        if (!map.canSpawnActor(x, y, leader))\n            return false;\n        // const cell = map.cell(x, y);\n        // if (leader.avoidsCell(cell)) return false;\n        // if (Map.isHallway(map, x, y)) {\n        //     return false;\n        // }\n        return true;\n    });\n    return loc;\n}\nfunction _pickMemberLoc(actor, map, leader, opts) {\n    let loc = opts.rng.matchingLocNear(leader.x, leader.y, (x, y) => {\n        if (!map.hasXY(x, y))\n            return false;\n        if (map.hasActor(x, y))\n            return false;\n        // if (map.fov.isAnyKindOfVisible(x, y)) return false;\n        if (!map.canSpawnActor(x, y, actor))\n            return false;\n        if (!opts.canSpawn(x, y))\n            return false;\n        return true;\n    });\n    return loc;\n}\n","import * as GWU from 'gw-utils';\nexport const items = [];\nexport function installItem(config, cfg) {\n    const info = {};\n    if (typeof config === 'string') {\n        info.id = config;\n        if (!cfg)\n            throw new Error('Need a configuration.');\n        config = cfg;\n    }\n    else {\n        info.id = config.id;\n    }\n    info.make = config.make || {};\n    info.tags = [];\n    if (config.tags) {\n        if (typeof config.tags === 'string') {\n            config.tags = config.tags.split(/[:|,]/g).map((t) => t.trim());\n        }\n        info.tags = config.tags;\n    }\n    info.frequency = GWU.frequency.make(config.frequency || 100);\n    info.flags = 0;\n    info.requiredTile = config.requiredTile || null;\n    info.feature = config.feature || null;\n    info.blueprint = config.blueprint || null;\n    items.push(info);\n    return info;\n}\nexport function pickItem(depth, tagRules, rng) {\n    rng = rng || GWU.random;\n    if (typeof tagRules !== 'string' && 'id' in tagRules) {\n        // @ts-ignore\n        return items.find((i) => i.id === tagRules.id) || null;\n    }\n    tagRules = typeof tagRules === 'string' ? tagRules : tagRules.tags;\n    const tagMatch = GWU.tags.makeMatch(tagRules);\n    const choices = items.filter((item) => tagMatch(item.tags));\n    if (choices.length == 0)\n        return null;\n    const freq = choices.map((info) => info.frequency(depth));\n    const choice = rng.weighted(freq);\n    return choices[choice] || null;\n}\nexport function makeItem(info) {\n    return {\n        id: info.id,\n        make: info.make,\n        x: -1,\n        y: -1,\n    };\n}\nexport function getItemInfo(id) {\n    return items.find((i) => i.id === id);\n}\n","import * as GWU from 'gw-utils';\nconst DIRS = GWU.xy.DIRS;\nexport function loadSite(site, cells, tiles) {\n    const w = site.width;\n    const h = site.height;\n    cells.forEach((line, j) => {\n        if (j >= h)\n            return;\n        for (let i = 0; i < w && i < line.length; ++i) {\n            const ch = line[i];\n            const tile = tiles[ch] || 'FLOOR';\n            site.setTile(i, j, tile);\n        }\n    });\n}\n// export function attachRoom(\n//     map: GWU.grid.NumGrid,\n//     roomGrid: GWU.grid.NumGrid,\n//     room: TYPES.Room,\n//     opts: TYPES.DigInfo\n// ) {\n//     // console.log('attachRoom');\n//     const doorSites = room.hall ? room.hall.doors : room.doors;\n//     const site = new SITE.GridSite(map);\n//     // Slide hyperspace across real space, in a random but predetermined order, until the room matches up with a wall.\n//     for (let i = 0; i < SITE.SEQ.length; i++) {\n//         const x = Math.floor(SITE.SEQ[i] / map.height);\n//         const y = SITE.SEQ[i] % map.height;\n//         if (!(map.get(x, y) == SITE.NOTHING)) continue;\n//         const dir = directionOfDoorSite(site, x, y);\n//         if (dir != GWU.xy.NO_DIRECTION) {\n//             const oppDir = (dir + 2) % 4;\n//             const door = doorSites[oppDir];\n//             if (!door) continue;\n//             const offsetX = x - door[0];\n//             const offsetY = y - door[1];\n//             if (door[0] != -1 && roomFitsAt(map, roomGrid, offsetX, offsetY)) {\n//                 // TYPES.Room fits here.\n//                 GWU.grid.offsetZip(\n//                     map,\n//                     roomGrid,\n//                     offsetX,\n//                     offsetY,\n//                     (_d, _s, i, j) => {\n//                         map[i][j] = opts.room.tile || SITE.FLOOR;\n//                     }\n//                 );\n//                 attachDoor(map, room, opts, x, y, oppDir);\n//                 // door[0] = -1;\n//                 // door[1] = -1;\n//                 room.translate(offsetX, offsetY);\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// export function attachDoor(\n//     map: GWU.grid.NumGrid,\n//     room: TYPES.Room,\n//     opts: TYPES.DigInfo,\n//     x: number,\n//     y: number,\n//     dir: number\n// ) {\n//     if (opts.door === 0) return; // no door at all\n//     const tile = opts.door || SITE.DOOR;\n//     map[x][y] = tile; // Door site.\n//     // most cases...\n//     if (!room.hall || !(room.hall.width > 1) || room.hall.dir !== dir) {\n//         return;\n//     }\n//     if (dir === GWU.utils.UP || dir === GWU.utils.DOWN) {\n//         let didSomething = true;\n//         let k = 1;\n//         while (didSomething) {\n//             didSomething = false;\n//             if (map.get(x - k, y) === 0) {\n//                 if (map.get(x - k, y - 1) && map.get(x - k, y + 1)) {\n//                     map[x - k][y] = tile;\n//                     didSomething = true;\n//                 }\n//             }\n//             if (map.get(x + k, y) === 0) {\n//                 if (map.get(x + k, y - 1) && map.get(x + k, y + 1)) {\n//                     map[x + k][y] = tile;\n//                     didSomething = true;\n//                 }\n//             }\n//             ++k;\n//         }\n//     } else {\n//         let didSomething = true;\n//         let k = 1;\n//         while (didSomething) {\n//             didSomething = false;\n//             if (map.get(x, y - k) === 0) {\n//                 if (map.get(x - 1, y - k) && map.get(x + 1, y - k)) {\n//                     map[x][y - k] = opts.door;\n//                     didSomething = true;\n//                 }\n//             }\n//             if (map.get(x, y + k) === 0) {\n//                 if (map.get(x - 1, y + k) && map.get(x + 1, y + k)) {\n//                     map[x][y + k] = opts.door;\n//                     didSomething = true;\n//                 }\n//             }\n//             ++k;\n//         }\n//     }\n// }\n// export function roomFitsAt(\n//     map: GWU.grid.NumGrid,\n//     roomGrid: GWU.grid.NumGrid,\n//     roomToSiteX: number,\n//     roomToSiteY: number\n// ) {\n//     let xRoom, yRoom, xSite, ySite, i, j;\n//     // console.log('roomFitsAt', roomToSiteX, roomToSiteY);\n//     for (xRoom = 0; xRoom < roomGrid.width; xRoom++) {\n//         for (yRoom = 0; yRoom < roomGrid.height; yRoom++) {\n//             if (roomGrid[xRoom][yRoom]) {\n//                 xSite = xRoom + roomToSiteX;\n//                 ySite = yRoom + roomToSiteY;\n//                 for (i = xSite - 1; i <= xSite + 1; i++) {\n//                     for (j = ySite - 1; j <= ySite + 1; j++) {\n//                         if (\n//                             !map.hasXY(i, j) ||\n//                             map.isBoundaryXY(i, j) ||\n//                             !(map.get(i, j) === SITE.NOTHING)\n//                         ) {\n//                             // console.log('- NO');\n//                             return false;\n//                         }\n//                     }\n//                 }\n//             }\n//         }\n//     }\n//     // console.log('- YES');\n//     return true;\n// }\n// If the indicated tile is a wall on the room stored in grid, and it could be the site of\n// a door out of that room, then return the outbound direction that the door faces.\n// Otherwise, return def.NO_DIRECTION.\nexport function directionOfDoorSite(site, x, y) {\n    let dir, solutionDir;\n    let newX, newY, oppX, oppY;\n    solutionDir = GWU.xy.NO_DIRECTION;\n    for (dir = 0; dir < 4; dir++) {\n        newX = x + DIRS[dir][0];\n        newY = y + DIRS[dir][1];\n        oppX = x - DIRS[dir][0];\n        oppY = y - DIRS[dir][1];\n        if (site.hasXY(oppX, oppY) &&\n            site.hasXY(newX, newY) &&\n            site.isFloor(oppX, oppY)) {\n            // This grid cell would be a valid tile on which to place a door that, facing outward, points dir.\n            if (solutionDir != GWU.xy.NO_DIRECTION) {\n                // Already claimed by another direction; no doors here!\n                return GWU.xy.NO_DIRECTION;\n            }\n            solutionDir = dir;\n        }\n    }\n    return solutionDir;\n}\nexport function chooseRandomDoorSites(site) {\n    let i, j, k, newX, newY;\n    let dir;\n    let doorSiteFailed;\n    const DOORS = [[], [], [], []];\n    // const grid = GWU.grid.alloc(sourceGrid.width, sourceGrid.height);\n    // grid.copy(sourceGrid);\n    const h = site.height;\n    const w = site.width;\n    for (i = 0; i < w; i++) {\n        for (j = 0; j < h; j++) {\n            if (site.isDiggable(i, j)) {\n                dir = directionOfDoorSite(site, i, j);\n                if (dir != GWU.xy.NO_DIRECTION) {\n                    // Trace a ray 10 spaces outward from the door site to make sure it doesn't intersect the room.\n                    // If it does, it's not a valid door site.\n                    newX = i + GWU.xy.DIRS[dir][0];\n                    newY = j + GWU.xy.DIRS[dir][1];\n                    doorSiteFailed = false;\n                    for (k = 0; k < 10 && site.hasXY(newX, newY) && !doorSiteFailed; k++) {\n                        if (site.isSet(newX, newY)) {\n                            doorSiteFailed = true;\n                        }\n                        newX += GWU.xy.DIRS[dir][0];\n                        newY += GWU.xy.DIRS[dir][1];\n                    }\n                    if (!doorSiteFailed) {\n                        DOORS[dir].push([i, j]);\n                    }\n                }\n            }\n        }\n    }\n    let doorSites = [];\n    // Pick four doors, one in each direction, and store them in doorSites[dir].\n    for (dir = 0; dir < 4; dir++) {\n        const loc = site.rng.item(DOORS[dir]) || [-1, -1];\n        doorSites[dir] = [loc[0], loc[1]];\n    }\n    // GWU.grid.free(grid);\n    return doorSites;\n}\n// export function forceRoomAtMapLoc(\n//     map: GWU.grid.NumGrid,\n//     xy: GWU.xy.Loc,\n//     roomGrid: GWU.grid.NumGrid,\n//     room: TYPES.Room,\n//     opts: TYPES.DigConfig\n// ) {\n//     // console.log('forceRoomAtMapLoc', xy);\n//     const site = new SITE.GridSite(map);\n//     // Slide room across map, in a random but predetermined order, until the room matches up with a wall.\n//     for (let i = 0; i < SITE.SEQ.length; i++) {\n//         const x = Math.floor(SITE.SEQ[i] / map.height);\n//         const y = SITE.SEQ[i] % map.height;\n//         if (roomGrid[x][y]) continue;\n//         const dir = directionOfDoorSite(site, x, y);\n//         if (dir != GWU.xy.NO_DIRECTION) {\n//             const dx = xy[0] - x;\n//             const dy = xy[1] - y;\n//             if (roomFitsAt(map, roomGrid, dx, dy)) {\n//                 GWU.grid.offsetZip(map, roomGrid, dx, dy, (_d, _s, i, j) => {\n//                     map[i][j] = opts.room.tile || SITE.FLOOR;\n//                 });\n//                 if (opts.room.door !== false) {\n//                     const door =\n//                         opts.room.door === true || !opts.room.door\n//                             ? SITE.DOOR\n//                             : opts.room.door;\n//                     map[xy[0]][xy[1]] = door; // Door site.\n//                 }\n//                 // TODO - Update doors - we may have to erase one...\n//                 room.translate(dx, dy);\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// export function attachRoomAtMapDoor(\n//     map: GWU.grid.NumGrid,\n//     mapDoors: GWU.xy.Loc[],\n//     roomGrid: GWU.grid.NumGrid,\n//     room: TYPES.Room,\n//     opts: TYPES.DigInfo\n// ): boolean | GWU.xy.Loc[] {\n//     const doorIndexes = site.rng.sequence(mapDoors.length);\n//     // console.log('attachRoomAtMapDoor', mapDoors.join(', '));\n//     // Slide hyperspace across real space, in a random but predetermined order, until the room matches up with a wall.\n//     for (let i = 0; i < doorIndexes.length; i++) {\n//         const index = doorIndexes[i];\n//         const door = mapDoors[index];\n//         if (!door) continue;\n//         const x = door[0];\n//         const y = door[1];\n//         if (attachRoomAtXY(map, x, y, roomGrid, room, opts)) {\n//             return true;\n//         }\n//     }\n//     return false;\n// }\n// function attachRoomAtXY(\n//     map: GWU.grid.NumGrid,\n//     x: number,\n//     y: number,\n//     roomGrid: GWU.grid.NumGrid,\n//     room: TYPES.Room,\n//     opts: TYPES.DigInfo\n// ): boolean | GWU.xy.Loc[] {\n//     const doorSites = room.hall ? room.hall.doors : room.doors;\n//     const dirs = site.rng.sequence(4);\n//     // console.log('attachRoomAtXY', x, y, doorSites.join(', '));\n//     for (let dir of dirs) {\n//         const oppDir = (dir + 2) % 4;\n//         const door = doorSites[oppDir];\n//         if (!door) continue;\n//         if (\n//             door[0] != -1 &&\n//             roomFitsAt(map, roomGrid, x - door[0], y - door[1])\n//         ) {\n//             // dungeon.debug(\"attachRoom: \", x, y, oppDir);\n//             // TYPES.Room fits here.\n//             const offX = x - door[0];\n//             const offY = y - door[1];\n//             GWU.grid.offsetZip(map, roomGrid, offX, offY, (_d, _s, i, j) => {\n//                 map[i][j] = opts.room.tile || SITE.FLOOR;\n//             });\n//             attachDoor(map, room, opts, x, y, oppDir);\n//             room.translate(offX, offY);\n//             // const newDoors = doorSites.map((site) => {\n//             //     const x0 = site[0] + offX;\n//             //     const y0 = site[1] + offY;\n//             //     if (x0 == x && y0 == y) return [-1, -1] as GWU.xy.Loc;\n//             //     return [x0, y0] as GWU.xy.Loc;\n//             // });\n//             return true;\n//         }\n//     }\n//     return false;\n// }\nexport function fillCostGrid(source, costGrid) {\n    costGrid.update((_v, x, y) => source.isPassable(x, y) ? 1 : GWU.path.OBSTRUCTION);\n}\nexport function siteDisruptedByXY(site, x, y, options = {}) {\n    var _a, _b, _c;\n    (_a = options.offsetX) !== null && _a !== void 0 ? _a : (options.offsetX = 0);\n    (_b = options.offsetY) !== null && _b !== void 0 ? _b : (options.offsetY = 0);\n    (_c = options.machine) !== null && _c !== void 0 ? _c : (options.machine = 0);\n    if (GWU.xy.arcCount(x, y, (i, j) => {\n        return site.isPassable(i, j);\n    }) <= 1)\n        return false;\n    const blockingGrid = GWU.grid.alloc(site.width, site.height);\n    blockingGrid[x][y] = 1;\n    const result = siteDisruptedBy(site, blockingGrid, options);\n    GWU.grid.free(blockingGrid);\n    return result;\n}\nexport function siteDisruptedBy(site, blockingGrid, options = {}) {\n    var _a, _b, _c;\n    (_a = options.offsetX) !== null && _a !== void 0 ? _a : (options.offsetX = 0);\n    (_b = options.offsetY) !== null && _b !== void 0 ? _b : (options.offsetY = 0);\n    (_c = options.machine) !== null && _c !== void 0 ? _c : (options.machine = 0);\n    const walkableGrid = GWU.grid.alloc(site.width, site.height);\n    let disrupts = false;\n    // Get all walkable locations after lake added\n    GWU.xy.forRect(site.width, site.height, (i, j) => {\n        const blockingX = i + options.offsetX;\n        const blockingY = j + options.offsetY;\n        if (blockingGrid.get(blockingX, blockingY)) {\n            if (site.isStairs(i, j)) {\n                disrupts = true;\n            }\n        }\n        else if (site.isPassable(i, j) &&\n            (site.getMachine(i, j) == 0 ||\n                site.getMachine(i, j) == options.machine)) {\n            walkableGrid[i][j] = 1;\n        }\n    });\n    if (options.updateWalkable) {\n        if (!options.updateWalkable(walkableGrid)) {\n            return true;\n        }\n    }\n    let first = true;\n    for (let i = 0; i < walkableGrid.width && !disrupts; ++i) {\n        for (let j = 0; j < walkableGrid.height && !disrupts; ++j) {\n            if (walkableGrid[i][j] == 1) {\n                if (first) {\n                    walkableGrid.floodFill(i, j, 1, 2);\n                    first = false;\n                }\n                else {\n                    disrupts = true;\n                }\n            }\n        }\n    }\n    // console.log('WALKABLE GRID');\n    // walkableGrid.dump();\n    GWU.grid.free(walkableGrid);\n    return disrupts;\n}\nexport function siteDisruptedSize(site, blockingGrid, blockingToMapX = 0, blockingToMapY = 0) {\n    const walkableGrid = GWU.grid.alloc(site.width, site.height);\n    let disrupts = 0;\n    // Get all walkable locations after lake added\n    GWU.xy.forRect(site.width, site.height, (i, j) => {\n        const lakeX = i + blockingToMapX;\n        const lakeY = j + blockingToMapY;\n        if (blockingGrid.get(lakeX, lakeY)) {\n            if (site.isStairs(i, j)) {\n                disrupts = site.width * site.height;\n            }\n        }\n        else if (site.isPassable(i, j)) {\n            walkableGrid[i][j] = 1;\n        }\n    });\n    if (disrupts)\n        return disrupts;\n    let first = true;\n    let nextId = 2;\n    let minSize = site.width * site.height;\n    for (let i = 0; i < walkableGrid.width; ++i) {\n        for (let j = 0; j < walkableGrid.height; ++j) {\n            if (walkableGrid[i][j] == 1) {\n                const disrupted = walkableGrid.floodFill(i, j, 1, nextId++);\n                minSize = Math.min(minSize, disrupted);\n                if (first) {\n                    first = false;\n                }\n                else {\n                    disrupts = minSize;\n                }\n            }\n        }\n    }\n    // console.log('WALKABLE GRID');\n    // walkableGrid.dump();\n    GWU.grid.free(walkableGrid);\n    return disrupts;\n}\nexport function computeDistanceMap(site, distanceMap, originX, originY, maxDistance) {\n    distanceMap.reset(site.width, site.height);\n    distanceMap.setGoal(originX, originY);\n    distanceMap.calculate((x, y) => {\n        if (!site.hasXY(x, y))\n            return GWU.path.OBSTRUCTION;\n        if (site.isPassable(x, y))\n            return GWU.path.OK;\n        if (site.blocksDiagonal(x, y))\n            return GWU.path.OBSTRUCTION;\n        return GWU.path.BLOCKED;\n    }, false, maxDistance);\n}\nexport function clearInteriorFlag(site, machine) {\n    for (let i = 0; i < site.width; i++) {\n        for (let j = 0; j < site.height; j++) {\n            if (site.getMachine(i, j) == machine && !site.needsMachine(i, j)) {\n                site.setMachine(i, j, 0);\n            }\n        }\n    }\n}\n","import * as GWU from 'gw-utils';\nexport function analyze(map, updateChokeCounts = true) {\n    updateLoopiness(map);\n    updateChokepoints(map, updateChokeCounts);\n}\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n// TODO - Move to Map?\nexport function updateChokepoints(map, updateCounts) {\n    const passMap = GWU.grid.alloc(map.width, map.height);\n    const grid = GWU.grid.alloc(map.width, map.height);\n    for (let i = 0; i < map.width; i++) {\n        for (let j = 0; j < map.height; j++) {\n            if ((map.blocksPathing(i, j) || map.blocksMove(i, j)) &&\n                !map.isSecretDoor(i, j)) {\n                // cell.flags &= ~Flags.Cell.IS_IN_LOOP;\n                passMap[i][j] = 0;\n            }\n            else {\n                // cell.flags |= Flags.Cell.IS_IN_LOOP;\n                passMap[i][j] = 1;\n            }\n        }\n    }\n    let passableArcCount;\n    // done finding loops; now flag chokepoints\n    for (let i = 1; i < passMap.width - 1; i++) {\n        for (let j = 1; j < passMap.height - 1; j++) {\n            map.clearChokepoint(i, j);\n            if (passMap[i][j] && !map.isInLoop(i, j)) {\n                passableArcCount = 0;\n                for (let dir = 0; dir < 8; dir++) {\n                    const oldX = i + GWU.xy.CLOCK_DIRS[(dir + 7) % 8][0];\n                    const oldY = j + GWU.xy.CLOCK_DIRS[(dir + 7) % 8][1];\n                    const newX = i + GWU.xy.CLOCK_DIRS[dir][0];\n                    const newY = j + GWU.xy.CLOCK_DIRS[dir][1];\n                    if ((map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                        passMap[newX][newY]) !=\n                        (map.hasXY(oldX, oldY) && // RUT.Map.makeValidXy(map, oldXy) &&\n                            passMap[oldX][oldY])) {\n                        if (++passableArcCount > 2) {\n                            if ((!passMap[i - 1][j] && !passMap[i + 1][j]) ||\n                                (!passMap[i][j - 1] && !passMap[i][j + 1])) {\n                                map.setChokepoint(i, j);\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (updateCounts) {\n        // Done finding chokepoints; now create a chokepoint map.\n        // The chokepoint map is a number for each passable tile. If the tile is a chokepoint,\n        // then the number indicates the number of tiles that would be rendered unreachable if the\n        // chokepoint were blocked. If the tile is not a chokepoint, then the number indicates\n        // the number of tiles that would be rendered unreachable if the nearest exit chokepoint\n        // were blocked.\n        // The cost of all of this is one depth-first flood-fill per open point that is adjacent to a chokepoint.\n        // Start by setting the chokepoint values really high, and roping off room machines.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                map.setChokeCount(i, j, 30000);\n                // Not sure why this was done in Brogue\n                // if (map.cell(i, j).flags.cell & Flags.Cell.IS_IN_ROOM_MACHINE) {\n                //     passMap[i][j] = 0;\n                // }\n            }\n        }\n        // Scan through and find a chokepoint next to an open point.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                if (passMap[i][j] && map.isChokepoint(i, j)) {\n                    for (let dir = 0; dir < 4; dir++) {\n                        const newX = i + GWU.xy.DIRS[dir][0];\n                        const newY = j + GWU.xy.DIRS[dir][1];\n                        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                            passMap[newX][newY] &&\n                            !map.isChokepoint(newX, newY)) {\n                            // OK, (newX, newY) is an open point and (i, j) is a chokepoint.\n                            // Pretend (i, j) is blocked by changing passMap, and run a flood-fill cell count starting on (newX, newY).\n                            // Keep track of the flooded region in grid[][].\n                            grid.fill(0);\n                            passMap[i][j] = 0;\n                            let cellCount = floodFillCount(map, grid, passMap, newX, newY);\n                            passMap[i][j] = 1;\n                            // CellCount is the size of the region that would be obstructed if the chokepoint were blocked.\n                            // CellCounts less than 4 are not useful, so we skip those cases.\n                            if (cellCount >= 4) {\n                                // Now, on the chokemap, all of those flooded cells should take the lesser of their current value or this resultant number.\n                                for (let i2 = 0; i2 < grid.width; i2++) {\n                                    for (let j2 = 0; j2 < grid.height; j2++) {\n                                        if (grid[i2][j2] &&\n                                            cellCount <\n                                                map.getChokeCount(i2, j2)) {\n                                            map.setChokeCount(i2, j2, cellCount);\n                                            map.clearGateSite(i2, j2);\n                                        }\n                                    }\n                                }\n                                // The chokepoint itself should also take the lesser of its current value or the flood count.\n                                if (cellCount < map.getChokeCount(i, j)) {\n                                    map.setChokeCount(i, j, cellCount);\n                                    map.setGateSite(i, j);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    GWU.grid.free(passMap);\n    GWU.grid.free(grid);\n}\n// Assumes it is called with respect to a passable (startX, startY), and that the same is not already included in results.\n// Returns 10000 if the area included an area machine.\nexport function floodFillCount(map, results, passMap, startX, startY) {\n    function getCount(x, y) {\n        let count = passMap[x][y] == 2 ? 5000 : 1;\n        if (map.isAreaMachine(x, y)) {\n            count = 10000;\n        }\n        return count;\n    }\n    let count = 0;\n    const todo = [[startX, startY]];\n    const free = [];\n    while (todo.length) {\n        const item = todo.pop();\n        free.push(item);\n        const x = item[0];\n        const y = item[1];\n        if (results[x][y])\n            continue;\n        results[x][y] = 1;\n        count += getCount(x, y);\n        for (let dir = 0; dir < 4; dir++) {\n            const newX = x + GWU.xy.DIRS[dir][0];\n            const newY = y + GWU.xy.DIRS[dir][1];\n            if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                passMap[newX][newY] &&\n                !results[newX][newY]) {\n                const item = free.pop() || [-1, -1];\n                item[0] = newX;\n                item[1] = newY;\n                todo.push(item);\n            }\n        }\n    }\n    return Math.min(count, 10000);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n// TODO = Move loopiness to Map\nexport function updateLoopiness(map) {\n    resetLoopiness(map);\n    checkLoopiness(map);\n    cleanLoopiness(map);\n}\nexport function resetLoopiness(map) {\n    GWU.xy.forRect(map.width, map.height, (x, y) => {\n        if ((map.blocksPathing(x, y) || map.blocksMove(x, y)) &&\n            !map.isSecretDoor(x, y)) {\n            map.clearInLoop(x, y);\n            // cell.flags.cell &= ~Flags.Cell.IS_IN_LOOP;\n            // passMap[i][j] = false;\n        }\n        else {\n            map.setInLoop(x, y);\n            // cell.flags.cell |= Flags.Cell.IS_IN_LOOP;\n            // passMap[i][j] = true;\n        }\n    });\n}\nexport function checkLoopiness(map) {\n    let inString;\n    let newX, newY, dir, sdir;\n    let numStrings, maxStringLength, currentStringLength;\n    const todo = GWU.grid.alloc(map.width, map.height, 1);\n    let tryAgain = true;\n    while (tryAgain) {\n        tryAgain = false;\n        todo.forEach((v, x, y) => {\n            if (!v)\n                return;\n            // const cell = map.cell(x, y);\n            todo[x][y] = 0;\n            if (!map.isInLoop(x, y)) {\n                return;\n            }\n            // find an unloopy neighbor to start on\n            for (sdir = 0; sdir < 8; sdir++) {\n                newX = x + GWU.xy.CLOCK_DIRS[sdir][0];\n                newY = y + GWU.xy.CLOCK_DIRS[sdir][1];\n                if (!map.hasXY(newX, newY))\n                    continue;\n                // const cell = map.cell(newX, newY);\n                if (!map.isInLoop(newX, newY)) {\n                    break;\n                }\n            }\n            if (sdir == 8) {\n                // no unloopy neighbors\n                return; // leave cell loopy\n            }\n            // starting on this unloopy neighbor,\n            // work clockwise and count up:\n            // (a) the number of strings of loopy neighbors, and\n            // (b) the length of the longest such string.\n            numStrings = maxStringLength = currentStringLength = 0;\n            inString = false;\n            for (dir = sdir; dir < sdir + 8; dir++) {\n                newX = x + GWU.xy.CLOCK_DIRS[dir % 8][0];\n                newY = y + GWU.xy.CLOCK_DIRS[dir % 8][1];\n                if (!map.hasXY(newX, newY))\n                    continue;\n                // const newCell = map.cell(newX, newY);\n                if (map.isInLoop(newX, newY)) {\n                    currentStringLength++;\n                    if (!inString) {\n                        numStrings++;\n                        inString = true;\n                        if (numStrings > 1) {\n                            break; // more than one string here; leave loopy\n                        }\n                    }\n                }\n                else if (inString) {\n                    if (currentStringLength > maxStringLength) {\n                        maxStringLength = currentStringLength;\n                    }\n                    currentStringLength = 0;\n                    inString = false;\n                }\n            }\n            if (inString && currentStringLength > maxStringLength) {\n                maxStringLength = currentStringLength;\n            }\n            if (numStrings == 1 && maxStringLength <= 4) {\n                map.clearInLoop(x, y);\n                // cell.clearCellFlag(Flags.Cell.IS_IN_LOOP);\n                // console.log(x, y, numStrings, maxStringLength);\n                // map.dump((c) =>\n                //     c.hasCellFlag(Flags.Cell.IS_IN_LOOP) ? '*' : ' '\n                // );\n                for (dir = 0; dir < 8; dir++) {\n                    newX = x + GWU.xy.CLOCK_DIRS[dir][0];\n                    newY = y + GWU.xy.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) && map.isInLoop(newX, newY)) {\n                        todo[newX][newY] = 1;\n                        tryAgain = true;\n                    }\n                }\n            }\n        });\n    }\n}\nexport function fillInnerLoopGrid(map, grid) {\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            // const cell = map.cell(x, y);\n            if (map.isInLoop(x, y)) {\n                grid[x][y] = 1;\n            }\n            else if (x > 0 && y > 0) {\n                // const up = map.cell(x, y - 1);\n                // const left = map.cell(x - 1, y);\n                if (map.isInLoop(x, y - 1) &&\n                    map.isInLoop(x - 1, y)\n                // up.flags.cell & Flags.Cell.IS_IN_LOOP &&\n                // left.flags.cell & Flags.Cell.IS_IN_LOOP\n                ) {\n                    grid[x][y] = 1;\n                }\n            }\n        }\n    }\n}\nexport function cleanLoopiness(map) {\n    // remove extraneous loop markings\n    const grid = GWU.grid.alloc(map.width, map.height);\n    fillInnerLoopGrid(map, grid);\n    // const xy = { x: 0, y: 0 };\n    let designationSurvives;\n    for (let i = 0; i < grid.width; i++) {\n        for (let j = 0; j < grid.height; j++) {\n            // const cell = map.cell(i, j);\n            if (map.isInLoop(i, j)) {\n                designationSurvives = false;\n                for (let dir = 0; dir < 8; dir++) {\n                    let newX = i + GWU.xy.CLOCK_DIRS[dir][0];\n                    let newY = j + GWU.xy.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, xy, newX, newY) &&\n                        !grid[newX][newY] &&\n                        !map.isInLoop(newX, newY)) {\n                        designationSurvives = true;\n                        break;\n                    }\n                }\n                if (!designationSurvives) {\n                    grid[i][j] = 1;\n                    map.clearInLoop(i, j);\n                    // map.cell(i, j).flags.cell &= ~Flags.Cell.IS_IN_LOOP;\n                }\n            }\n        }\n    }\n    GWU.grid.free(grid);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n","import * as GWU from 'gw-utils';\nimport * as Utils from './utils';\nimport * as TILE from './tile';\nimport * as ANALYZE from './analyze';\nexport const Flags = GWU.flag.make([\n    'CHOKEPOINT',\n    'GATE_SITE',\n    'IN_LOOP',\n    'IN_MACHINE',\n    'IN_AREA_MACHINE',\n    'IMPREGNABLE',\n]);\nexport class Site {\n    constructor(width, height, opts = {}) {\n        this.rng = GWU.rng.random;\n        this.items = [];\n        this.actors = [];\n        this.depth = 0;\n        this.machineCount = 0;\n        this._tiles = GWU.grid.alloc(width, height);\n        this._doors = GWU.grid.alloc(width, height);\n        this._flags = GWU.grid.alloc(width, height);\n        this._machine = GWU.grid.alloc(width, height);\n        this._chokeCounts = GWU.grid.alloc(width, height);\n        if (opts.rng) {\n            this.rng = opts.rng;\n        }\n    }\n    free() {\n        GWU.grid.free(this._tiles);\n        GWU.grid.free(this._doors);\n        GWU.grid.free(this._flags);\n        GWU.grid.free(this._machine);\n        GWU.grid.free(this._chokeCounts);\n    }\n    clear() {\n        this._tiles.fill(0);\n        this._doors.fill(0);\n        this._flags.fill(0);\n        this._machine.fill(0);\n        this._chokeCounts.fill(0);\n        // this.depth = 0;\n        this.machineCount = 0;\n    }\n    dump(fmt) {\n        if (fmt) {\n            return this._tiles.dump(fmt);\n        }\n        this._tiles.dump((c) => TILE.getTile(c).ch || '?');\n    }\n    // drawInto(buffer: GWU.canvas.Buffer): void {\n    //     buffer.blackOut();\n    //     this.tiles.forEach((t, x, y) => {\n    //         const tile = GWM.tile.get(t);\n    //         buffer.drawSprite(x, y, tile.sprite);\n    //     });\n    // }\n    copy(other) {\n        this.depth = other.depth;\n        this.machineCount = other.machineCount;\n        this._tiles.copy(other._tiles);\n        this._doors.copy(other._doors);\n        this._machine.copy(other._machine);\n        this._flags.copy(other._flags);\n        this._chokeCounts.copy(other._chokeCounts);\n        this.rng = other.rng;\n        this.items = other.items.slice();\n        this.actors = other.actors.slice();\n    }\n    copyTiles(other, offsetX = 0, offsetY = 0) {\n        GWU.xy.forRect(this.width, this.height, (x, y) => {\n            const otherX = x - offsetX;\n            const otherY = y - offsetY;\n            const v = other._tiles.get(otherX, otherY);\n            if (!v)\n                return;\n            this._tiles[x][y] = v;\n        });\n    }\n    setSeed(seed) {\n        this.rng.seed(seed);\n    }\n    get width() {\n        return this._tiles.width;\n    }\n    get height() {\n        return this._tiles.height;\n    }\n    hasXY(x, y) {\n        return this._tiles.hasXY(x, y);\n    }\n    isBoundaryXY(x, y) {\n        return this._tiles.isBoundaryXY(x, y);\n    }\n    isPassable(x, y) {\n        return (this.isFloor(x, y) ||\n            this.isDoor(x, y) ||\n            this.isBridge(x, y) ||\n            this.isStairs(x, y) ||\n            this.isShallow(x, y));\n    }\n    isNothing(x, y) {\n        return this.hasTile(x, y, 'NOTHING');\n    }\n    isDiggable(x, y) {\n        return this.hasTile(x, y, 'NOTHING') || this.hasTile(x, y, 'WALL');\n    }\n    isProtected(_x, _y) {\n        return false;\n    }\n    isFloor(x, y) {\n        return this.hasTile(x, y, 'FLOOR');\n    }\n    isDoor(x, y) {\n        return this.hasTile(x, y, 'DOOR');\n    }\n    isSecretDoor(x, y) {\n        return this.hasTile(x, y, 'SECRET_DOOR');\n    }\n    isBridge(x, y) {\n        return this.hasTile(x, y, 'BRIDGE');\n    }\n    isWall(x, y) {\n        return this.blocksMove(x, y) && this.blocksVision(x, y);\n    }\n    blocksMove(x, y) {\n        return TILE.getTile(this._tiles[x][y]).blocksMove || false;\n    }\n    blocksDiagonal(x, y) {\n        return this.isNothing(x, y) || this.isWall(x, y);\n    }\n    blocksPathing(x, y) {\n        return (this.isNothing(x, y) ||\n            this.isWall(x, y) ||\n            this.isDeep(x, y) ||\n            this.isStairs(x, y));\n    }\n    blocksVision(x, y) {\n        return TILE.getTile(this._tiles[x][y]).blocksVision || false;\n    }\n    blocksItems(x, y) {\n        return (this.blocksPathing(x, y) ||\n            this.isChokepoint(x, y) ||\n            this.isInLoop(x, y) ||\n            this.isInMachine(x, y));\n        // site.hasCellFlag(\n        //     x,\n        //     y,\n        //     GWM.flags.Cell.IS_CHOKEPOINT |\n        //         GWM.flags.Cell.IS_IN_LOOP |\n        //         GWM.flags.Cell.IS_IN_MACHINE\n        // );\n    }\n    blocksEffects(x, y) {\n        return this.isWall(x, y);\n    }\n    isStairs(x, y) {\n        return (this.hasTile(x, y, 'UP_STAIRS') || this.hasTile(x, y, 'DOWN_STAIRS'));\n    }\n    isDeep(x, y) {\n        return this.hasTile(x, y, 'DEEP');\n    }\n    isShallow(x, y) {\n        return this.hasTile(x, y, 'SHALLOW');\n    }\n    isAnyLiquid(x, y) {\n        return this.isDeep(x, y) || this.isShallow(x, y);\n    }\n    isSet(x, y) {\n        return (this._tiles.get(x, y) || 0) > 0;\n    }\n    tileBlocksMove(tile) {\n        return TILE.getTile(tile).blocksMove || false;\n    }\n    setTile(x, y, tile, _opts = {}) {\n        // if (tile instanceof GWM.tile.Tile) {\n        //     tile = tile.index;\n        // }\n        if (!this._tiles.hasXY(x, y))\n            return false;\n        if (typeof tile === 'string') {\n            tile = TILE.tileId(tile);\n        }\n        // priority checks...\n        this._tiles[x][y] = tile;\n        return true;\n    }\n    clearTile(x, y) {\n        if (this.hasXY(x, y)) {\n            this._tiles[x][y] = 0;\n        }\n    }\n    getTile(x, y) {\n        const id = this._tiles[x][y];\n        return TILE.getTile(id);\n    }\n    makeImpregnable(x, y) {\n        this._flags[x][y] |= Flags.IMPREGNABLE;\n        // site.setCellFlag(x, y, GWM.flags.Cell.IMPREGNABLE);\n    }\n    isImpregnable(x, y) {\n        return !!(this._flags[x][y] & Flags.IMPREGNABLE);\n    }\n    hasTile(x, y, tile) {\n        if (typeof tile === 'string') {\n            tile = TILE.tileId(tile);\n        }\n        return this.hasXY(x, y) && this._tiles[x][y] == tile;\n    }\n    getChokeCount(x, y) {\n        return this._chokeCounts[x][y];\n    }\n    setChokeCount(x, y, count) {\n        this._chokeCounts[x][y] = count;\n    }\n    setChokepoint(x, y) {\n        this._flags[x][y] |= Flags.CHOKEPOINT;\n    }\n    isChokepoint(x, y) {\n        return !!(this._flags[x][y] & Flags.CHOKEPOINT);\n    }\n    clearChokepoint(x, y) {\n        this._flags[x][y] &= ~Flags.CHOKEPOINT;\n    }\n    setGateSite(x, y) {\n        this._flags[x][y] |= Flags.GATE_SITE;\n    }\n    isGateSite(x, y) {\n        return !!(this._flags[x][y] & Flags.GATE_SITE);\n    }\n    clearGateSite(x, y) {\n        this._flags[x][y] &= ~Flags.GATE_SITE;\n    }\n    setInLoop(x, y) {\n        this._flags[x][y] |= Flags.IN_LOOP;\n    }\n    isInLoop(x, y) {\n        return !!(this._flags[x][y] & Flags.IN_LOOP);\n    }\n    clearInLoop(x, y) {\n        this._flags[x][y] &= ~Flags.IN_LOOP;\n    }\n    analyze(updateChokeCounts = true) {\n        ANALYZE.analyze(this, updateChokeCounts);\n    }\n    snapshot() {\n        const other = new Site(this.width, this.height);\n        other.copy(this);\n        return other;\n    }\n    restore(snapshot) {\n        this.copy(snapshot);\n    }\n    nextMachineId() {\n        this.machineCount += 1;\n        return this.machineCount;\n    }\n    setMachine(x, y, id, isRoom) {\n        this._machine[x][y] = id;\n        const flag = isRoom ? Flags.IN_MACHINE : Flags.IN_AREA_MACHINE;\n        this._flags[x][y] |= flag;\n    }\n    isAreaMachine(x, y) {\n        return !!(this._machine[x][y] & Flags.IN_AREA_MACHINE);\n    }\n    isInMachine(x, y) {\n        return this._machine[x][y] > 0;\n    }\n    getMachine(x, y) {\n        return this._machine[x][y];\n    }\n    needsMachine(_x, _y) {\n        // site.hasCellFlag(\n        //     i,\n        //     j,\n        //     GWM.flags.Cell.IS_WIRED | GWM.flags.Cell.IS_CIRCUIT_BREAKER\n        // );\n        return false;\n    }\n    updateDoorDirs() {\n        this._doors.update((_v, x, y) => {\n            return Utils.directionOfDoorSite(this, x, y);\n        });\n    }\n    getDoorDir(x, y) {\n        return this._doors[x][y];\n    }\n    // tileBlocksMove(tile: number): boolean {\n    //     return (\n    //         tile === WALL ||\n    //         tile === DEEP ||\n    //         tile === IMPREGNABLE ||\n    //         tile === DIG.NOTHING\n    //     );\n    // }\n    isOccupied(x, y) {\n        return this.hasActor(x, y) || this.hasItem(x, y);\n    }\n    canSpawnActor(x, y, _actor) {\n        // const cell = map.cell(x, y);\n        // if (actor.avoidsCell(cell)) return false;\n        // if (Map.isHallway(map, x, y)) {\n        //     return false;\n        // }\n        return this.isFloor(x, y);\n    }\n    eachActor(cb) {\n        this.actors.forEach(cb);\n    }\n    addActor(x, y, a) {\n        a.x = x;\n        a.y = y;\n        this.actors.push(a);\n        return this.actors.length;\n    }\n    getActor(i) {\n        return this.actors[i];\n    }\n    // removeActor(a: HORDE.ActorInstance): void {\n    //     GWU.arrayDelete(this.actors, a);\n    // }\n    forbidsActor(x, y, _a) {\n        return !this.isFloor(x, y);\n    }\n    hasActor(x, y) {\n        return this.actors.some((a) => a.x === x && a.y === y);\n    }\n    eachItem(cb) {\n        this.items.forEach(cb);\n    }\n    addItem(x, y, i) {\n        i.x = x;\n        i.y = y;\n        this.items.push(i);\n        return this.items.length;\n    }\n    getItem(i) {\n        return this.items[i];\n    }\n    // removeItem(i: ITEM.ItemInstance): void {\n    //     GWU.arrayDelete(this.items, i);\n    // }\n    forbidsItem(x, y, _i) {\n        return !this.isFloor(x, y);\n    }\n    hasItem(x, y) {\n        return this.items.some((i) => i.x === x && i.y === y);\n    }\n}\n","export class NullLogger {\n    onDigFirstRoom() { }\n    onRoomCandidate() { }\n    onRoomFailed() { }\n    onRoomSuccess() { }\n    onLoopsAdded() { }\n    onLakesAdded() { }\n    onBridgesAdded() { }\n    onStairsAdded() { }\n    onBuildError() { }\n    onBlueprintPick() { }\n    onBlueprintCandidates() { }\n    onBlueprintStart() { }\n    onBlueprintInterior() { }\n    onBlueprintFail() { }\n    onBlueprintSuccess() { }\n    onStepStart() { }\n    onStepCandidates() { }\n    onStepInstanceSuccess() { }\n    onStepInstanceFail() { }\n    onStepSuccess() { }\n    onStepFail() { }\n}\n","import * as GWU from 'gw-utils';\nimport * as FEATURE from '../feature';\nconst Fl = GWU.flag.fl;\nexport var StepFlags;\n(function (StepFlags) {\n    StepFlags[StepFlags[\"BS_OUTSOURCE_ITEM_TO_MACHINE\"] = Fl(1)] = \"BS_OUTSOURCE_ITEM_TO_MACHINE\";\n    StepFlags[StepFlags[\"BS_BUILD_VESTIBULE\"] = Fl(2)] = \"BS_BUILD_VESTIBULE\";\n    StepFlags[StepFlags[\"BS_ADOPT_ITEM\"] = Fl(3)] = \"BS_ADOPT_ITEM\";\n    StepFlags[StepFlags[\"BS_BUILD_AT_ORIGIN\"] = Fl(4)] = \"BS_BUILD_AT_ORIGIN\";\n    StepFlags[StepFlags[\"BS_PERMIT_BLOCKING\"] = Fl(5)] = \"BS_PERMIT_BLOCKING\";\n    StepFlags[StepFlags[\"BS_TREAT_AS_BLOCKING\"] = Fl(6)] = \"BS_TREAT_AS_BLOCKING\";\n    StepFlags[StepFlags[\"BS_NEAR_ORIGIN\"] = Fl(7)] = \"BS_NEAR_ORIGIN\";\n    StepFlags[StepFlags[\"BS_FAR_FROM_ORIGIN\"] = Fl(8)] = \"BS_FAR_FROM_ORIGIN\";\n    StepFlags[StepFlags[\"BS_IN_VIEW_OF_ORIGIN\"] = Fl(9)] = \"BS_IN_VIEW_OF_ORIGIN\";\n    StepFlags[StepFlags[\"BS_IN_PASSABLE_VIEW_OF_ORIGIN\"] = Fl(10)] = \"BS_IN_PASSABLE_VIEW_OF_ORIGIN\";\n    StepFlags[StepFlags[\"BS_HORDE_TAKES_ITEM\"] = Fl(11)] = \"BS_HORDE_TAKES_ITEM\";\n    StepFlags[StepFlags[\"BS_HORDE_SLEEPING\"] = Fl(12)] = \"BS_HORDE_SLEEPING\";\n    StepFlags[StepFlags[\"BS_HORDE_FLEEING\"] = Fl(13)] = \"BS_HORDE_FLEEING\";\n    StepFlags[StepFlags[\"BS_HORDES_DORMANT\"] = Fl(14)] = \"BS_HORDES_DORMANT\";\n    StepFlags[StepFlags[\"BS_ITEM_IS_KEY\"] = Fl(15)] = \"BS_ITEM_IS_KEY\";\n    StepFlags[StepFlags[\"BS_ITEM_IDENTIFIED\"] = Fl(16)] = \"BS_ITEM_IDENTIFIED\";\n    StepFlags[StepFlags[\"BS_ITEM_PLAYER_AVOIDS\"] = Fl(17)] = \"BS_ITEM_PLAYER_AVOIDS\";\n    StepFlags[StepFlags[\"BS_EVERYWHERE\"] = Fl(18)] = \"BS_EVERYWHERE\";\n    StepFlags[StepFlags[\"BS_ALTERNATIVE\"] = Fl(19)] = \"BS_ALTERNATIVE\";\n    StepFlags[StepFlags[\"BS_ALTERNATIVE_2\"] = Fl(20)] = \"BS_ALTERNATIVE_2\";\n    StepFlags[StepFlags[\"BS_BUILD_IN_WALLS\"] = Fl(21)] = \"BS_BUILD_IN_WALLS\";\n    StepFlags[StepFlags[\"BS_BUILD_ANYWHERE_ON_LEVEL\"] = Fl(22)] = \"BS_BUILD_ANYWHERE_ON_LEVEL\";\n    StepFlags[StepFlags[\"BS_REPEAT_UNTIL_NO_PROGRESS\"] = Fl(23)] = \"BS_REPEAT_UNTIL_NO_PROGRESS\";\n    StepFlags[StepFlags[\"BS_IMPREGNABLE\"] = Fl(24)] = \"BS_IMPREGNABLE\";\n    StepFlags[StepFlags[\"BS_NO_BLOCK_ORIGIN\"] = Fl(25)] = \"BS_NO_BLOCK_ORIGIN\";\n    // TODO - BS_ALLOW_IN_HALLWAY instead?\n    StepFlags[StepFlags[\"BS_NOT_IN_HALLWAY\"] = Fl(27)] = \"BS_NOT_IN_HALLWAY\";\n    StepFlags[StepFlags[\"BS_ALLOW_BOUNDARY\"] = Fl(28)] = \"BS_ALLOW_BOUNDARY\";\n    StepFlags[StepFlags[\"BS_SKELETON_KEY\"] = Fl(29)] = \"BS_SKELETON_KEY\";\n    StepFlags[StepFlags[\"BS_KEY_DISPOSABLE\"] = Fl(30)] = \"BS_KEY_DISPOSABLE\";\n})(StepFlags || (StepFlags = {}));\nexport class BuildStep {\n    // next: null = null;\n    // id = 'n/a';\n    constructor(cfg = {}) {\n        this.tile = null;\n        this.flags = 0;\n        this.pad = 0;\n        this.item = null;\n        this.horde = null;\n        this.feature = null;\n        this.chance = 0;\n        this.index = -1;\n        this.tile = cfg.tile || null;\n        if (cfg.flags) {\n            this.flags = GWU.flag.from(StepFlags, cfg.flags);\n        }\n        if (cfg.pad) {\n            this.pad = cfg.pad;\n        }\n        this.count = GWU.range.make(cfg.count || 1);\n        if (typeof cfg.item === 'string') {\n            this.item = { tags: cfg.item };\n        }\n        else if (cfg.item) {\n            // @ts-ignore\n            this.item = Object.assign({ tags: '' }, cfg.item);\n            if (this.item.feature) {\n                this.item.feature = FEATURE.make(this.item.feature);\n            }\n        }\n        else {\n            this.item = null;\n        }\n        if (cfg.horde) {\n            if (cfg.horde === true) {\n                this.horde = { tags: '' };\n            }\n            else if (typeof cfg.horde === 'string') {\n                this.horde = { tags: cfg.horde };\n            }\n            else {\n                // @ts-ignore\n                this.horde = Object.assign({ tags: '' }, cfg.horde);\n                if (this.horde.feature) {\n                    this.horde.feature = FEATURE.make(this.horde.feature);\n                }\n            }\n        }\n        else {\n            this.horde = null;\n        }\n        if (cfg.feature) {\n            this.feature = FEATURE.make(cfg.feature);\n        }\n        else {\n            this.feature = null;\n        }\n        if (this.item && this.flags & StepFlags.BS_ADOPT_ITEM) {\n            throw new Error('Cannot have blueprint step with item and BS_ADOPT_ITEM.');\n        }\n        if (this.buildAtOrigin && this.count.hi > 1) {\n            throw new Error('Cannot have count > 1 for step with BS_BUILD_AT_ORIGIN.');\n        }\n        if (this.buildAtOrigin && this.repeatUntilNoProgress) {\n            throw new Error('Cannot have BS_BUILD_AT_ORIGIN and BS_REPEAT_UNTIL_NO_PROGRESS together in a build step.');\n        }\n        if (this.hordeTakesItem && !this.horde) {\n            throw new Error('Cannot have BS_HORDE_TAKES_ITEM without a horde configured.');\n        }\n    }\n    get allowBoundary() {\n        return !!(this.flags & StepFlags.BS_ALLOW_BOUNDARY);\n    }\n    get notInHallway() {\n        return !!(this.flags & StepFlags.BS_NOT_IN_HALLWAY);\n    }\n    get buildInWalls() {\n        return !!(this.flags & StepFlags.BS_BUILD_IN_WALLS);\n    }\n    get buildAnywhere() {\n        return !!(this.flags & StepFlags.BS_BUILD_ANYWHERE_ON_LEVEL);\n    }\n    get repeatUntilNoProgress() {\n        return !!(this.flags & StepFlags.BS_REPEAT_UNTIL_NO_PROGRESS);\n    }\n    get permitBlocking() {\n        return !!(this.flags & StepFlags.BS_PERMIT_BLOCKING);\n    }\n    get treatAsBlocking() {\n        return !!(this.flags &\n            (StepFlags.BS_TREAT_AS_BLOCKING | StepFlags.BS_NO_BLOCK_ORIGIN));\n    }\n    get noBlockOrigin() {\n        return !!(this.flags & StepFlags.BS_NO_BLOCK_ORIGIN);\n    }\n    get adoptItem() {\n        return !!(this.flags & StepFlags.BS_ADOPT_ITEM);\n    }\n    get itemIsKey() {\n        return !!(this.flags & StepFlags.BS_ITEM_IS_KEY);\n    }\n    get keyIsDisposable() {\n        return !!(this.flags & StepFlags.BS_KEY_DISPOSABLE);\n    }\n    get outsourceItem() {\n        return !!(this.flags & StepFlags.BS_OUTSOURCE_ITEM_TO_MACHINE);\n    }\n    get impregnable() {\n        return !!(this.flags & StepFlags.BS_IMPREGNABLE);\n    }\n    get buildVestibule() {\n        return !!(this.flags & StepFlags.BS_BUILD_VESTIBULE);\n    }\n    get hordeTakesItem() {\n        return !!(this.flags & StepFlags.BS_HORDE_TAKES_ITEM);\n    }\n    get generateEverywhere() {\n        return !!(this.flags &\n            StepFlags.BS_EVERYWHERE &\n            ~StepFlags.BS_BUILD_AT_ORIGIN);\n    }\n    get buildAtOrigin() {\n        return !!(this.flags & StepFlags.BS_BUILD_AT_ORIGIN);\n    }\n    get buildsInstances() {\n        return !!(this.feature ||\n            this.tile ||\n            this.item ||\n            this.horde ||\n            this.adoptItem);\n    }\n    // makeItem(data: BuildData): ITEM.ItemInfo | null {\n    //     if (!this.item) return null;\n    //     return ITEM.pick(data.depth, this.item);\n    // }\n    // cellIsCandidate(\n    //     builder: BuildData,\n    //     blueprint: Blueprint,\n    //     x: number,\n    //     y: number,\n    //     distanceBound: [number, number]\n    // ) {\n    //     return cellIsCandidate(builder, blueprint, this, x, y, distanceBound);\n    // }\n    // distanceBound(builder: BuildData): [number, number] {\n    //     return calcDistanceBound(builder, this);\n    // }\n    // updateViewMap(builder: BuildData): void {\n    //     updateViewMap(builder, this);\n    // }\n    // build(\n    //     builder: BuildData,\n    //     blueprint: Blueprint,\n    //     adoptedItem: GWM.item.Item | null\n    // ): boolean {\n    //     return buildStep(builder, blueprint, this, adoptedItem);\n    // }\n    markCandidates(data, candidates, distanceBound = [0, 10000]) {\n        updateViewMap(data, this);\n        const blueprint = data.blueprint;\n        let count = 0;\n        candidates.update((_v, i, j) => {\n            const candidateType = cellIsCandidate(data, blueprint, this, i, j, distanceBound);\n            if (candidateType === CandidateType.OK) {\n                count++;\n            }\n            return candidateType;\n        });\n        return count;\n    }\n    makePersonalSpace(_data, x, y, candidates) {\n        let count = 0;\n        if (this.pad < 1)\n            return 0; // do not mark occupied\n        // or...\n        // if (this.buildEverywhere) return 0;  // do not mark occupied\n        for (let i = x - this.pad; i <= x + this.pad; i++) {\n            for (let j = y - this.pad; j <= y + this.pad; j++) {\n                if (candidates.hasXY(i, j)) {\n                    if (candidates[i][j] == 1) {\n                        candidates[i][j] = 0;\n                        ++count;\n                    }\n                    // builder.occupied[i][j] = 1;\n                }\n            }\n        }\n        return count;\n    }\n    toString() {\n        let parts = [];\n        if (this.tile) {\n            parts.push('tile: ' + this.tile);\n        }\n        if (this.feature) {\n            parts.push('effect: ' + JSON.stringify(this.feature));\n        }\n        if (this.item) {\n            parts.push('item: ' + JSON.stringify(this.item));\n        }\n        if (this.horde) {\n            parts.push('horde: ' + JSON.stringify(this.horde));\n        }\n        if (this.pad > 1) {\n            parts.push('pad: ' + this.pad);\n        }\n        if (this.count.lo > 1 || this.count.hi > 1) {\n            parts.push('count: ' + this.count.toString());\n        }\n        if (this.chance) {\n            parts.push('chance: ' + this.chance);\n        }\n        if (this.flags) {\n            parts.push('flags: ' + GWU.flag.toString(StepFlags, this.flags));\n        }\n        return '{ ' + parts.join(', ') + ' }';\n    }\n}\nexport function updateViewMap(builder, buildStep) {\n    if (buildStep.flags &\n        (StepFlags.BS_IN_VIEW_OF_ORIGIN |\n            StepFlags.BS_IN_PASSABLE_VIEW_OF_ORIGIN)) {\n        const site = builder.site;\n        if (buildStep.flags & StepFlags.BS_IN_PASSABLE_VIEW_OF_ORIGIN) {\n            const fov = new GWU.fov.FOV({\n                isBlocked: (x, y) => {\n                    return site.blocksPathing(x, y) || site.blocksVision(x, y);\n                },\n                hasXY: (x, y) => {\n                    return site.hasXY(x, y);\n                },\n            });\n            fov.calculate(builder.originX, builder.originY, 50, (x, y) => {\n                builder.viewMap[x][y] = 1;\n            });\n        }\n        else {\n            const fov = new GWU.fov.FOV({\n                isBlocked: (x, y) => {\n                    return site.blocksVision(x, y);\n                },\n                hasXY: (x, y) => {\n                    return site.hasXY(x, y);\n                },\n            });\n            fov.calculate(builder.originX, builder.originY, 50, (x, y) => {\n                builder.viewMap[x][y] = 1;\n            });\n        }\n        builder.viewMap[builder.originX][builder.originY] = 1;\n    }\n}\nexport function calcDistanceBound(builder, buildStep) {\n    const distanceBound = [0, 10000];\n    if (buildStep.flags & StepFlags.BS_NEAR_ORIGIN) {\n        distanceBound[1] = builder.distance25;\n    }\n    if (buildStep.flags & StepFlags.BS_FAR_FROM_ORIGIN) {\n        distanceBound[0] = builder.distance75;\n    }\n    return distanceBound;\n}\nexport var CandidateType;\n(function (CandidateType) {\n    CandidateType[CandidateType[\"NOT_CANDIDATE\"] = 0] = \"NOT_CANDIDATE\";\n    CandidateType[CandidateType[\"OK\"] = 1] = \"OK\";\n    CandidateType[CandidateType[\"IN_HALLWAY\"] = 2] = \"IN_HALLWAY\";\n    CandidateType[CandidateType[\"ON_BOUNDARY\"] = 3] = \"ON_BOUNDARY\";\n    CandidateType[CandidateType[\"MUST_BE_ORIGIN\"] = 4] = \"MUST_BE_ORIGIN\";\n    CandidateType[CandidateType[\"NOT_ORIGIN\"] = 5] = \"NOT_ORIGIN\";\n    CandidateType[CandidateType[\"OCCUPIED\"] = 6] = \"OCCUPIED\";\n    CandidateType[CandidateType[\"NOT_IN_VIEW\"] = 7] = \"NOT_IN_VIEW\";\n    CandidateType[CandidateType[\"TOO_FAR\"] = 8] = \"TOO_FAR\";\n    CandidateType[CandidateType[\"TOO_CLOSE\"] = 9] = \"TOO_CLOSE\";\n    CandidateType[CandidateType[\"INVALID_WALL\"] = 10] = \"INVALID_WALL\";\n    CandidateType[CandidateType[\"BLOCKED\"] = 11] = \"BLOCKED\";\n    CandidateType[CandidateType[\"FAILED\"] = 12] = \"FAILED\";\n})(CandidateType || (CandidateType = {}));\nexport function cellIsCandidate(builder, blueprint, buildStep, x, y, distanceBound) {\n    const site = builder.site;\n    // No building in the hallway if it's prohibited.\n    // This check comes before the origin check, so an area machine will fail altogether\n    // if its origin is in a hallway and the feature that must be built there does not permit as much.\n    if (buildStep.notInHallway &&\n        GWU.xy.arcCount(x, y, (i, j) => site.hasXY(i, j) && site.isPassable(i, j)) > 1) {\n        return CandidateType.IN_HALLWAY;\n    }\n    // if (buildStep.noBlockOrigin) {\n    //     let ok = true;\n    //     GWU.xy.eachNeighbor(\n    //         x,\n    //         y,\n    //         (nx, ny) => {\n    //             if (nx === builder.originX && ny === builder.originY) {\n    //                 ok = false;\n    //             }\n    //         },\n    //         true\n    //     );\n    //     if (!ok) return false;\n    // }\n    // No building along the perimeter of the level if it's prohibited.\n    if ((x == 0 || x == site.width - 1 || y == 0 || y == site.height - 1) &&\n        !buildStep.allowBoundary) {\n        return CandidateType.ON_BOUNDARY;\n    }\n    // The origin is a candidate if the feature is flagged to be built at the origin.\n    // If it's a room, the origin (i.e. doorway) is otherwise NOT a candidate.\n    if (buildStep.buildAtOrigin) {\n        if (x == builder.originX && y == builder.originY)\n            return CandidateType.OK;\n        return CandidateType.MUST_BE_ORIGIN;\n    }\n    else if (blueprint.isRoom &&\n        x == builder.originX &&\n        y == builder.originY) {\n        return CandidateType.NOT_ORIGIN;\n    }\n    // No building in another feature's personal space!\n    if (builder.occupied[x][y]) {\n        return CandidateType.OCCUPIED;\n    }\n    // Must be in the viewmap if the appropriate flag is set.\n    if (buildStep.flags &\n        (StepFlags.BS_IN_VIEW_OF_ORIGIN |\n            StepFlags.BS_IN_PASSABLE_VIEW_OF_ORIGIN) &&\n        !builder.viewMap[x][y]) {\n        return CandidateType.NOT_IN_VIEW;\n    }\n    // Do a distance check if the feature requests it.\n    let distance = 10000;\n    if (site.isWall(x, y)) {\n        // Distance is calculated for walls too.\n        GWU.xy.eachNeighbor(x, y, (i, j) => {\n            if (!builder.distanceMap.hasXY(i, j))\n                return;\n            if (!site.blocksPathing(i, j) &&\n                distance > builder.distanceMap.getDistance(i, j) + 1) {\n                distance = builder.distanceMap.getDistance(i, j) + 1;\n            }\n        }, true);\n    }\n    else {\n        distance = builder.distanceMap.getDistance(x, y);\n    }\n    if (distance > distanceBound[1])\n        return CandidateType.TOO_FAR; // distance exceeds max\n    if (distance < distanceBound[0])\n        return CandidateType.TOO_CLOSE;\n    if (buildStep.buildInWalls) {\n        // If we're supposed to build in a wall...\n        const cellMachine = site.getMachine(x, y);\n        if (!builder.interior[x][y] &&\n            (!cellMachine || cellMachine == builder.machineNumber) &&\n            site.isWall(x, y)) {\n            let ok = false;\n            let failed = false;\n            // ...and this location is a wall that's not already machined...\n            GWU.xy.eachNeighbor(x, y, (newX, newY) => {\n                if (failed)\n                    return;\n                if (!site.hasXY(newX, newY))\n                    return;\n                if (!builder.interior[newX][newY] &&\n                    !buildStep.buildAnywhere) {\n                    return;\n                }\n                // ...and it's next to an interior spot or permitted elsewhere and next to passable spot...\n                const neighborMachine = site.getMachine(newX, newY);\n                if (!site.blocksPathing(newX, newY) &&\n                    (!neighborMachine ||\n                        neighborMachine == builder.machineNumber) &&\n                    !(newX == builder.originX && newY == builder.originY)) {\n                    if (buildStep.notInHallway &&\n                        GWU.xy.arcCount(newX, newY, (i, j) => site.hasXY(i, j) && site.isPassable(i, j)) > 1) {\n                        // return CandidateType.IN_HALLWAY;\n                        failed = true;\n                        ok = false;\n                    }\n                    else {\n                        ok = true;\n                    }\n                }\n            }, true);\n            return ok ? CandidateType.OK : CandidateType.INVALID_WALL;\n        }\n        return CandidateType.NOT_CANDIDATE;\n    }\n    else if (site.isWall(x, y)) {\n        // Can't build in a wall unless instructed to do so.\n        return CandidateType.INVALID_WALL;\n    }\n    else if (buildStep.buildAnywhere) {\n        if (buildStep.item && site.blocksItems(x, y)) {\n            return CandidateType.BLOCKED;\n        }\n        else {\n            return CandidateType.OK;\n        }\n    }\n    else if (builder.interior[x][y]) {\n        return CandidateType.OK;\n    }\n    return CandidateType.FAILED;\n}\n// export function buildStep(\n//     builder: BuildData,\n//     blueprint: Blueprint,\n//     buildStep: BuildStep,\n//     adoptedItem: GWM.item.Item | null\n// ): boolean {\n//     let wantCount = 0;\n//     let builtCount = 0;\n//     const site = builder.site;\n//     const candidates = GWU.grid.alloc(site.width, site.height);\n//     // Figure out the distance bounds.\n//     const distanceBound = calcDistanceBound(builder, buildStep);\n//     buildStep.updateViewMap(builder);\n//     // If the StepFlags.BS_REPEAT_UNTIL_NO_PROGRESS flag is set, repeat until we fail to build the required number of instances.\n//     // Make a master map of candidate locations for this feature.\n//     let qualifyingTileCount = markCandidates(\n//         candidates,\n//         builder,\n//         blueprint,\n//         buildStep,\n//         distanceBound\n//     );\n//     if (!buildStep.generateEverywhere) {\n//         wantCount = buildStep.count.value();\n//     }\n//     if (!qualifyingTileCount || qualifyingTileCount < buildStep.count.lo) {\n//         console.log(\n//             ' - Only %s qualifying tiles - want at least %s.',\n//             qualifyingTileCount,\n//             buildStep.count.lo\n//         );\n//         GWU.grid.free(candidates);\n//         return false;\n//     }\n//     let x = 0,\n//         y = 0;\n//     let success = true;\n//     let didSomething = false;\n//     do {\n//         success = true;\n//         // Find a location for the feature.\n//         if (buildStep.buildAtOrigin) {\n//             // Does the feature want to be at the origin? If so, put it there. (Just an optimization.)\n//             x = builder.originX;\n//             y = builder.originY;\n//         } else {\n//             // Pick our candidate location randomly, and also strike it from\n//             // the candidates map so that subsequent instances of this same feature can't choose it.\n//             [x, y] = site.rng.matchingLoc(\n//                 candidates.width,\n//                 candidates.height,\n//                 (x, y) => candidates[x][y] > 0\n//             );\n//         }\n//         // Don't waste time trying the same place again whether or not this attempt succeeds.\n//         candidates[x][y] = 0;\n//         qualifyingTileCount--;\n//         // Try to build the DF first, if any, since we don't want it to be disrupted by subsequently placed terrain.\n//         if (buildStep.effect) {\n//             success = site.fireEffect(buildStep.effect, x, y);\n//             didSomething = success;\n//         }\n//         // Now try to place the terrain tile, if any.\n//         if (success && buildStep.tile !== -1) {\n//             const tile = GWM.tile.get(buildStep.tile);\n//             if (\n//                 !(buildStep.flags & StepFlags.BS_PERMIT_BLOCKING) &&\n//                 (tile.blocksMove() ||\n//                     buildStep.flags & StepFlags.BS_TREAT_AS_BLOCKING)\n//             ) {\n//                 // Yes, check for blocking.\n//                 success = !SITE.siteDisruptedByXY(site, x, y, {\n//                     machine: site.machineCount,\n//                 });\n//             }\n//             if (success) {\n//                 success = site.setTile(x, y, tile);\n//                 didSomething = didSomething || success;\n//             }\n//         }\n//         // Generate an actor, if necessary\n//         // Generate an item, if necessary\n//         if (success && buildStep.item) {\n//             const item = site.makeRandomItem(buildStep.item);\n//             if (!item) {\n//                 success = false;\n//             }\n//             if (buildStep.flags & StepFlags.BS_ITEM_IS_KEY) {\n//                 item.key = GWM.entity.makeKeyInfo(\n//                     x,\n//                     y,\n//                     !!(buildStep.flags & StepFlags.BS_KEY_DISPOSABLE)\n//                 );\n//             }\n//             if (buildStep.flags & StepFlags.BS_OUTSOURCE_ITEM_TO_MACHINE) {\n//                 success = builder.buildRandom(\n//                     Flags.BP_ADOPT_ITEM,\n//                     -1,\n//                     -1,\n//                     item\n//                 );\n//                 if (success) {\n//                     didSomething = true;\n//                 }\n//             } else {\n//                 success = site.addItem(x, y, item);\n//                 didSomething = didSomething || success;\n//             }\n//         } else if (success && buildStep.flags & StepFlags.BS_ADOPT_ITEM) {\n//             // adopt item if necessary\n//             if (!adoptedItem) {\n//                 GWU.grid.free(candidates);\n//                 throw new Error(\n//                     'Failed to build blueprint because there is no adopted item.'\n//                 );\n//             }\n//             if (buildStep.flags & StepFlags.BS_TREAT_AS_BLOCKING) {\n//                 // Yes, check for blocking.\n//                 success = !SITE.siteDisruptedByXY(site, x, y);\n//             }\n//             if (success) {\n//                 success = site.addItem(x, y, adoptedItem);\n//                 if (success) {\n//                     didSomething = true;\n//                 } else {\n//                     console.log('- failed to add item', x, y);\n//                 }\n//             } else {\n//                 // console.log('- blocks map', x, y);\n//             }\n//         }\n//         if (success && didSomething) {\n//             // OK, if placement was successful, clear some personal space around the feature so subsequent features can't be generated too close.\n//             qualifyingTileCount -= makePersonalSpace(\n//                 builder,\n//                 x,\n//                 y,\n//                 candidates,\n//                 buildStep.pad\n//             );\n//             builtCount++; // we've placed an instance\n//             // Mark the feature location as part of the machine, in case it is not already inside of it.\n//             if (!(blueprint.flags & Flags.BP_NO_INTERIOR_FLAG)) {\n//                 site.setMachine(x, y, builder.machineNumber, blueprint.isRoom);\n//             }\n//             // Mark the feature location as impregnable if requested.\n//             if (buildStep.flags & StepFlags.BS_IMPREGNABLE) {\n//                 site.setCellFlag(x, y, GWM.flags.Cell.IMPREGNABLE);\n//             }\n//         }\n//         // Finished with this instance!\n//     } while (\n//         qualifyingTileCount > 0 &&\n//         (buildStep.generateEverywhere ||\n//             builtCount < wantCount ||\n//             buildStep.flags & StepFlags.BS_REPEAT_UNTIL_NO_PROGRESS)\n//     );\n//     if (success && buildStep.flags & StepFlags.BS_BUILD_VESTIBULE) {\n//         // Generate a door guard machine.\n//         // Try to create a sub-machine that qualifies.\n//         success = builder.buildRandom(\n//             Flags.BP_VESTIBULE,\n//             builder.originX,\n//             builder.originY\n//         );\n//         if (!success) {\n//             // console.log(\n//             //     `Depth ${builder.depth}: Failed to place blueprint ${blueprint.id} because it requires a vestibule and we couldn't place one.`\n//             // );\n//             // failure! abort!\n//             GWU.grid.free(candidates);\n//             return false;\n//         }\n//         ++builtCount;\n//     }\n//     //DEBUG printf(\"\\nFinished feature %i. Here's the candidates map:\", feat);\n//     //DEBUG logBuffer(candidates);\n//     success = builtCount > 0;\n//     GWU.grid.free(candidates);\n//     return success;\n// }\n","import * as GWU from 'gw-utils';\nimport { StepFlags } from '../../build/buildStep';\nexport class ConsoleLogger {\n    onDigFirstRoom(site) {\n        console.group('dig first room');\n        site.dump();\n        console.groupEnd();\n    }\n    onRoomCandidate(room, roomSite) {\n        console.group('room candidate: ' + room.toString());\n        roomSite.dump();\n        console.groupEnd();\n    }\n    onRoomFailed(_site, _room, _roomSite, error) {\n        console.log('Room Failed - ', error);\n    }\n    onRoomSuccess(site, room) {\n        console.group('Added Room - ' + room.toString());\n        site.dump();\n        console.groupEnd();\n    }\n    onLoopsAdded(_site) {\n        console.log('loops added');\n    }\n    onLakesAdded(_site) {\n        console.log('lakes added');\n    }\n    onBridgesAdded(_site) {\n        console.log('bridges added');\n    }\n    onStairsAdded(_site) {\n        console.log('stairs added');\n    }\n    //\n    onBuildError(error) {\n        console.log(`onBuildError - error: ${error}`);\n    }\n    onBlueprintPick(data, flags, depth) {\n        console.log(`onBlueprintPick - ${data.blueprint.id}, depth = ${depth}, matchingFlags = ${GWU.flag.toString(StepFlags, flags)}`);\n    }\n    onBlueprintCandidates(data) {\n        const label = `onBlueprintCandidates - ${data.blueprint.id}`;\n        console.group(label);\n        data.candidates.dump();\n        console.groupEnd();\n    }\n    onBlueprintStart(data) {\n        console.group(`onBlueprintStart - ${data.blueprint.id} @ ${data.originX},${data.originY} : stepCount: ${data.blueprint.steps.length}, size: [${data.blueprint.size.toString()}], flags: ${GWU.flag.toString(StepFlags, data.blueprint.flags)}`);\n    }\n    onBlueprintInterior(data) {\n        console.group(`onBlueprintInterior - ${data.blueprint.id}`);\n        data.interior.dump();\n        console.groupEnd();\n    }\n    onBlueprintFail(data, error) {\n        console.log(`onBlueprintFail - ${data.blueprint.id} @ ${data.originX},${data.originY} : error: ${error}`);\n        console.groupEnd();\n    }\n    onBlueprintSuccess(data) {\n        console.log(`onBlueprintSuccess - ${data.blueprint.id} @ ${data.originX},${data.originY}`);\n        console.groupEnd();\n    }\n    onStepStart(data, step) {\n        console.group(`onStepStart - ${data.blueprint.id}[${data.blueprint.steps.indexOf(step) + 1}/${data.blueprint.steps.length}] @ ${data.originX},${data.originY} : count: [${step.count.toString()}], flags: ${GWU.flag.toString(StepFlags, step.flags)}`);\n        console.log(step.toString());\n    }\n    onStepCandidates(data, step, candidates, wantCount) {\n        const haveCount = candidates.count((v) => v == 1);\n        console.log(`onStepCandidates - ${data.blueprint.id}[${data.blueprint.steps.indexOf(step) + 1}/${data.blueprint.steps.length}] @ ${data.originX},${data.originY} : wantCount: ${wantCount}, have: ${haveCount}`);\n        candidates.dump();\n        if (haveCount == 0) {\n            console.log('No candidates - check interior');\n            data.interior.dump();\n        }\n    }\n    onStepInstanceSuccess(_data, _step, x, y) {\n        console.log(`onStepInstance @ ${x},${y}`);\n    }\n    onStepInstanceFail(_data, _step, x, y, error) {\n        console.log(`onStepInstanceFail @ ${x},${y} - error: ${error}`);\n    }\n    onStepSuccess(data, step) {\n        console.log(`onStepSuccess - ${data.blueprint.id}[${data.blueprint.steps.indexOf(step) + 1}/${data.blueprint.steps.length}] @ ${data.originX},${data.originY} : count: [${step.count.toString()}], flags: ${GWU.flag.toString(StepFlags, step.flags)}`);\n        console.groupEnd();\n    }\n    onStepFail(data, step, error) {\n        console.log(`onStepFail - ${data.blueprint.id}[${data.blueprint.steps.indexOf(step) + 1}/${data.blueprint.steps.length}] @ ${data.originX},${data.originY} : error : ${error}`);\n        console.groupEnd();\n    }\n}\n","export * from './logger';\nexport * from './consoleLogger';\n// export * from './visualizer';\n","import * as GWU from 'gw-utils';\nexport class Hall extends GWU.xy.Bounds {\n    constructor(x, y, width, height) {\n        super(x, y, width, height);\n        this.doors = [];\n    }\n    translate(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n        if (this.doors) {\n            this.doors.forEach((d) => {\n                if (!d)\n                    return;\n                if (d[0] < 0 || d[1] < 0)\n                    return;\n                d[0] += dx;\n                d[1] += dy;\n            });\n        }\n    }\n}\nexport function makeHall(loc, dirIndex, hallLength, hallWidth = 1) {\n    const dir = GWU.xy.DIRS[dirIndex];\n    const x = Math.min(loc[0], loc[0] + dir[0] * (hallLength - 1));\n    const y = Math.min(loc[1], loc[1] + dir[1] * (hallLength - 1));\n    const width = Math.abs(dir[0] * hallLength) || hallWidth;\n    const height = Math.abs(dir[1] * hallLength) || hallWidth;\n    return new Hall(x, y, width, height);\n}\nexport class Room extends GWU.xy.Bounds {\n    constructor(x, y, width, height) {\n        super(x, y, width, height);\n        this.doors = [];\n        this.hall = null;\n    }\n    get cx() {\n        return this.x + Math.floor(this.width / 2);\n    }\n    get cy() {\n        return this.y + Math.floor(this.height / 2);\n    }\n    translate(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n        if (this.doors) {\n            this.doors.forEach((d) => {\n                if (!d)\n                    return;\n                if (d[0] < 0 || d[1] < 0)\n                    return;\n                d[0] += dx;\n                d[1] += dy;\n            });\n        }\n        if (this.hall) {\n            this.hall.translate(dx, dy);\n        }\n    }\n}\n// export interface DigInfo {\n//     room: RoomData;\n//     hall: HallData | null;\n//     tries: number;\n//     locs: GWU.xy.Loc[] | null;\n//     door: number;\n// }\n","import * as GWU from 'gw-utils';\nimport * as TYPES from './types';\nimport * as SITE from './site';\nexport function checkConfig(config, expected = {}) {\n    config = config || {};\n    expected = expected || {};\n    Object.entries(expected).forEach(([key, expect]) => {\n        let have = config[key];\n        if (key === 'tile') {\n            if (have === undefined) {\n                config[key] = expect;\n            }\n            return;\n        }\n        if (expect === true) {\n            // needs to be present\n            if (!have) {\n                throw new Error('Missing required config for room digger: ' + key);\n            }\n        }\n        else if (typeof expect === 'number') {\n            // needs to be a number, this is the default\n            have = have || expect;\n        }\n        else if (Array.isArray(expect)) {\n            have = have || expect;\n        }\n        else {\n            // just set the value\n            have = have || expect;\n        }\n        const range = GWU.range.make(have); // throws if invalid\n        config[key] = range;\n    });\n    return config;\n}\nexport class RoomDigger {\n    constructor(config, expected = {}) {\n        this.options = {};\n        this.doors = [];\n        this._setOptions(config, expected);\n    }\n    _setOptions(config, expected = {}) {\n        this.options = checkConfig(config, expected);\n    }\n    create(site) {\n        const result = this.carve(site);\n        if (result) {\n            if (!result.doors ||\n                result.doors.length == 0 ||\n                result.doors.every((loc) => !loc || loc[0] == -1)) {\n                result.doors = SITE.chooseRandomDoorSites(site);\n            }\n        }\n        return result;\n    }\n}\nexport var rooms = {};\nexport class ChoiceRoom extends RoomDigger {\n    constructor(config = {}) {\n        super(config, {\n            choices: ['DEFAULT'],\n        });\n    }\n    _setOptions(config, expected = {}) {\n        const choices = config.choices || expected.choices;\n        if (Array.isArray(choices)) {\n            this.randomRoom = (rng) => rng.item(choices);\n        }\n        else if (typeof choices == 'object') {\n            this.randomRoom = (rng) => rng.weighted(choices);\n        }\n        else {\n            throw new Error('Expected choices to be either array of room ids or weighted map - ex: { ROOM_ID: weight }');\n        }\n    }\n    carve(site) {\n        let id = this.randomRoom(site.rng);\n        const room = rooms[id];\n        if (!room) {\n            GWU.ERROR('Missing room digger choice: ' + id);\n        }\n        // debug('Chose room: ', id);\n        return room.create(site);\n    }\n}\nexport function choiceRoom(config, site) {\n    // grid.fill(0);\n    const digger = new ChoiceRoom(config);\n    return digger.create(site);\n}\nexport class Cavern extends RoomDigger {\n    constructor(config = {}) {\n        super(config, {\n            width: 12,\n            height: 8,\n        });\n    }\n    carve(site) {\n        const width = this.options.width.value(site.rng);\n        const height = this.options.height.value(site.rng);\n        const tile = this.options.tile || 'FLOOR';\n        const blobGrid = GWU.grid.alloc(site.width, site.height, 0);\n        const minWidth = Math.floor(0.5 * width); // 6\n        const maxWidth = width;\n        const minHeight = Math.floor(0.5 * height); // 4\n        const maxHeight = height;\n        const blob = new GWU.blob.Blob({\n            rng: site.rng,\n            rounds: 5,\n            minWidth: minWidth,\n            minHeight: minHeight,\n            maxWidth: maxWidth,\n            maxHeight: maxHeight,\n            percentSeeded: 55,\n            birthParameters: 'ffffftttt',\n            survivalParameters: 'ffffttttt',\n        });\n        const bounds = blob.carve(blobGrid.width, blobGrid.height, (x, y) => (blobGrid[x][y] = 1));\n        // Position the new cave in the middle of the grid...\n        const destX = Math.floor((site.width - bounds.width) / 2);\n        const dx = destX - bounds.x;\n        const destY = Math.floor((site.height - bounds.height) / 2);\n        const dy = destY - bounds.y;\n        // ...and copy it to the destination.\n        blobGrid.forEach((v, x, y) => {\n            if (v)\n                site.setTile(x + dx, y + dy, tile);\n        });\n        GWU.grid.free(blobGrid);\n        return new TYPES.Room(destX, destY, bounds.width, bounds.height);\n    }\n}\nexport function cavern(config, site) {\n    // grid.fill(0);\n    const digger = new Cavern(config);\n    return digger.create(site);\n}\n// From BROGUE => This is a special room that appears at the entrance to the dungeon on depth 1.\nexport class BrogueEntrance extends RoomDigger {\n    constructor(config = {}) {\n        super(config, {\n            width: 20,\n            height: 10,\n        });\n    }\n    carve(site) {\n        const width = this.options.width.value(site.rng);\n        const height = this.options.height.value(site.rng);\n        const tile = this.options.tile || 'FLOOR';\n        const roomWidth = Math.floor(0.4 * width); // 8\n        const roomHeight = height;\n        const roomWidth2 = width;\n        const roomHeight2 = Math.floor(0.5 * height); // 5\n        // ALWAYS start at bottom+center of map\n        const roomX = Math.floor(site.width / 2 - roomWidth / 2 - 1);\n        const roomY = site.height - roomHeight - 2;\n        const roomX2 = Math.floor(site.width / 2 - roomWidth2 / 2 - 1);\n        const roomY2 = site.height - roomHeight2 - 2;\n        GWU.xy.forRect(roomX, roomY, roomWidth, roomHeight, (x, y) => site.setTile(x, y, tile));\n        GWU.xy.forRect(roomX2, roomY2, roomWidth2, roomHeight2, (x, y) => site.setTile(x, y, tile));\n        const room = new TYPES.Room(Math.min(roomX, roomX2), Math.min(roomY, roomY2), Math.max(roomWidth, roomWidth2), Math.max(roomHeight, roomHeight2));\n        room.doors[GWU.xy.DOWN] = [Math.floor(site.width / 2), site.height - 2];\n        return room;\n    }\n}\nexport function brogueEntrance(config, site) {\n    // grid.fill(0);\n    const digger = new BrogueEntrance(config);\n    return digger.create(site);\n}\nexport class Cross extends RoomDigger {\n    constructor(config = {}) {\n        super(config, { width: 12, height: 20 });\n    }\n    carve(site) {\n        const width = this.options.width.value(site.rng);\n        const height = this.options.height.value(site.rng);\n        const tile = this.options.tile || 'FLOOR';\n        const roomWidth = width;\n        const roomWidth2 = Math.max(3, Math.floor((width * site.rng.range(25, 75)) / 100)); // [4,20]\n        const roomHeight = Math.max(3, Math.floor((height * site.rng.range(25, 75)) / 100)); // [2,5]\n        const roomHeight2 = height;\n        const roomX = Math.floor((site.width - roomWidth) / 2);\n        const roomX2 = roomX + site.rng.range(2, Math.max(2, roomWidth - roomWidth2 - 2));\n        const roomY2 = Math.floor((site.height - roomHeight2) / 2);\n        const roomY = roomY2 +\n            site.rng.range(2, Math.max(2, roomHeight2 - roomHeight - 2));\n        GWU.xy.forRect(roomX, roomY, roomWidth, roomHeight, (x, y) => site.setTile(x, y, tile));\n        GWU.xy.forRect(roomX2, roomY2, roomWidth2, roomHeight2, (x, y) => site.setTile(x, y, tile));\n        return new TYPES.Room(roomX, roomY2, Math.max(roomWidth, roomWidth2), Math.max(roomHeight, roomHeight2));\n    }\n}\nexport function cross(config, site) {\n    // grid.fill(0);\n    const digger = new Cross(config);\n    return digger.create(site);\n}\nexport class SymmetricalCross extends RoomDigger {\n    constructor(config = {}) {\n        super(config, { width: 7, height: 7 });\n    }\n    carve(site) {\n        const width = this.options.width.value(site.rng);\n        const height = this.options.height.value(site.rng);\n        const tile = this.options.tile || 'FLOOR';\n        let minorWidth = Math.max(3, Math.floor((width * site.rng.range(25, 50)) / 100)); // [2,4]\n        // if (height % 2 == 0 && minorWidth > 2) {\n        //     minorWidth -= 1;\n        // }\n        let minorHeight = Math.max(3, Math.floor((height * site.rng.range(25, 50)) / 100)); // [2,3]?\n        // if (width % 2 == 0 && minorHeight > 2) {\n        //     minorHeight -= 1;\n        // }\n        const x = Math.floor((site.width - width) / 2);\n        const y = Math.floor((site.height - minorHeight) / 2);\n        GWU.xy.forRect(x, y, width, minorHeight, (x, y) => site.setTile(x, y, tile));\n        const x2 = Math.floor((site.width - minorWidth) / 2);\n        const y2 = Math.floor((site.height - height) / 2);\n        GWU.xy.forRect(x2, y2, minorWidth, height, (x, y) => site.setTile(x, y, tile));\n        return new TYPES.Room(Math.min(x, x2), Math.min(y, y2), Math.max(width, minorWidth), Math.max(height, minorHeight));\n    }\n}\nexport function symmetricalCross(config, site) {\n    // grid.fill(0);\n    const digger = new SymmetricalCross(config);\n    return digger.create(site);\n}\nexport class Rectangular extends RoomDigger {\n    constructor(config = {}) {\n        super(config, {\n            width: [3, 6],\n            height: [3, 6],\n        });\n    }\n    carve(site) {\n        const width = this.options.width.value(site.rng);\n        const height = this.options.height.value(site.rng);\n        const tile = this.options.tile || 'FLOOR';\n        const x = Math.floor((site.width - width) / 2);\n        const y = Math.floor((site.height - height) / 2);\n        GWU.xy.forRect(x, y, width, height, (x, y) => site.setTile(x, y, tile));\n        return new TYPES.Room(x, y, width, height);\n    }\n}\nexport function rectangular(config, site) {\n    // grid.fill(0);\n    const digger = new Rectangular(config);\n    return digger.create(site);\n}\nexport class Circular extends RoomDigger {\n    constructor(config = {}) {\n        super(config, {\n            radius: [3, 4],\n        });\n    }\n    carve(site) {\n        const radius = this.options.radius.value(site.rng);\n        const tile = this.options.tile || 'FLOOR';\n        const x = Math.floor(site.width / 2);\n        const y = Math.floor(site.height / 2);\n        if (radius > 1) {\n            GWU.xy.forCircle(x, y, radius, (x, y) => site.setTile(x, y, tile));\n        }\n        return new TYPES.Room(x - radius, y - radius, radius * 2 + 1, radius * 2 + 1);\n    }\n}\nexport function circular(config, site) {\n    // grid.fill(0);\n    const digger = new Circular(config);\n    return digger.create(site);\n}\nexport class BrogueDonut extends RoomDigger {\n    constructor(config = {}) {\n        super(config, {\n            radius: [5, 10],\n            ringMinWidth: 3,\n            holeMinSize: 3,\n            holeChance: 50,\n        });\n    }\n    carve(site) {\n        const radius = this.options.radius.value(site.rng);\n        const ringMinWidth = this.options.ringMinWidth.value(site.rng);\n        const holeMinSize = this.options.holeMinSize.value(site.rng);\n        const tile = this.options.tile || 'FLOOR';\n        const x = Math.floor(site.width / 2);\n        const y = Math.floor(site.height / 2);\n        GWU.xy.forCircle(x, y, radius, (x, y) => site.setTile(x, y, tile));\n        if (radius > ringMinWidth + holeMinSize &&\n            site.rng.chance(this.options.holeChance.value(site.rng))) {\n            GWU.xy.forCircle(x, y, site.rng.range(holeMinSize, radius - holeMinSize), (x, y) => site.clearTile(x, y));\n        }\n        return new TYPES.Room(x - radius, y - radius, radius * 2 + 1, radius * 2 + 1);\n    }\n}\nexport function brogueDonut(config, site) {\n    // grid.fill(0);\n    const digger = new BrogueDonut(config);\n    return digger.create(site);\n}\nexport class ChunkyRoom extends RoomDigger {\n    constructor(config = {}) {\n        super(config, {\n            count: [2, 12],\n            width: [5, 20],\n            height: [5, 20],\n        });\n    }\n    carve(site) {\n        let i, x, y;\n        let chunkCount = this.options.count.value(site.rng);\n        const width = this.options.width.value(site.rng);\n        const height = this.options.height.value(site.rng);\n        const tile = this.options.tile || 'FLOOR';\n        const minX = Math.floor(site.width / 2) - Math.floor(width / 2);\n        const maxX = Math.floor(site.width / 2) + Math.floor(width / 2);\n        const minY = Math.floor(site.height / 2) - Math.floor(height / 2);\n        const maxY = Math.floor(site.height / 2) + Math.floor(height / 2);\n        let left = Math.floor(site.width / 2);\n        let right = left;\n        let top = Math.floor(site.height / 2);\n        let bottom = top;\n        GWU.xy.forCircle(left, top, 2, (x, y) => site.setTile(x, y, tile));\n        left -= 2;\n        right += 2;\n        top -= 2;\n        bottom += 2;\n        for (i = 0; i < chunkCount;) {\n            x = site.rng.range(minX, maxX);\n            y = site.rng.range(minY, maxY);\n            if (site.isSet(x, y)) {\n                if (x - 2 < minX)\n                    continue;\n                if (x + 2 > maxX)\n                    continue;\n                if (y - 2 < minY)\n                    continue;\n                if (y + 2 > maxY)\n                    continue;\n                left = Math.min(x - 2, left);\n                right = Math.max(x + 2, right);\n                top = Math.min(y - 2, top);\n                bottom = Math.max(y + 2, bottom);\n                GWU.xy.forCircle(x, y, 2, (x, y) => site.setTile(x, y, tile));\n                i++;\n            }\n        }\n        return new TYPES.Room(left, top, right - left + 1, bottom - top + 1);\n    }\n}\nexport function chunkyRoom(config, site) {\n    // grid.fill(0);\n    const digger = new ChunkyRoom(config);\n    return digger.create(site);\n}\nexport function install(id, room) {\n    rooms[id] = room;\n    return room;\n}\ninstall('DEFAULT', new Rectangular());\n","import * as GWU from 'gw-utils';\nimport * as SITE from './site';\nimport * as TYPES from './types';\nconst DIRS = GWU.xy.DIRS;\nexport function isDoorLoc(site, loc, dir) {\n    if (!site.hasXY(loc[0], loc[1]))\n        return false;\n    // TODO - boundary?\n    if (!site.isDiggable(loc[0], loc[1]))\n        return false; // must be a wall/diggable space\n    const room = [loc[0] - dir[0], loc[1] - dir[1]];\n    if (!site.hasXY(room[0], room[1]))\n        return false;\n    // TODO - boundary?\n    if (!site.isFloor(room[0], room[1]))\n        return false; // must have floor in opposite direction\n    return true;\n}\nexport function pickWidth(width, rng) {\n    return GWU.clamp(_pickWidth(width, rng), 1, 3);\n}\nfunction _pickWidth(width, rng) {\n    if (!width)\n        return 1;\n    if (typeof width === 'number')\n        return width;\n    rng = rng !== null && rng !== void 0 ? rng : GWU.rng.random;\n    if (Array.isArray(width)) {\n        width = rng.weighted(width) + 1;\n    }\n    else if (typeof width === 'string') {\n        width = GWU.range.make(width).value(rng);\n    }\n    else if (width instanceof GWU.range.Range) {\n        width = width.value(rng);\n    }\n    else {\n        const weights = width;\n        width = Number.parseInt(rng.weighted(weights));\n    }\n    return width;\n}\nexport function pickLength(dir, lengths, rng) {\n    if (dir == GWU.xy.UP || dir == GWU.xy.DOWN) {\n        return lengths[1].value(rng);\n    }\n    else {\n        return lengths[0].value(rng);\n    }\n}\nexport function pickHallDirection(site, doors, lengths) {\n    // Pick a direction.\n    let dir = GWU.xy.NO_DIRECTION;\n    if (dir == GWU.xy.NO_DIRECTION) {\n        const dirs = site.rng.sequence(4);\n        for (let i = 0; i < 4; i++) {\n            dir = dirs[i];\n            const length = lengths[(i + 1) % 2].hi; // biggest measurement\n            const door = doors[dir];\n            if (door && door[0] != -1 && door[1] != -1) {\n                const dx = door[0] + Math.floor(DIRS[dir][0] * length);\n                const dy = door[1] + Math.floor(DIRS[dir][1] * length);\n                if (site.hasXY(dx, dy)) {\n                    break; // That's our direction!\n                }\n            }\n            dir = GWU.xy.NO_DIRECTION;\n        }\n    }\n    return dir;\n}\nexport function pickHallExits(site, x, y, dir, obliqueChance) {\n    let newX, newY;\n    const allowObliqueHallwayExit = site.rng.chance(obliqueChance);\n    const hallDoors = [\n    // [-1, -1],\n    // [-1, -1],\n    // [-1, -1],\n    // [-1, -1],\n    ];\n    for (let dir2 = 0; dir2 < 4; dir2++) {\n        newX = x + DIRS[dir2][0];\n        newY = y + DIRS[dir2][1];\n        if ((dir2 != dir && !allowObliqueHallwayExit) ||\n            !site.hasXY(newX, newY) ||\n            site.isSet(newX, newY)) {\n            // do nothing\n        }\n        else {\n            hallDoors[dir2] = [newX, newY];\n        }\n    }\n    return hallDoors;\n}\nexport class HallDigger {\n    constructor(options = {}) {\n        this.config = {\n            width: 1,\n            length: [GWU.range.make('2-15'), GWU.range.make('2-9')],\n            tile: 'FLOOR',\n            obliqueChance: 15,\n            chance: 100,\n        };\n        this._setOptions(options);\n    }\n    _setOptions(options = {}) {\n        if (options.width) {\n            this.config.width = options.width;\n        }\n        if (options.length) {\n            if (typeof options.length === 'number') {\n                const l = GWU.range.make(options.length);\n                this.config.length = [l, l];\n            }\n        }\n        if (options.tile) {\n            this.config.tile = options.tile;\n        }\n        if (options.chance) {\n            this.config.chance = options.chance;\n        }\n    }\n    create(site, doors = []) {\n        doors = doors || SITE.chooseRandomDoorSites(site);\n        if (!site.rng.chance(this.config.chance))\n            return null;\n        const dir = pickHallDirection(site, doors, this.config.length);\n        if (dir === GWU.xy.NO_DIRECTION)\n            return null;\n        if (!doors[dir])\n            return null;\n        const width = pickWidth(this.config.width, site.rng);\n        const length = pickLength(dir, this.config.length, site.rng);\n        const doorLoc = doors[dir];\n        if (width == 1) {\n            return this.dig(site, dir, doorLoc, length);\n        }\n        else {\n            return this.digWide(site, dir, doorLoc, length, width);\n        }\n    }\n    _digLine(site, door, dir, length) {\n        let x = door[0];\n        let y = door[1];\n        const tile = this.config.tile;\n        for (let i = 0; i < length; i++) {\n            site.setTile(x, y, tile);\n            x += dir[0];\n            y += dir[1];\n        }\n        x -= dir[0];\n        y -= dir[1];\n        return [x, y];\n    }\n    dig(site, dir, door, length) {\n        const DIR = DIRS[dir];\n        const [x, y] = this._digLine(site, door, DIR, length);\n        const hall = TYPES.makeHall(door, dir, length);\n        hall.doors = pickHallExits(site, x, y, dir, this.config.obliqueChance);\n        return hall;\n    }\n    digWide(site, dir, door, length, width) {\n        const DIR = GWU.xy.DIRS[dir];\n        const lower = [door[0] - DIR[1], door[1] - DIR[0]];\n        const higher = [door[0] + DIR[1], door[1] + DIR[0]];\n        this._digLine(site, door, DIR, length);\n        let actual = 1;\n        let startX = door[0];\n        let startY = door[1];\n        if (actual < width && isDoorLoc(site, lower, DIR)) {\n            this._digLine(site, lower, DIR, length);\n            startX = Math.min(lower[0], startX);\n            startY = Math.min(lower[1], startY);\n            ++actual;\n        }\n        if (actual < width && isDoorLoc(site, higher, DIR)) {\n            this._digLine(site, higher, DIR, length);\n            startX = Math.min(higher[0], startX);\n            startY = Math.min(higher[1], startY);\n            ++actual;\n        }\n        const hall = TYPES.makeHall([startX, startY], dir, length, width);\n        hall.doors = [];\n        hall.doors[dir] = [\n            door[0] + length * DIR[0],\n            door[1] + length * DIR[1],\n        ];\n        // hall.width = width;\n        return hall;\n    }\n}\nexport function dig(config, site, doors) {\n    const digger = new HallDigger(config);\n    return digger.create(site, doors);\n}\nexport var halls = {};\nexport function install(id, hall) {\n    // @ts-ignore\n    halls[id] = hall;\n    return hall;\n}\ninstall('DEFAULT', new HallDigger({ chance: 15 }));\n","import * as GWU from 'gw-utils';\nexport class Lakes {\n    constructor(options = {}) {\n        this.options = {\n            height: 15,\n            width: 30,\n            minSize: 5,\n            tries: 20,\n            count: 1,\n            canDisrupt: false,\n            wreathTile: 'SHALLOW',\n            wreathChance: 50,\n            wreathSize: 1,\n            tile: 'DEEP',\n        };\n        GWU.object.assignObject(this.options, options);\n    }\n    create(site) {\n        let i, j, k;\n        let x, y;\n        let lakeMaxHeight, lakeMaxWidth, lakeMinSize, tries, maxCount, canDisrupt;\n        let count = 0;\n        lakeMaxHeight = this.options.height || 15; // TODO - Make this a range \"5-15\"\n        lakeMaxWidth = this.options.width || 30; // TODO - Make this a range \"5-30\"\n        lakeMinSize = this.options.minSize || 5;\n        tries = this.options.tries || 20;\n        maxCount = this.options.count || 1;\n        canDisrupt = this.options.canDisrupt || false;\n        const hasWreath = site.rng.chance(this.options.wreathChance)\n            ? true\n            : false;\n        const wreathTile = this.options.wreathTile || 'SHALLOW';\n        const wreathSize = this.options.wreathSize || 1; // TODO - make this a range \"0-2\" or a weighted choice { 0: 50, 1: 40, 2\" 10 }\n        const tile = this.options.tile || 'DEEP';\n        const lakeGrid = GWU.grid.alloc(site.width, site.height, 0);\n        let attempts = 0;\n        while (attempts < maxCount && count < maxCount) {\n            // lake generations\n            const width = Math.round(((lakeMaxWidth - lakeMinSize) * (maxCount - attempts)) /\n                maxCount) + lakeMinSize;\n            const height = Math.round(((lakeMaxHeight - lakeMinSize) * (maxCount - attempts)) /\n                maxCount) + lakeMinSize;\n            const blob = new GWU.blob.Blob({\n                rng: site.rng,\n                rounds: 5,\n                minWidth: 4,\n                minHeight: 4,\n                maxWidth: width,\n                maxHeight: height,\n                percentSeeded: 55,\n                // birthParameters: 'ffffftttt',\n                // survivalParameters: 'ffffttttt',\n            });\n            lakeGrid.fill(0);\n            const bounds = blob.carve(lakeGrid.width, lakeGrid.height, (x, y) => (lakeGrid[x][y] = 1));\n            // console.log('LAKE ATTEMPT');\n            // lakeGrid.dump();\n            let success = false;\n            for (k = 0; k < tries && !success; k++) {\n                // placement attempts\n                // propose a position for the top-left of the lakeGrid in the dungeon\n                x = site.rng.range(1 - bounds.x, lakeGrid.width - bounds.width - bounds.x - 2);\n                y = site.rng.range(1 - bounds.y, lakeGrid.height - bounds.height - bounds.y - 2);\n                if (canDisrupt || !this.isDisruptedBy(site, lakeGrid, -x, -y)) {\n                    // level with lake is completely connected\n                    //   dungeon.debug(\"Placed a lake!\", x, y);\n                    success = true;\n                    // copy in lake\n                    for (i = 0; i < bounds.width; i++) {\n                        // skip boundary\n                        for (j = 0; j < bounds.height; j++) {\n                            // skip boundary\n                            if (lakeGrid[i + bounds.x][j + bounds.y]) {\n                                const sx = i + bounds.x + x;\n                                const sy = j + bounds.y + y;\n                                site.setTile(sx, sy, tile);\n                                if (hasWreath) {\n                                    // if (site.hasTile(sx, sy, wreathTile)) {\n                                    //     site.clearTile(sx, sy, wreathTile);\n                                    // }\n                                    GWU.xy.forCircle(sx, sy, wreathSize, (i2, j2) => {\n                                        if (site.isPassable(i2, j2) &&\n                                            !lakeGrid[i2 - x][j2 - y]\n                                        // SITE.isFloor(map, i, j) ||\n                                        // SITE.isDoor(map, i, j)\n                                        ) {\n                                            site.setTile(i2, j2, wreathTile);\n                                        }\n                                    });\n                                }\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            if (success) {\n                ++count;\n                attempts = 0;\n            }\n            else {\n                ++attempts;\n            }\n        }\n        GWU.grid.free(lakeGrid);\n        return count;\n    }\n    isDisruptedBy(site, lakeGrid, lakeToMapX = 0, lakeToMapY = 0) {\n        const walkableGrid = GWU.grid.alloc(site.width, site.height);\n        let disrupts = false;\n        // Get all walkable locations after lake added\n        GWU.xy.forRect(site.width, site.height, (i, j) => {\n            const lakeX = i + lakeToMapX;\n            const lakeY = j + lakeToMapY;\n            if (lakeGrid.get(lakeX, lakeY)) {\n                if (site.isStairs(i, j)) {\n                    disrupts = true;\n                }\n            }\n            else if (site.isPassable(i, j)) {\n                walkableGrid[i][j] = 1;\n            }\n        });\n        let first = true;\n        for (let i = 0; i < walkableGrid.width && !disrupts; ++i) {\n            for (let j = 0; j < walkableGrid.height && !disrupts; ++j) {\n                if (walkableGrid[i][j] == 1) {\n                    if (first) {\n                        walkableGrid.floodFill(i, j, 1, 2);\n                        first = false;\n                    }\n                    else {\n                        disrupts = true;\n                    }\n                }\n            }\n        }\n        // console.log('WALKABLE GRID');\n        // walkableGrid.dump();\n        GWU.grid.free(walkableGrid);\n        return disrupts;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as SITE from './site';\nexport class Bridges {\n    constructor(options = {}) {\n        this.options = {\n            minDistance: 20,\n            maxLength: 5,\n        };\n        GWU.object.assignObject(this.options, options);\n    }\n    create(site) {\n        let count = 0;\n        let newX, newY;\n        let i, j, d, x, y;\n        const maxLength = this.options.maxLength;\n        const minDistance = this.options.minDistance;\n        const pathGrid = new GWU.path.DijkstraMap();\n        // const costGrid = GWU.grid.alloc(site.width, site.height);\n        const dirCoords = [\n            [1, 0],\n            [0, 1],\n        ];\n        const seq = site.rng.sequence(site.width * site.height);\n        for (i = 0; i < seq.length; i++) {\n            x = Math.floor(seq[i] / site.height);\n            y = seq[i] % site.height;\n            if (\n            // map.hasXY(x, y) &&\n            // map.get(x, y) &&\n            site.isPassable(x, y) &&\n                (site.isBridge(x, y) || !site.isAnyLiquid(x, y))) {\n                for (d = 0; d <= 1; d++) {\n                    // Try right, then down\n                    const bridgeDir = dirCoords[d];\n                    newX = x + bridgeDir[0];\n                    newY = y + bridgeDir[1];\n                    j = maxLength;\n                    // if (!map.hasXY(newX, newY)) continue;\n                    // check for line of lake tiles\n                    // if (isBridgeCandidate(newX, newY, bridgeDir)) {\n                    if (site.isAnyLiquid(newX, newY) &&\n                        !site.isBridge(newX, newY)) {\n                        for (j = 0; j < maxLength; ++j) {\n                            newX += bridgeDir[0];\n                            newY += bridgeDir[1];\n                            // if (!isBridgeCandidate(newX, newY, bridgeDir)) {\n                            if (site.isBridge(newX, newY) ||\n                                !site.isAnyLiquid(newX, newY)) {\n                                break;\n                            }\n                        }\n                    }\n                    if (\n                    // map.get(newX, newY) &&\n                    site.isPassable(newX, newY) &&\n                        j < maxLength) {\n                        SITE.computeDistanceMap(site, pathGrid, newX, newY, 999);\n                        if (pathGrid.getDistance(x, y) > minDistance &&\n                            pathGrid.getDistance(x, y) < GWU.path.BLOCKED) {\n                            // and if the pathing distance between the two flanking floor tiles exceeds minDistance,\n                            // dungeon.debug(\n                            //     'Adding Bridge',\n                            //     x,\n                            //     y,\n                            //     ' => ',\n                            //     newX,\n                            //     newY\n                            // );\n                            while (x !== newX || y !== newY) {\n                                if (this.isBridgeCandidate(site, x, y, bridgeDir)) {\n                                    site.setTile(x, y, 'BRIDGE'); // map[x][y] = SITE.BRIDGE;\n                                    // costGrid[x][y] = 1; // (Cost map also needs updating.)\n                                }\n                                else {\n                                    site.setTile(x, y, 'FLOOR'); // map[x][y] = SITE.FLOOR;\n                                    // costGrid[x][y] = 1;\n                                }\n                                x += bridgeDir[0];\n                                y += bridgeDir[1];\n                            }\n                            ++count;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        // GWU.grid.free(costGrid);\n        return count;\n    }\n    isBridgeCandidate(site, x, y, _bridgeDir) {\n        if (site.isBridge(x, y))\n            return true;\n        if (!site.isAnyLiquid(x, y))\n            return false;\n        // if (!site.isAnyLiquid(x + bridgeDir[1], y + bridgeDir[0])) return false;\n        // if (!site.isAnyLiquid(x - bridgeDir[1], y - bridgeDir[0])) return false;\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nexport class Stairs {\n    constructor(options = {}) {\n        this.options = {\n            up: true,\n            down: true,\n            minDistance: 10,\n            start: false,\n            upTile: 'UP_STAIRS',\n            downTile: 'DOWN_STAIRS',\n            wall: 'IMPREGNABLE',\n        };\n        GWU.object.assignObject(this.options, options);\n    }\n    create(site) {\n        let needUp = this.options.up !== false;\n        let needDown = this.options.down !== false;\n        const minDistance = this.options.minDistance ||\n            Math.floor(Math.max(site.width, site.height) / 2);\n        const locations = {};\n        let upLoc = null;\n        let downLoc = null;\n        const isValidLoc = this.isStairXY.bind(this, site);\n        if (this.options.start && typeof this.options.start !== 'string') {\n            let start = this.options.start;\n            if (start === true) {\n                start = site.rng.matchingLoc(site.width, site.height, isValidLoc);\n            }\n            else {\n                start = site.rng.matchingLocNear(GWU.xy.x(start), GWU.xy.y(start), isValidLoc);\n            }\n            locations.start = start;\n        }\n        if (Array.isArray(this.options.up) &&\n            Array.isArray(this.options.down)) {\n            const up = this.options.up;\n            upLoc = site.rng.matchingLocNear(GWU.xy.x(up), GWU.xy.y(up), isValidLoc);\n            const down = this.options.down;\n            downLoc = site.rng.matchingLocNear(GWU.xy.x(down), GWU.xy.y(down), isValidLoc);\n        }\n        else if (Array.isArray(this.options.up) &&\n            !Array.isArray(this.options.down)) {\n            const up = this.options.up;\n            upLoc = site.rng.matchingLocNear(GWU.xy.x(up), GWU.xy.y(up), isValidLoc);\n            if (needDown) {\n                downLoc = site.rng.matchingLoc(site.width, site.height, (x, y) => {\n                    if (\n                    // @ts-ignore\n                    GWU.xy.distanceBetween(x, y, upLoc[0], upLoc[1]) <\n                        minDistance)\n                        return false;\n                    return isValidLoc(x, y);\n                });\n            }\n        }\n        else if (Array.isArray(this.options.down) &&\n            !Array.isArray(this.options.up)) {\n            const down = this.options.down;\n            downLoc = site.rng.matchingLocNear(GWU.xy.x(down), GWU.xy.y(down), isValidLoc);\n            if (needUp) {\n                upLoc = site.rng.matchingLoc(site.width, site.height, (x, y) => {\n                    if (GWU.xy.distanceBetween(x, y, downLoc[0], downLoc[1]) < minDistance)\n                        return false;\n                    return isValidLoc(x, y);\n                });\n            }\n        }\n        else if (needUp) {\n            upLoc = site.rng.matchingLoc(site.width, site.height, isValidLoc);\n            if (needDown) {\n                downLoc = site.rng.matchingLoc(site.width, site.height, (x, y) => {\n                    if (\n                    // @ts-ignore\n                    GWU.xy.distanceBetween(x, y, upLoc[0], upLoc[1]) <\n                        minDistance)\n                        return false;\n                    return isValidLoc(x, y);\n                });\n            }\n        }\n        else if (needDown) {\n            downLoc = site.rng.matchingLoc(site.width, site.height, isValidLoc);\n        }\n        if (upLoc) {\n            locations.up = upLoc.slice();\n            this.setupStairs(site, upLoc[0], upLoc[1], this.options.upTile, this.options.wall);\n            if (this.options.start === 'up') {\n                locations.start = locations.up;\n            }\n            else {\n                locations.end = locations.up;\n            }\n        }\n        if (downLoc) {\n            locations.down = downLoc.slice();\n            this.setupStairs(site, downLoc[0], downLoc[1], this.options.downTile, this.options.wall);\n            if (this.options.start === 'down') {\n                locations.start = locations.down;\n            }\n            else {\n                locations.end = locations.down;\n            }\n        }\n        return upLoc || downLoc ? locations : null;\n    }\n    hasXY(site, x, y) {\n        if (x < 0 || y < 0)\n            return false;\n        if (x >= site.width || y >= site.height)\n            return false;\n        return true;\n    }\n    isStairXY(site, x, y) {\n        let count = 0;\n        if (!this.hasXY(site, x, y) || !site.isDiggable(x, y))\n            return false;\n        for (let i = 0; i < 4; ++i) {\n            const dir = GWU.xy.DIRS[i];\n            if (!this.hasXY(site, x + dir[0], y + dir[1]))\n                return false;\n            if (!this.hasXY(site, x - dir[0], y - dir[1]))\n                return false;\n            if (site.isFloor(x + dir[0], y + dir[1])) {\n                count += 1;\n                if (!site.isDiggable(x - dir[0] + dir[1], y - dir[1] + dir[0]))\n                    return false;\n                if (!site.isDiggable(x - dir[0] - dir[1], y - dir[1] - dir[0]))\n                    return false;\n            }\n            else if (!site.isDiggable(x + dir[0], y + dir[1])) {\n                return false;\n            }\n        }\n        return count == 1;\n    }\n    setupStairs(site, x, y, tile, wallTile) {\n        const indexes = site.rng.sequence(4);\n        let dir = null;\n        for (let i = 0; i < indexes.length; ++i) {\n            dir = GWU.xy.DIRS[i];\n            const x0 = x + dir[0];\n            const y0 = y + dir[1];\n            if (site.isFloor(x0, y0)) {\n                if (site.isDiggable(x - dir[0], y - dir[1]))\n                    break;\n            }\n            dir = null;\n        }\n        if (!dir)\n            GWU.ERROR('No stair direction found!');\n        site.setTile(x, y, tile);\n        const dirIndex = GWU.xy.CLOCK_DIRS.findIndex(\n        // @ts-ignore\n        (d) => d[0] == dir[0] && d[1] == dir[1]);\n        for (let i = 0; i < GWU.xy.CLOCK_DIRS.length; ++i) {\n            const l = i ? i - 1 : 7;\n            const r = (i + 1) % 8;\n            if (i == dirIndex || l == dirIndex || r == dirIndex)\n                continue;\n            const d = GWU.xy.CLOCK_DIRS[i];\n            site.setTile(x + d[0], y + d[1], wallTile);\n            // map.setCellFlags(x + d[0], y + d[1], Flags.Cell.IMPREGNABLE);\n        }\n        // dungeon.debug('setup stairs', x, y, tile);\n        return true;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as SITE from './site';\nexport class LoopDigger {\n    constructor(options = {}) {\n        this.options = {\n            minDistance: 100,\n            maxLength: 1,\n            doorChance: 50,\n        };\n        GWU.object.assignObject(this.options, options);\n    }\n    create(site) {\n        let startX, startY, endX, endY;\n        let i, j, d, x, y;\n        const minDistance = Math.min(this.options.minDistance, Math.floor(Math.max(site.width, site.height) / 2));\n        const maxLength = this.options.maxLength;\n        const pathGrid = new GWU.path.DijkstraMap();\n        // const costGrid = GWU.grid.alloc(site.width, site.height);\n        const dirCoords = [\n            [1, 0],\n            [0, 1],\n        ];\n        // SITE.fillCostGrid(site, costGrid);\n        function isValidTunnelStart(x, y, dir) {\n            if (!site.hasXY(x, y))\n                return false;\n            if (!site.hasXY(x + dir[1], y + dir[0]))\n                return false;\n            if (!site.hasXY(x - dir[1], y - dir[0]))\n                return false;\n            if (site.isSet(x, y))\n                return false;\n            if (site.isSet(x + dir[1], y + dir[0]))\n                return false;\n            if (site.isSet(x - dir[1], y - dir[0]))\n                return false;\n            return true;\n        }\n        function isValidTunnelEnd(x, y, dir) {\n            if (!site.hasXY(x, y))\n                return false;\n            if (!site.hasXY(x + dir[1], y + dir[0]))\n                return false;\n            if (!site.hasXY(x - dir[1], y - dir[0]))\n                return false;\n            if (site.isSet(x, y))\n                return true;\n            if (site.isSet(x + dir[1], y + dir[0]))\n                return true;\n            if (site.isSet(x - dir[1], y - dir[0]))\n                return true;\n            return false;\n        }\n        let count = 0;\n        const seq = site.rng.sequence(site.width * site.height);\n        for (i = 0; i < seq.length; i++) {\n            x = Math.floor(seq[i] / site.height);\n            y = seq[i] % site.height;\n            if (!site.isSet(x, y)) {\n                for (d = 0; d <= 1; d++) {\n                    // Try a horizontal door, and then a vertical door.\n                    let dir = dirCoords[d];\n                    if (!isValidTunnelStart(x, y, dir))\n                        continue;\n                    j = maxLength;\n                    // check up/left\n                    if (site.hasXY(x + dir[0], y + dir[1]) &&\n                        site.isPassable(x + dir[0], y + dir[1])) {\n                        // just can't build directly into a door\n                        if (!site.hasXY(x - dir[0], y - dir[1]) ||\n                            site.isDoor(x - dir[0], y - dir[1])) {\n                            continue;\n                        }\n                    }\n                    else if (site.hasXY(x - dir[0], y - dir[1]) &&\n                        site.isPassable(x - dir[0], y - dir[1])) {\n                        if (!site.hasXY(x + dir[0], y + dir[1]) ||\n                            site.isDoor(x + dir[0], y + dir[1])) {\n                            continue;\n                        }\n                        dir = dir.map((v) => -1 * v);\n                    }\n                    else {\n                        continue; // not valid start for tunnel\n                    }\n                    startX = x + dir[0];\n                    startY = y + dir[1];\n                    endX = x;\n                    endY = y;\n                    for (j = 0; j < maxLength; ++j) {\n                        endX -= dir[0];\n                        endY -= dir[1];\n                        // if (site.hasXY(endX, endY) && !grid.cell(endX, endY).isNull()) {\n                        if (isValidTunnelEnd(endX, endY, dir)) {\n                            break;\n                        }\n                    }\n                    if (j < maxLength) {\n                        SITE.computeDistanceMap(site, pathGrid, startX, startY, 888);\n                        // pathGrid.fill(30000);\n                        // pathGrid[startX][startY] = 0;\n                        // dijkstraScan(pathGrid, costGrid, false);\n                        if (pathGrid.getDistance(endX, endY) > minDistance &&\n                            pathGrid.getDistance(endX, endY) < GWU.path.BLOCKED) {\n                            // and if the pathing distance between the two flanking floor tiles exceeds minDistance,\n                            // dungeon.debug(\n                            //     'Adding Loop',\n                            //     startX,\n                            //     startY,\n                            //     ' => ',\n                            //     endX,\n                            //     endY,\n                            //     ' : ',\n                            //     pathGrid[endX][endY]\n                            // );\n                            while (endX !== startX || endY !== startY) {\n                                if (site.isNothing(endX, endY)) {\n                                    site.setTile(endX, endY, 'FLOOR');\n                                    // costGrid[endX][endY] = 1; // (Cost map also needs updating.)\n                                }\n                                endX += dir[0];\n                                endY += dir[1];\n                            }\n                            // TODO - Door is optional\n                            const tile = site.rng.chance(this.options.doorChance)\n                                ? 'DOOR'\n                                : 'FLOOR';\n                            site.setTile(x, y, tile); // then turn the tile into a doorway.\n                            ++count;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        // pathGrid.free();\n        // GWU.grid.free(costGrid);\n        return count;\n    }\n}\n// Add some loops to the otherwise simply connected network of rooms.\nexport function digLoops(site, opts = {}) {\n    const digger = new LoopDigger(opts);\n    return digger.create(site);\n}\n","import * as GWU from 'gw-utils';\nimport * as SITE from './site';\nimport * as ROOM from './room';\nimport * as HALL from './hall';\nimport * as LOOP from './loop';\nimport * as LAKE from './lake';\nimport * as BRIDGE from './bridge';\nimport * as STAIRS from './stairs';\nimport * as LOGGER from './site/log/logger';\nimport { ConsoleLogger } from './site/log/consoleLogger';\nexport class Digger {\n    constructor(options = {}) {\n        var _a, _b;\n        this.seed = 0;\n        this.rooms = { fails: 20 };\n        this.doors = { chance: 15 };\n        this.halls = { chance: 15 };\n        this.loops = {};\n        this.lakes = {};\n        this.bridges = {};\n        this.stairs = {};\n        this.boundary = true;\n        // startLoc: GWU.xy.Loc = [-1, -1];\n        // endLoc: GWU.xy.Loc = [-1, -1];\n        this.locations = {};\n        this._locs = {};\n        this.goesUp = false;\n        this.seed = options.seed || 0;\n        if (typeof options.rooms === 'number') {\n            options.rooms = { count: options.rooms };\n        }\n        GWU.object.setOptions(this.rooms, options.rooms);\n        this.goesUp = options.goesUp || false;\n        if (options.startLoc) {\n            this._locs.start = options.startLoc;\n        }\n        if (options.endLoc) {\n            this._locs.end = options.endLoc;\n        }\n        // Doors\n        if (options.doors === false) {\n            options.doors = { chance: 0 };\n        }\n        else if (options.doors === true) {\n            options.doors = { chance: 100 };\n        }\n        GWU.object.setOptions(this.doors, options.doors);\n        // Halls\n        if (options.halls === false) {\n            options.halls = { chance: 0 };\n        }\n        else if (options.halls === true) {\n            options.halls = {};\n        }\n        GWU.object.setOptions(this.halls, options.halls);\n        // Loops\n        if (options.loops === false) {\n            this.loops = null;\n        }\n        else {\n            if (options.loops === true)\n                options.loops = {};\n            else if (typeof options.loops === 'number') {\n                options.loops = { maxLength: options.loops };\n            }\n            options.loops = options.loops || {};\n            options.loops.doorChance =\n                (_a = options.loops.doorChance) !== null && _a !== void 0 ? _a : (_b = options.doors) === null || _b === void 0 ? void 0 : _b.chance;\n            // @ts-ignore\n            GWU.object.setOptions(this.loops, options.loops);\n        }\n        // Lakes\n        if (options.lakes === false) {\n            this.lakes = null;\n        }\n        else {\n            if (options.lakes === true)\n                options.lakes = {};\n            else if (typeof options.lakes === 'number') {\n                options.lakes = { count: options.lakes };\n            }\n            options.lakes = options.lakes || {};\n            // @ts-ignore\n            GWU.object.setOptions(this.lakes, options.lakes);\n        }\n        // Bridges\n        if (options.bridges === false) {\n            this.bridges = null;\n        }\n        else {\n            if (typeof options.bridges === 'number') {\n                options.bridges = { maxLength: options.bridges };\n            }\n            if (options.bridges === true)\n                options.bridges = {};\n            // @ts-ignore\n            GWU.object.setOptions(this.bridges, options.bridges);\n        }\n        // Stairs\n        if (options.stairs === false) {\n            this.stairs = null;\n        }\n        else {\n            if (typeof options.stairs !== 'object')\n                options.stairs = {};\n            // @ts-ignore\n            GWU.object.setOptions(this.stairs, options.stairs);\n            this.stairs.start = this.goesUp ? 'down' : 'up';\n        }\n        // this.startLoc = options.startLoc || [-1, -1];\n        // this.endLoc = options.endLoc || [-1, -1];\n        if (options.log === true) {\n            this.log = new ConsoleLogger();\n        }\n        else if (options.log) {\n            this.log = options.log;\n        }\n        else {\n            this.log = new LOGGER.NullLogger();\n        }\n    }\n    _makeRoomSite(width, height) {\n        const site = new SITE.Site(width, height);\n        site.rng = this.site.rng;\n        return site;\n    }\n    _createSite(width, height) {\n        this.site = new SITE.Site(width, height);\n    }\n    create(...args) {\n        let needsFree = true;\n        if (args.length == 1) {\n            const dest = args[0];\n            if (dest instanceof SITE.Site) {\n                this.site = dest;\n                needsFree = false;\n            }\n            else {\n                this._createSite(dest.width, dest.height);\n            }\n        }\n        else {\n            this._createSite(args[0], args[1]);\n        }\n        const result = this._create(this.site);\n        const cb = args[2] || null;\n        if (cb) {\n            GWU.xy.forRect(this.site.width, this.site.height, (x, y) => {\n                const t = this.site._tiles[x][y];\n                if (t)\n                    cb(x, y, t);\n            });\n        }\n        else if (args.length == 1 && needsFree) {\n            const dest = args[0];\n            dest.copy(this.site._tiles);\n        }\n        needsFree && this.site.free();\n        return result;\n    }\n    _create(site) {\n        this.start(site);\n        this.addRooms(site);\n        if (this.loops) {\n            this.addLoops(site, this.loops);\n            this.log.onLoopsAdded(site);\n        }\n        if (this.lakes) {\n            this.addLakes(site, this.lakes);\n            this.log.onLakesAdded(site);\n        }\n        if (this.bridges) {\n            this.addBridges(site, this.bridges);\n            this.log.onBridgesAdded(site);\n        }\n        if (this.stairs) {\n            this.addStairs(site, this.stairs);\n            this.log.onStairsAdded(site);\n        }\n        this.finish(site);\n        return true;\n    }\n    start(site) {\n        this.site = site;\n        const seed = this.seed || GWU.rng.random.number();\n        site.setSeed(seed);\n        site.clear();\n        this.seq = site.rng.sequence(site.width * site.height);\n        this.locations = Object.assign({}, this._locs);\n        if (!this.locations.start || this.locations.start[0] < 0) {\n            const stair = this.goesUp ? 'down' : 'up';\n            if (this.stairs && Array.isArray(this.stairs[stair])) {\n                this.locations.start = this.stairs[stair];\n            }\n            else {\n                this.locations.start = [\n                    Math.floor(site.width / 2),\n                    site.height - 2,\n                ];\n                if (this.stairs && this.stairs[stair]) {\n                    this.stairs[stair] = this.locations.start;\n                }\n            }\n        }\n        if (!this.locations.end || this.locations.end[0] < 0) {\n            const stair = this.goesUp ? 'up' : 'down';\n            if (this.stairs && Array.isArray(this.stairs[stair])) {\n                this.locations.end = this.stairs[stair];\n            }\n        }\n        // if (this.startLoc[0] < 0 && this.startLoc[0] < 0) {\n        //     this.startLoc[0] = Math.floor(site.width / 2);\n        //     this.startLoc[1] = site.height - 2;\n        // }\n    }\n    getDigger(id) {\n        if (!id)\n            throw new Error('Missing digger!');\n        if (id instanceof ROOM.RoomDigger)\n            return id;\n        if (typeof id === 'string') {\n            const digger = ROOM.rooms[id];\n            if (!digger) {\n                throw new Error('Failed to find digger - ' + id);\n            }\n            return digger;\n        }\n        return new ROOM.ChoiceRoom(id);\n    }\n    addRooms(site) {\n        let tries = 20;\n        while (--tries) {\n            if (this.addFirstRoom(site))\n                break;\n        }\n        if (!tries)\n            throw new Error('Failed to place first room!');\n        site.updateDoorDirs();\n        this.log.onDigFirstRoom(site);\n        // site.dump();\n        // console.log('- rng.number', site.rng.number());\n        let fails = 0;\n        let count = 1;\n        const maxFails = this.rooms.fails || 20;\n        while (fails < maxFails) {\n            if (this.addRoom(site)) {\n                fails = 0;\n                site.updateDoorDirs();\n                site.rng.shuffle(this.seq);\n                // site.dump();\n                // console.log('- rng.number', site.rng.number());\n                if (this.rooms.count && ++count >= this.rooms.count) {\n                    break; // we are done\n                }\n            }\n            else {\n                ++fails;\n            }\n        }\n    }\n    addFirstRoom(site) {\n        const roomSite = this._makeRoomSite(site.width, site.height);\n        let digger = this.getDigger(this.rooms.first || this.rooms.digger || 'DEFAULT');\n        let room = digger.create(roomSite);\n        if (room &&\n            !this._attachRoomAtLoc(site, roomSite, room, this.locations.start)) {\n            room = null;\n        }\n        roomSite.free();\n        // Should we add the starting stairs now too?\n        return room;\n    }\n    addRoom(site) {\n        const roomSite = this._makeRoomSite(site.width, site.height);\n        let digger = this.getDigger(this.rooms.digger || 'DEFAULT');\n        let room = digger.create(roomSite);\n        // attach hall?\n        if (room && this.halls.chance) {\n            let hall = HALL.dig(this.halls, roomSite, room.doors);\n            if (hall) {\n                room.hall = hall;\n            }\n        }\n        // console.log('potential room');\n        // roomSite.dump();\n        if (room) {\n            this.log.onRoomCandidate(room, roomSite);\n            if (this._attachRoom(site, roomSite, room)) {\n                this.log.onRoomSuccess(site, room);\n            }\n            else {\n                this.log.onRoomFailed(site, room, roomSite, 'Did not fit.');\n                room = null;\n            }\n        }\n        roomSite.free();\n        return room;\n    }\n    _attachRoom(site, roomSite, room) {\n        // console.log('attachRoom');\n        const doorSites = room.hall ? room.hall.doors : room.doors;\n        let i = 0;\n        const len = this.seq.length;\n        // Slide hyperspace across real space, in a random but predetermined order, until the room matches up with a wall.\n        for (i = 0; i < len; i++) {\n            const x = Math.floor(this.seq[i] / site.height);\n            const y = this.seq[i] % site.height;\n            const dir = site.getDoorDir(x, y);\n            if (dir != GWU.xy.NO_DIRECTION) {\n                const oppDir = (dir + 2) % 4;\n                const door = doorSites[oppDir];\n                if (!door)\n                    continue;\n                const offsetX = x - door[0];\n                const offsetY = y - door[1];\n                if (door[0] != -1 &&\n                    this._roomFitsAt(site, roomSite, room, offsetX, offsetY)) {\n                    // TYPES.Room fits here.\n                    site.copyTiles(roomSite, offsetX, offsetY);\n                    this._attachDoor(site, room, x, y, oppDir);\n                    // door[0] = -1;\n                    // door[1] = -1;\n                    room.translate(offsetX, offsetY);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    _attachRoomAtLoc(site, roomSite, room, attachLoc) {\n        const [x, y] = attachLoc;\n        const doorSites = room.hall ? room.hall.doors : room.doors;\n        const dirs = site.rng.sequence(4);\n        // console.log('attachRoomAtXY', x, y, doorSites.join(', '));\n        for (let dir of dirs) {\n            const oppDir = (dir + 2) % 4;\n            const door = doorSites[oppDir];\n            if (!door || door[0] == -1)\n                continue;\n            const offX = x - door[0];\n            const offY = y - door[1];\n            if (this._roomFitsAt(site, roomSite, room, offX, offY)) {\n                // dungeon.debug(\"attachRoom: \", x, y, oppDir);\n                // TYPES.Room fits here.\n                site.copyTiles(roomSite, offX, offY);\n                // this._attachDoor(site, room, x, y, oppDir);  // No door on first room!\n                room.translate(offX, offY);\n                // const newDoors = doorSites.map((site) => {\n                //     const x0 = site[0] + offX;\n                //     const y0 = site[1] + offY;\n                //     if (x0 == x && y0 == y) return [-1, -1] as GWU.xy.Loc;\n                //     return [x0, y0] as GWU.xy.Loc;\n                // });\n                return true;\n            }\n        }\n        return false;\n    }\n    _roomFitsAt(map, roomGrid, room, roomToSiteX, roomToSiteY) {\n        let xRoom, yRoom, xSite, ySite, i, j;\n        // console.log('roomFitsAt', roomToSiteX, roomToSiteY);\n        const hall = room.hall || room;\n        const left = Math.min(room.left, hall.left);\n        const top = Math.min(room.top, hall.top);\n        const right = Math.max(room.right, hall.right);\n        const bottom = Math.max(room.bottom, hall.bottom);\n        for (xRoom = left; xRoom <= right; xRoom++) {\n            for (yRoom = top; yRoom <= bottom; yRoom++) {\n                if (roomGrid.isSet(xRoom, yRoom)) {\n                    xSite = xRoom + roomToSiteX;\n                    ySite = yRoom + roomToSiteY;\n                    if (!map.hasXY(xSite, ySite) ||\n                        map.isBoundaryXY(xSite, ySite)) {\n                        return false;\n                    }\n                    for (i = xSite - 1; i <= xSite + 1; i++) {\n                        for (j = ySite - 1; j <= ySite + 1; j++) {\n                            if (!map.isNothing(i, j)) {\n                                // console.log('- NO');\n                                return false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // console.log('- YES');\n        return true;\n    }\n    _attachDoor(site, room, x, y, dir) {\n        const opts = this.doors;\n        let isDoor = false;\n        if (opts.chance && site.rng.chance(opts.chance)) {\n            isDoor = true;\n        }\n        const tile = isDoor ? opts.tile || 'DOOR' : 'FLOOR';\n        site.setTile(x, y, tile); // Door site.\n        // most cases...\n        if (!room.hall || room.hall.width == 1 || room.hall.height == 1) {\n            return;\n        }\n        if (dir === GWU.xy.UP || dir === GWU.xy.DOWN) {\n            let didSomething = true;\n            let k = 1;\n            while (didSomething) {\n                didSomething = false;\n                if (site.isNothing(x - k, y)) {\n                    if (site.isSet(x - k, y - 1) && site.isSet(x - k, y + 1)) {\n                        site.setTile(x - k, y, tile);\n                        didSomething = true;\n                    }\n                }\n                if (site.isNothing(x + k, y)) {\n                    if (site.isSet(x + k, y - 1) && site.isSet(x + k, y + 1)) {\n                        site.setTile(x + k, y, tile);\n                        didSomething = true;\n                    }\n                }\n                ++k;\n            }\n        }\n        else {\n            let didSomething = true;\n            let k = 1;\n            while (didSomething) {\n                didSomething = false;\n                if (site.isNothing(x, y - k)) {\n                    if (site.isSet(x - 1, y - k) && site.isSet(x + 1, y - k)) {\n                        site.setTile(x, y - k, tile);\n                        didSomething = true;\n                    }\n                }\n                if (site.isNothing(x, y + k)) {\n                    if (site.isSet(x - 1, y + k) && site.isSet(x + 1, y + k)) {\n                        site.setTile(x, y + k, tile);\n                        didSomething = true;\n                    }\n                }\n                ++k;\n            }\n        }\n    }\n    addLoops(site, opts) {\n        const digger = new LOOP.LoopDigger(opts);\n        return digger.create(site);\n    }\n    addLakes(site, opts) {\n        const digger = new LAKE.Lakes(opts);\n        return digger.create(site);\n    }\n    addBridges(site, opts) {\n        const digger = new BRIDGE.Bridges(opts);\n        return digger.create(site);\n    }\n    addStairs(site, opts) {\n        const digger = new STAIRS.Stairs(opts);\n        const locs = digger.create(site);\n        if (locs)\n            Object.assign(this.locations, locs);\n        return !!locs;\n    }\n    finish(site) {\n        this._removeDiagonalOpenings(site);\n        this._finishWalls(site);\n        this._finishDoors(site);\n    }\n    _removeDiagonalOpenings(site) {\n        let i, j, k, x1, y1;\n        let diagonalCornerRemoved;\n        do {\n            diagonalCornerRemoved = false;\n            for (i = 0; i < site.width - 1; i++) {\n                for (j = 0; j < site.height - 1; j++) {\n                    for (k = 0; k <= 1; k++) {\n                        if (!site.blocksMove(i + k, j) &&\n                            site.blocksMove(i + (1 - k), j) &&\n                            site.blocksDiagonal(i + (1 - k), j) &&\n                            site.blocksMove(i + k, j + 1) &&\n                            site.blocksDiagonal(i + k, j + 1) &&\n                            !site.blocksMove(i + (1 - k), j + 1)) {\n                            if (site.rng.chance(50)) {\n                                x1 = i + (1 - k);\n                                y1 = j;\n                            }\n                            else {\n                                x1 = i + k;\n                                y1 = j + 1;\n                            }\n                            diagonalCornerRemoved = true;\n                            site.setTile(x1, y1, 'FLOOR'); // todo - pick one of the passable tiles around it...\n                        }\n                    }\n                }\n            }\n        } while (diagonalCornerRemoved == true);\n    }\n    _finishDoors(site) {\n        GWU.xy.forRect(site.width, site.height, (x, y) => {\n            if (site.isBoundaryXY(x, y))\n                return;\n            // todo - isDoorway...\n            if (site.isDoor(x, y)) {\n                // if (\n                //     // TODO - isPassable\n                //     (site.isPassable(x + 1, y) || site.isPassable(x - 1, y)) &&\n                //     (site.isPassable(x, y + 1) || site.isPassable(x, y - 1))\n                // ) {\n                //     // If there's passable terrain to the left or right, and there's passable terrain\n                //     // above or below, then the door is orphaned and must be removed.\n                //     site.setTile(x, y, SITE.FLOOR); // todo - take passable neighbor value\n                // } else\n                if ((site.isWall(x + 1, y) ? 1 : 0) +\n                    (site.isWall(x - 1, y) ? 1 : 0) +\n                    (site.isWall(x, y + 1) ? 1 : 0) +\n                    (site.isWall(x, y - 1) ? 1 : 0) !=\n                    2) {\n                    // If the door has three or more pathing blocker neighbors in the four cardinal directions,\n                    // then the door is orphaned and must be removed.\n                    site.setTile(x, y, 'FLOOR', { superpriority: true }); // todo - take passable neighbor\n                }\n            }\n        });\n    }\n    _finishWalls(site) {\n        const boundaryTile = this.boundary ? 'IMPREGNABLE' : 'WALL';\n        GWU.xy.forRect(site.width, site.height, (x, y) => {\n            if (site.isNothing(x, y)) {\n                if (site.isBoundaryXY(x, y)) {\n                    site.setTile(x, y, boundaryTile);\n                }\n                else {\n                    site.setTile(x, y, 'WALL');\n                }\n            }\n        });\n    }\n}\n// export function digMap(map: GWM.map.Map, options: Partial<DiggerOptions> = {}) {\n//     const digger = new Digger(options);\n//     return digger.create(map);\n// }\n","import * as GWU from 'gw-utils';\n// import * as GWM from 'gw-map';\nimport * as LEVEL from './digger';\nexport class Dungeon {\n    constructor(options) {\n        // @ts-ignore\n        this.config = {\n            levels: 1,\n            width: 80,\n            height: 34,\n            rooms: { fails: 20 },\n            // rooms: { count: 20, digger: 'DEFAULT' },\n            // halls: {},\n            // loops: {},\n            // lakes: {},\n            // bridges: {},\n            // stairs: {},\n            boundary: true,\n        };\n        this.seeds = [];\n        this.stairLocs = [];\n        GWU.object.setOptions(this.config, options);\n        if (this.config.seed) {\n            GWU.rng.random.seed(this.config.seed);\n        }\n        if (typeof this.config.stairs === 'boolean' || !this.config.stairs) {\n            this.config.stairs = {};\n        }\n        if (!this.config.rooms) {\n            this.config.rooms = {};\n        }\n        else if (typeof this.config.rooms === 'number') {\n            this.config.rooms = { count: this.config.rooms };\n        }\n        this._initSeeds();\n        this._initStairLocs();\n    }\n    get length() {\n        return this.config.levels;\n    }\n    _initSeeds() {\n        for (let i = 0; i < this.config.levels; ++i) {\n            this.seeds[i] = GWU.rng.random.number(2 ** 32);\n        }\n    }\n    _initStairLocs() {\n        let startLoc = this.config.startLoc || [\n            Math.floor(this.config.width / 2),\n            this.config.height - 2,\n        ];\n        const minDistance = this.config.stairDistance ||\n            Math.floor(Math.max(this.config.width / 2, this.config.height / 2));\n        let needUpdate = false;\n        for (let i = 0; i < this.config.levels; ++i) {\n            let endLoc;\n            if (this.stairLocs[i] &&\n                this.stairLocs[i][1] &&\n                this.stairLocs[i][1][0] > 0) {\n                endLoc = this.stairLocs[i][1];\n                needUpdate =\n                    GWU.xy.distanceBetween(startLoc[0], startLoc[1], endLoc[0], endLoc[1]) < minDistance;\n            }\n            else {\n                endLoc = GWU.rng.random.matchingLoc(this.config.width, this.config.height, (x, y) => {\n                    return (GWU.xy.distanceBetween(startLoc[0], startLoc[1], x, y) > minDistance);\n                });\n            }\n            this.stairLocs[i] = [\n                [startLoc[0], startLoc[1]],\n                [endLoc[0], endLoc[1]],\n            ];\n            startLoc = endLoc;\n        }\n        if (needUpdate) {\n            // loop does not go all the way to level 0\n            for (let i = this.config.levels - 1; i > 0; --i) {\n                let [startLoc, endLoc] = this.stairLocs[i];\n                if (GWU.xy.distanceBetween(startLoc[0], startLoc[1], endLoc[0], endLoc[1]) > minDistance) {\n                    break;\n                }\n                startLoc = GWU.rng.random.matchingLoc(this.config.width, this.config.height, (x, y) => {\n                    return (GWU.xy.distanceBetween(endLoc[0], endLoc[1], x, y) >\n                        minDistance);\n                });\n                this.stairLocs[i][0] = startLoc;\n                this.stairLocs[i - 1][1] = startLoc;\n            }\n        }\n    }\n    getLevel(id, cb) {\n        if (id < 0 || id > this.config.levels)\n            throw new Error('Invalid level id: ' + id);\n        // Generate the level\n        const [startLoc, endLoc] = this.stairLocs[id];\n        const stairOpts = Object.assign({}, this.config.stairs);\n        if (this.config.goesUp) {\n            stairOpts.down = startLoc;\n            stairOpts.up = endLoc;\n            if (id == 0 && this.config.startTile) {\n                stairOpts.downTile = this.config.startTile;\n            }\n            if (id == this.config.levels - 1 && this.config.endTile) {\n                stairOpts.upTile = this.config.endTile;\n            }\n        }\n        else {\n            stairOpts.down = endLoc;\n            stairOpts.up = startLoc;\n            if (id == 0 && this.config.startTile) {\n                stairOpts.upTile = this.config.startTile;\n            }\n            if (id == this.config.levels - 1 && this.config.endTile) {\n                stairOpts.downTile = this.config.endTile;\n            }\n        }\n        const rooms = Object.assign({}, this.config.rooms);\n        if (id === 0 && this.config.entrance) {\n            rooms.first = this.config.entrance;\n        }\n        let width = this.config.width, height = this.config.height;\n        // if (cb instanceof GWM.map.Map) {\n        //     width = cb.width;\n        //     height = cb.height;\n        // }\n        const levelOpts = {\n            seed: this.seeds[id],\n            loops: this.config.loops,\n            lakes: this.config.lakes,\n            bridges: this.config.bridges,\n            rooms: rooms,\n            stairs: stairOpts,\n            boundary: this.config.boundary,\n            goesUp: this.config.goesUp,\n            width,\n            height,\n        };\n        return this._makeLevel(id, levelOpts, cb);\n        // TODO - Update startLoc, endLoc\n    }\n    _makeLevel(id, opts, cb) {\n        const digger = new LEVEL.Digger(opts);\n        let result = false;\n        // if (cb instanceof GWM.map.Map) {\n        //     result = digger.create(cb);\n        // } else {\n        result = digger.create(this.config.width, this.config.height, cb);\n        // }\n        this.stairLocs[id] = [digger.locations.start, digger.locations.end];\n        // if (cb instanceof GWM.map.Map) {\n        //     const locs = this.stairLocs[id];\n        //     if (this.config.goesUp) {\n        //         cb.locations.down = cb.locations.start = locs[0];\n        //         cb.locations.up = cb.locations.end = locs[1];\n        //     } else {\n        //         cb.locations.down = cb.locations.start = locs[1];\n        //         cb.locations.up = cb.locations.end = locs[0];\n        //     }\n        // }\n        return result;\n    }\n}\n","import * as GWU from 'gw-utils';\nimport * as SITE from '../site';\nexport class BuildData {\n    // depth = 0;\n    // seed = 0;\n    constructor(site, blueprint, machine = 0) {\n        this.originX = -1;\n        this.originY = -1;\n        this.distance25 = -1;\n        this.distance75 = -1;\n        this.site = site;\n        this.blueprint = blueprint;\n        this.interior = GWU.grid.alloc(site.width, site.height);\n        this.occupied = GWU.grid.alloc(site.width, site.height);\n        this.viewMap = GWU.grid.alloc(site.width, site.height);\n        this.distanceMap = new GWU.path.DijkstraMap(site.width, site.height);\n        this.candidates = GWU.grid.alloc(site.width, site.height);\n        this.machineNumber = machine;\n    }\n    free() {\n        GWU.grid.free(this.interior);\n        GWU.grid.free(this.occupied);\n        GWU.grid.free(this.viewMap);\n        GWU.grid.free(this.candidates);\n    }\n    get rng() {\n        return this.site.rng;\n    }\n    reset(originX, originY) {\n        this.interior.fill(0);\n        this.occupied.fill(0);\n        this.viewMap.fill(0);\n        this.distanceMap.reset(this.site.width, this.site.height);\n        // this.candidates.fill(0);\n        this.originX = originX;\n        this.originY = originY;\n        this.distance25 = 0;\n        this.distance75 = 0;\n        // if (this.seed) {\n        //     this.site.setSeed(this.seed);\n        // }\n    }\n    calcDistances(maxDistance) {\n        SITE.computeDistanceMap(this.site, this.distanceMap, this.originX, this.originY, maxDistance);\n        let qualifyingTileCount = 0;\n        const distances = new Array(100).fill(0);\n        this.interior.forEach((v, x, y) => {\n            if (!v)\n                return;\n            const dist = Math.round(this.distanceMap.getDistance(x, y));\n            if (dist < 100) {\n                distances[dist]++; // create a histogram of distances -- poor man's sort function\n                qualifyingTileCount++;\n            }\n        });\n        let distance25 = Math.round(qualifyingTileCount / 4);\n        let distance75 = Math.round((3 * qualifyingTileCount) / 4);\n        for (let i = 0; i < 100; i++) {\n            if (distance25 <= distances[i]) {\n                distance25 = i;\n                break;\n            }\n            else {\n                distance25 -= distances[i];\n            }\n        }\n        for (let i = 0; i < 100; i++) {\n            if (distance75 <= distances[i]) {\n                distance75 = i;\n                break;\n            }\n            else {\n                distance75 -= distances[i];\n            }\n        }\n        this.distance25 = distance25;\n        this.distance75 = distance75;\n    }\n}\n","import * as GWU from 'gw-utils';\n// import * as GWM from 'gw-map';\nimport * as SITE from '../site';\nimport * as STEP from './buildStep';\nconst Fl = GWU.flag.fl;\nexport var Flags;\n(function (Flags) {\n    Flags[Flags[\"BP_ROOM\"] = Fl(0)] = \"BP_ROOM\";\n    Flags[Flags[\"BP_VESTIBULE\"] = Fl(1)] = \"BP_VESTIBULE\";\n    Flags[Flags[\"BP_REWARD\"] = Fl(2)] = \"BP_REWARD\";\n    Flags[Flags[\"BP_ADOPT_ITEM\"] = Fl(3)] = \"BP_ADOPT_ITEM\";\n    Flags[Flags[\"BP_PURGE_PATHING_BLOCKERS\"] = Fl(4)] = \"BP_PURGE_PATHING_BLOCKERS\";\n    Flags[Flags[\"BP_PURGE_INTERIOR\"] = Fl(5)] = \"BP_PURGE_INTERIOR\";\n    Flags[Flags[\"BP_PURGE_LIQUIDS\"] = Fl(6)] = \"BP_PURGE_LIQUIDS\";\n    Flags[Flags[\"BP_SURROUND_WITH_WALLS\"] = Fl(7)] = \"BP_SURROUND_WITH_WALLS\";\n    Flags[Flags[\"BP_IMPREGNABLE\"] = Fl(8)] = \"BP_IMPREGNABLE\";\n    Flags[Flags[\"BP_OPEN_INTERIOR\"] = Fl(9)] = \"BP_OPEN_INTERIOR\";\n    Flags[Flags[\"BP_MAXIMIZE_INTERIOR\"] = Fl(10)] = \"BP_MAXIMIZE_INTERIOR\";\n    Flags[Flags[\"BP_REDESIGN_INTERIOR\"] = Fl(11)] = \"BP_REDESIGN_INTERIOR\";\n    Flags[Flags[\"BP_TREAT_AS_BLOCKING\"] = Fl(12)] = \"BP_TREAT_AS_BLOCKING\";\n    Flags[Flags[\"BP_REQUIRE_BLOCKING\"] = Fl(13)] = \"BP_REQUIRE_BLOCKING\";\n    Flags[Flags[\"BP_NO_INTERIOR_FLAG\"] = Fl(14)] = \"BP_NO_INTERIOR_FLAG\";\n    Flags[Flags[\"BP_NOT_IN_HALLWAY\"] = Fl(15)] = \"BP_NOT_IN_HALLWAY\";\n})(Flags || (Flags = {}));\nexport class Blueprint {\n    constructor(opts = {}) {\n        this.tags = [];\n        this.flags = 0;\n        this.steps = [];\n        this.id = 'n/a';\n        if (opts.tags) {\n            if (typeof opts.tags === 'string') {\n                opts.tags = opts.tags.split(/[,|]/).map((v) => v.trim());\n            }\n            this.tags = opts.tags;\n        }\n        this.frequency = GWU.frequency.make(opts.frequency || 100);\n        if (opts.size) {\n            this.size = GWU.range.make(opts.size);\n            if (this.size.lo <= 0)\n                this.size.lo = 1;\n            if (this.size.hi < this.size.lo)\n                this.size.hi = this.size.lo;\n        }\n        else {\n            this.size = GWU.range.make([1, 1]); // Anything bigger makes weird things happen\n        }\n        if (opts.flags) {\n            this.flags = GWU.flag.from(Flags, opts.flags);\n        }\n        if (opts.steps) {\n            this.steps = opts.steps.map((cfg) => new STEP.BuildStep(cfg));\n            this.steps.forEach((s, i) => (s.index = i));\n        }\n        if (opts.id) {\n            this.id = opts.id;\n        }\n        if (this.flags & Flags.BP_ADOPT_ITEM) {\n            if (!this.steps.some((step) => {\n                if (step.adoptItem)\n                    return true;\n                if (step.hordeTakesItem && !step.item)\n                    return true;\n                return false;\n            })) {\n                throw new Error('Blueprint calls for BP_ADOPT_ITEM, but has no adoptive step.');\n            }\n        }\n    }\n    get isRoom() {\n        return !!(this.flags & Flags.BP_ROOM);\n    }\n    get isReward() {\n        return !!(this.flags & Flags.BP_REWARD);\n    }\n    get isVestiblue() {\n        return !!(this.flags & Flags.BP_VESTIBULE);\n    }\n    get adoptsItem() {\n        return !!(this.flags & Flags.BP_ADOPT_ITEM);\n    }\n    get treatAsBlocking() {\n        return !!(this.flags & Flags.BP_TREAT_AS_BLOCKING);\n    }\n    get requireBlocking() {\n        return !!(this.flags & Flags.BP_REQUIRE_BLOCKING);\n    }\n    get purgeInterior() {\n        return !!(this.flags & Flags.BP_PURGE_INTERIOR);\n    }\n    get purgeBlockers() {\n        return !!(this.flags & Flags.BP_PURGE_PATHING_BLOCKERS);\n    }\n    get purgeLiquids() {\n        return !!(this.flags & Flags.BP_PURGE_LIQUIDS);\n    }\n    get surroundWithWalls() {\n        return !!(this.flags & Flags.BP_SURROUND_WITH_WALLS);\n    }\n    get makeImpregnable() {\n        return !!(this.flags & Flags.BP_IMPREGNABLE);\n    }\n    get maximizeInterior() {\n        return !!(this.flags & Flags.BP_MAXIMIZE_INTERIOR);\n    }\n    get openInterior() {\n        return !!(this.flags & Flags.BP_OPEN_INTERIOR);\n    }\n    get noInteriorFlag() {\n        return !!(this.flags & Flags.BP_NO_INTERIOR_FLAG);\n    }\n    get notInHallway() {\n        return !!(this.flags & Flags.BP_NOT_IN_HALLWAY);\n    }\n    qualifies(requiredFlags, tags) {\n        if (tags && tags.length) {\n            if (typeof tags === 'string') {\n                tags = tags.split(/[,|]/).map((v) => v.trim());\n            }\n            // Must match all tags!\n            if (!tags.every((want) => this.tags.includes(want)))\n                return false;\n        }\n        if (\n        // Must have the required flags:\n        ~this.flags & requiredFlags ||\n            // May NOT have BP_ADOPT_ITEM unless that flag is required:\n            this.flags & Flags.BP_ADOPT_ITEM & ~requiredFlags ||\n            // May NOT have BP_VESTIBULE unless that flag is required:\n            this.flags & Flags.BP_VESTIBULE & ~requiredFlags) {\n            return false;\n        }\n        return true;\n    }\n    pickComponents(rng) {\n        const alternativeFlags = [\n            STEP.StepFlags.BS_ALTERNATIVE,\n            STEP.StepFlags.BS_ALTERNATIVE_2,\n        ];\n        const keepFeature = new Array(this.steps.length).fill(true);\n        for (let j = 0; j <= 1; j++) {\n            let totalFreq = 0;\n            for (let i = 0; i < keepFeature.length; i++) {\n                if (this.steps[i].flags & alternativeFlags[j]) {\n                    keepFeature[i] = false;\n                    totalFreq++;\n                }\n            }\n            if (totalFreq > 0) {\n                let randIndex = rng.range(1, totalFreq);\n                for (let i = 0; i < keepFeature.length; i++) {\n                    if (this.steps[i].flags & alternativeFlags[j]) {\n                        if (randIndex == 1) {\n                            keepFeature[i] = true; // This is the alternative that gets built. The rest do not.\n                            break;\n                        }\n                        else {\n                            randIndex--;\n                        }\n                    }\n                }\n            }\n        }\n        return this.steps.filter((_f, i) => keepFeature[i]);\n    }\n    fillInterior(builder) {\n        const interior = builder.interior;\n        const site = builder.site;\n        interior.fill(0);\n        // Find a location and map out the machine interior.\n        if (this.isRoom) {\n            // If it's a room machine, count up the gates of appropriate\n            // choke size and remember where they are. The origin of the room will be the gate location.\n            // Now map out the interior into interior[][].\n            // Start at the gate location and do a depth-first floodfill to grab all adjoining tiles with the\n            // same or lower choke value, ignoring any tiles that are already part of a machine.\n            // If we get false from this, try again. If we've tried too many times already, abort.\n            return addTileToInteriorAndIterate(builder, builder.originX, builder.originY);\n        }\n        else if (this.isVestiblue) {\n            return computeVestibuleInterior(builder, this);\n            // success\n        }\n        else {\n            // Find a location and map out the interior for a non-room machine.\n            // The strategy here is simply to pick a random location on the map,\n            // expand it along a pathing map by one space in all directions until the size reaches\n            // the chosen size, and then make sure the resulting space qualifies.\n            // If not, try again. If we've tried too many times already, abort.\n            let distanceMap = builder.distanceMap;\n            SITE.computeDistanceMap(site, distanceMap, builder.originX, builder.originY, this.size.hi);\n            const seq = site.rng.sequence(site.width * site.height);\n            let qualifyingTileCount = 0; // Keeps track of how many interior cells we've added.\n            let goalSize = this.size.value(); // Keeps track of the goal size.\n            for (let k = 0; k < 1000 && qualifyingTileCount < goalSize; k++) {\n                for (let n = 0; n < seq.length && qualifyingTileCount < goalSize; n++) {\n                    const i = Math.floor(seq[n] / site.height);\n                    const j = seq[n] % site.height;\n                    if (Math.round(distanceMap.getDistance(i, j)) == k) {\n                        interior[i][j] = 1;\n                        qualifyingTileCount++;\n                        const machine = site.getMachine(i, j);\n                        if (site.isOccupied(i, j) ||\n                            (machine > 0 && machine !== builder.machineNumber) // in different machine\n                        ) {\n                            // Abort if we've entered another machine or engulfed another machine's item or monster.\n                            return 0;\n                        }\n                    }\n                }\n            }\n            // If locationFailsafe runs out, tryAgain will still be true, and we'll try a different machine.\n            // If we're not choosing the blueprint, then don't bother with the locationFailsafe; just use the higher-level failsafe.\n            return qualifyingTileCount;\n        }\n    }\n}\nexport function markCandidates(buildData) {\n    const site = buildData.site;\n    const candidates = buildData.candidates;\n    const blueprint = buildData.blueprint;\n    candidates.fill(0);\n    // Find a location and map out the machine interior.\n    if (blueprint.isRoom) {\n        // If it's a room machine, count up the gates of appropriate\n        // choke size and remember where they are. The origin of the room will be the gate location.\n        candidates.update((_v, x, y) => {\n            return site.isGateSite(x, y) &&\n                blueprint.size.contains(site.getChokeCount(x, y))\n                ? 1\n                : 0;\n        });\n    }\n    else if (blueprint.isVestiblue) {\n        //  Door machines must have locations passed in. We can't pick one ourselves.\n        throw new Error('ERROR: Attempted to build a vestiblue without a location being provided.');\n    }\n    else {\n        candidates.update((_v, x, y) => {\n            if (!site.isPassable(x, y))\n                return 0;\n            if (blueprint.notInHallway) {\n                const count = GWU.xy.arcCount(x, y, (i, j) => site.isPassable(i, j));\n                return count <= 1 ? 1 : 0;\n            }\n            return 1;\n        });\n    }\n    return candidates.count((v) => v == 1);\n}\nexport function pickCandidateLoc(buildData) {\n    const site = buildData.site;\n    const candidates = buildData.candidates;\n    const randSite = site.rng.matchingLoc(site.width, site.height, (x, y) => candidates[x][y] == 1);\n    if (!randSite || randSite[0] < 0 || randSite[1] < 0) {\n        // If no suitable sites, abort.\n        return null;\n    }\n    return randSite;\n}\n// // Assume site has been analyzed (aka GateSites and ChokeCounts set)\n// export function computeInterior(\n//     builder: BuildData,\n//     blueprint: Blueprint\n// ): boolean {\n//     let failsafe = blueprint.isRoom ? 10 : 20;\n//     let tryAgain;\n//     const interior = builder.interior;\n//     const site = builder.site;\n//     do {\n//         tryAgain = false;\n//         if (--failsafe <= 0) {\n//             // console.log(\n//             //     `Failed to build blueprint ${blueprint.id}; failed repeatedly to find a suitable blueprint location.`\n//             // );\n//             return false;\n//         }\n//         let count = fillInterior(builder, blueprint);\n//         // Now make sure the interior map satisfies the machine's qualifications.\n//         if (!count) {\n//             console.debug('- no interior');\n//             tryAgain = true;\n//         } else if (!blueprint.size.contains(count)) {\n//             console.debug('- too small');\n//             tryAgain = true;\n//         } else if (\n//             blueprint.treatAsBlocking &&\n//             SITE.siteDisruptedBy(site, interior, { machine: site.machineCount })\n//         ) {\n//             console.debug('- blocks');\n//             tryAgain = true;\n//         } else if (\n//             blueprint.requireBlocking &&\n//             SITE.siteDisruptedSize(site, interior) < 100\n//         ) {\n//             console.debug('- does not block');\n//             tryAgain = true;\n//         }\n//         // Now loop if necessary.\n//     } while (tryAgain);\n//     // console.log(tryAgain, failsafe);\n//     return true;\n// }\nexport function computeVestibuleInterior(builder, blueprint) {\n    let success = true;\n    const site = builder.site;\n    const interior = builder.interior;\n    interior.fill(0);\n    if (blueprint.size.hi == 1) {\n        interior[builder.originX][builder.originY] = 1;\n        return 1;\n    }\n    // If this is a wall - it is really an error (maybe manually trying a build location?)\n    const doorChokeCount = site.getChokeCount(builder.originX, builder.originY);\n    if (doorChokeCount > 10000) {\n        return 0;\n    }\n    const vestibuleLoc = [-1, -1];\n    let vestibuleChokeCount = doorChokeCount;\n    GWU.xy.eachNeighbor(builder.originX, builder.originY, (x, y) => {\n        const count = site.getChokeCount(x, y);\n        if (count == doorChokeCount)\n            return;\n        if (count > 10000)\n            return;\n        if (count < 0)\n            return;\n        vestibuleLoc[0] = x;\n        vestibuleLoc[1] = y;\n        vestibuleChokeCount = count;\n    }, true);\n    const roomSize = vestibuleChokeCount - doorChokeCount;\n    if (blueprint.size.contains(roomSize)) {\n        // The room entirely fits within the vestibule desired size\n        const count = interior.floodFill(vestibuleLoc[0], vestibuleLoc[1], (_v, i, j) => {\n            if (site.isOccupied(i, j)) {\n                success = false;\n            }\n            return site.getChokeCount(i, j) === vestibuleChokeCount;\n        }, 1);\n        if (success && blueprint.size.contains(count))\n            return roomSize;\n    }\n    let qualifyingTileCount = 0; // Keeps track of how many interior cells we've added.\n    const wantSize = blueprint.size.value(site.rng); // Keeps track of the goal size.\n    const distMap = builder.distanceMap;\n    SITE.computeDistanceMap(site, distMap, builder.originX, builder.originY, blueprint.size.hi);\n    const cells = site.rng.sequence(site.width * site.height);\n    success = true;\n    for (let k = 0; k < 1000 && qualifyingTileCount < wantSize; k++) {\n        for (let i = 0; i < cells.length && qualifyingTileCount < wantSize; ++i) {\n            const x = Math.floor(cells[i] / site.height);\n            const y = cells[i] % site.height;\n            const dist = Math.round(distMap.getDistance(x, y));\n            if (dist != k)\n                continue;\n            if (site.isOccupied(x, y)) {\n                success = false;\n                qualifyingTileCount = wantSize;\n            }\n            if (site.getChokeCount(x, y) <= doorChokeCount)\n                continue;\n            interior[x][y] = 1;\n            qualifyingTileCount += 1;\n        }\n    }\n    return qualifyingTileCount;\n}\n// Assumes (startX, startY) is in the machine.\n// Returns true if everything went well, and false if we ran into a machine component\n// that was already there, as we don't want to build a machine around it.\nfunction addTileToInteriorAndIterate(builder, startX, startY) {\n    let goodSoFar = true;\n    const interior = builder.interior;\n    const site = builder.site;\n    let count = 1;\n    interior[startX][startY] = 1;\n    const startChokeCount = site.getChokeCount(startX, startY);\n    for (let dir = 0; dir < 4 && goodSoFar; dir++) {\n        const newX = startX + GWU.xy.DIRS[dir][0];\n        const newY = startY + GWU.xy.DIRS[dir][1];\n        if (!site.hasXY(newX, newY))\n            continue;\n        if (interior[newX][newY])\n            continue; // already done\n        if (site.isOccupied(newX, newY) ||\n            (site.getMachine(newX, newY) && !site.isGateSite(newX, newY))) {\n            // Abort if there's an item in the room.\n            // Items haven't been populated yet, so the only way this could happen is if another machine\n            // previously placed an item here.\n            // Also abort if we're touching another machine at any point other than a gate tile.\n            return 0;\n        }\n        if (site.getChokeCount(newX, newY) <= startChokeCount && // don't have to worry about walls since they're all 30000\n            !site.getMachine(newX, newY)) {\n            let additional = addTileToInteriorAndIterate(builder, newX, newY);\n            if (additional <= 0)\n                return 0;\n            count += additional;\n        }\n    }\n    return count;\n}\nexport function maximizeInterior(data, minimumInteriorNeighbors = 1) {\n    const interior = data.interior;\n    const site = data.site;\n    let interiorNeighborCount = 0;\n    // let openNeighborCount = 0;\n    let madeChange = true;\n    let interiorCount = 0;\n    let maxInteriorCount = data.blueprint.size.hi;\n    let gen = 0;\n    while (madeChange && interiorCount < maxInteriorCount) {\n        madeChange = false;\n        interiorCount = 0;\n        ++gen;\n        interior.forEach((i, x, y) => {\n            if (!i)\n                return;\n            ++interiorCount;\n            if (i != gen)\n                return;\n            GWU.xy.eachNeighbor(x, y, (i, j) => {\n                if (!interior.hasXY(i, j) || interior[i][j])\n                    return;\n                if (interior.isBoundaryXY(i, j))\n                    return;\n                interiorNeighborCount = 0;\n                let ok = true;\n                GWU.xy.eachNeighbor(i, j, (x2, y2) => {\n                    if (interior[x2][y2]) {\n                        ++interiorNeighborCount;\n                    }\n                    else if (!site.isWall(x2, y2)) {\n                        ok = false; // non-interior and not wall\n                    }\n                    else if (site.getMachine(x2, y2)) {\n                        ok = false; // in another machine\n                    }\n                }, false // 8 dirs\n                );\n                if (!ok || interiorNeighborCount < minimumInteriorNeighbors)\n                    return;\n                interior[i][j] = gen + 1;\n                ++interiorCount;\n                if (site.blocksPathing(i, j)) {\n                    site.setTile(i, j, 'FLOOR');\n                }\n                madeChange = true;\n            }, true // 4 dirs\n            );\n        });\n    }\n    interior.update((v) => (v > 0 ? 1 : 0));\n}\nexport function prepareInterior(builder) {\n    const interior = builder.interior;\n    const site = builder.site;\n    const blueprint = builder.blueprint;\n    // If requested, clear and expand the room as far as possible until either it's convex or it bumps into surrounding rooms\n    if (blueprint.maximizeInterior) {\n        maximizeInterior(builder, 1);\n    }\n    else if (blueprint.openInterior) {\n        maximizeInterior(builder, 4);\n    }\n    // If requested, cleanse the interior -- no interesting terrain allowed.\n    if (blueprint.purgeInterior) {\n        interior.forEach((v, x, y) => {\n            if (v)\n                site.setTile(x, y, 'FLOOR');\n        });\n    }\n    else {\n        if (blueprint.purgeBlockers) {\n            // If requested, purge pathing blockers -- no traps allowed.\n            interior.forEach((v, x, y) => {\n                if (!v)\n                    return;\n                if (site.blocksPathing(x, y)) {\n                    site.setTile(x, y, 'FLOOR');\n                }\n            });\n        }\n        // If requested, purge the liquid layer in the interior -- no liquids allowed.\n        if (blueprint.purgeLiquids) {\n            interior.forEach((v, x, y) => {\n                if (v && site.isAnyLiquid(x, y)) {\n                    site.setTile(x, y, 'FLOOR');\n                }\n            });\n        }\n    }\n    // Surround with walls if requested.\n    if (blueprint.surroundWithWalls) {\n        interior.forEach((v, x, y) => {\n            if (!v || site.isGateSite(x, y))\n                return;\n            GWU.xy.eachNeighbor(x, y, (i, j) => {\n                if (!interior.hasXY(i, j))\n                    return; // Not valid x,y\n                if (interior[i][j])\n                    return; // is part of machine\n                if (site.isWall(i, j))\n                    return; // is already a wall (of some sort)\n                if (site.isGateSite(i, j))\n                    return; // is a door site\n                if (site.getMachine(i, j))\n                    return; // is part of a machine\n                if (site.blocksPathing(i, j))\n                    return; // is a blocker for the player (water?)\n                site.setTile(i, j, 'WALL');\n            }, false // all 8 directions\n            );\n        });\n    }\n    // Completely clear the interior, fill with granite, and cut entirely new rooms into it from the gate site.\n    // Then zero out any portion of the interior that is still wall.\n    // if (flags & BPFlags.BP_REDESIGN_INTERIOR) {\n    //     RUT.Map.Blueprint.redesignInterior(map, interior, originX, originY, dungeonProfileIndex);\n    // }\n    // Reinforce surrounding tiles and interior tiles if requested to prevent tunneling in or through.\n    if (blueprint.makeImpregnable) {\n        interior.forEach((v, x, y) => {\n            if (!v || site.isGateSite(x, y))\n                return;\n            site.makeImpregnable(x, y);\n            GWU.xy.eachNeighbor(x, y, (i, j) => {\n                if (!interior.hasXY(i, j))\n                    return;\n                if (interior[i][j])\n                    return;\n                if (site.isGateSite(i, j))\n                    return;\n                site.makeImpregnable(i, j);\n            }, false);\n        });\n    }\n    // If necessary, label the interior as IS_IN_AREA_MACHINE or IS_IN_ROOM_MACHINE and mark down the number.\n    const machineNumber = builder.machineNumber;\n    interior.forEach((v, x, y) => {\n        if (!v)\n            return;\n        if (!blueprint.noInteriorFlag) {\n            site.setMachine(x, y, machineNumber, blueprint.isRoom);\n        }\n        // secret doors mess up machines\n        // TODO - is this still true?\n        if (site.isSecretDoor(x, y)) {\n            site.setTile(x, y, 'DOOR');\n        }\n    });\n}\n// export function expandMachineInterior(\n//     builder: BuildData,\n//     minimumInteriorNeighbors = 1\n// ) {\n//     let madeChange;\n//     const interior = builder.interior;\n//     const site = builder.site;\n//     do {\n//         madeChange = false;\n//         interior.forEach((_v, x, y) => {\n//             // if (v && site.isDoor(x, y)) {\n//             //     site.setTile(x, y, SITE.FLOOR); // clean out the doors...\n//             //     return;\n//             // }\n//             if (site.hasCellFlag(x, y, GWM.flags.Cell.IS_IN_MACHINE)) return;\n//             if (!site.blocksPathing(x, y)) return;\n//             let nbcount = 0;\n//             GWU.xy.eachNeighbor(\n//                 x,\n//                 y,\n//                 (i, j) => {\n//                     if (!interior.hasXY(i, j)) return; // Not in map\n//                     if (interior.isBoundaryXY(i, j)) return; // Not on boundary\n//                     if (interior[i][j] && !site.blocksPathing(i, j)) {\n//                         ++nbcount; // in machine and open tile\n//                     }\n//                 },\n//                 false\n//             );\n//             if (nbcount < minimumInteriorNeighbors) return;\n//             nbcount = 0;\n//             GWU.xy.eachNeighbor(\n//                 x,\n//                 y,\n//                 (i, j) => {\n//                     if (!interior.hasXY(i, j)) return; // not on map\n//                     if (interior[i][j]) return; // already part of machine\n//                     if (\n//                         !site.isWall(i, j) ||\n//                         site.hasCellFlag(i, j, GWM.flags.Cell.IS_IN_MACHINE)\n//                     ) {\n//                         ++nbcount; // tile is not a wall or is in a machine\n//                     }\n//                 },\n//                 false\n//             );\n//             if (nbcount) return;\n//             // Eliminate this obstruction; welcome its location into the machine.\n//             madeChange = true;\n//             interior[x][y] = 1;\n//             if (site.blocksPathing(x, y)) {\n//                 site.setTile(x, y, SITE.FLOOR);\n//             }\n//             GWU.xy.eachNeighbor(x, y, (i, j) => {\n//                 if (!interior.hasXY(i, j)) return;\n//                 if (site.isSet(i, j)) return;\n//                 site.setTile(i, j, SITE.WALL);\n//             });\n//         });\n//     } while (madeChange);\n// }\n///////////////////////////\n// INSTALL\nexport const blueprints = {};\nexport function install(id, blueprint) {\n    if (!(blueprint instanceof Blueprint)) {\n        blueprint = new Blueprint(blueprint);\n    }\n    blueprints[id] = blueprint;\n    blueprint.id = id;\n    return blueprint;\n}\nexport function random(requiredFlags, depth, rng) {\n    const matches = Object.values(blueprints).filter((b) => b.qualifies(requiredFlags) && b.frequency(depth));\n    rng = rng || GWU.rng.random;\n    return rng.item(matches);\n}\nexport function get(id) {\n    if (id instanceof Blueprint)\n        return id;\n    return blueprints[id];\n}\nexport function make(config) {\n    // if (!config.id) throw new Error('id is required to make Blueprint.');\n    return new Blueprint(config);\n}\n","import * as GWU from 'gw-utils';\n// import * as GWM from 'gw-map';\nimport * as SITE from '../site';\nimport * as BLUE from './blueprint';\nimport * as STEP from './buildStep';\nimport * as ITEM from '../site/item';\nimport * as HORDE from '../site/horde';\nimport { BuildData } from './data';\nimport { NullLogger } from '../site/log/logger';\nimport { ConsoleLogger } from '../site/log/consoleLogger';\nexport class Builder {\n    constructor(options = {}) {\n        this.blueprints = null;\n        if (options.blueprints) {\n            if (!Array.isArray(options.blueprints)) {\n                options.blueprints = Object.values(options.blueprints);\n            }\n            this.blueprints = options.blueprints.map((v) => BLUE.get(v));\n        }\n        if (options.log === true) {\n            this.log = new ConsoleLogger();\n        }\n        else {\n            this.log = options.log || new NullLogger();\n        }\n        if (options.seed) {\n            this.seed = options.seed;\n        }\n        else {\n            this.seed = 0;\n        }\n    }\n    _pickRandom(requiredFlags, depth, rng) {\n        rng = rng || GWU.rng.random;\n        const blueprints = this.blueprints || Object.values(BLUE.blueprints);\n        const weights = blueprints.map((b) => {\n            if (!b.qualifies(requiredFlags))\n                return 0;\n            return b.frequency(depth);\n        });\n        const index = rng.weighted(weights);\n        return blueprints[index] || null;\n    }\n    buildRandom(site, requiredMachineFlags = BLUE.Flags.BP_ROOM, x = -1, y = -1, adoptedItem = null) {\n        const depth = site.depth;\n        let tries = 0;\n        while (tries < 10) {\n            const blueprint = this._pickRandom(requiredMachineFlags, depth, site.rng);\n            if (!blueprint) {\n                this.log.onBuildError(`Failed to find matching blueprint: requiredMachineFlags : ${GWU.flag.toString(BLUE.Flags, requiredMachineFlags)}, depth: ${depth}`);\n                return null;\n            }\n            const data = new BuildData(site, blueprint);\n            site.analyze();\n            this.log.onBlueprintPick(data, requiredMachineFlags, depth);\n            if (this._buildAt(data, x, y, adoptedItem)) {\n                return { x, y };\n            }\n            ++tries;\n        }\n        // console.log(\n        //     'Failed to build random blueprint matching flags: ' +\n        //         GWU.flag.toString(BLUE.Flags, requiredMachineFlags) +\n        //         ' tried : ' +\n        //         tries.join(', ')\n        // );\n        return null;\n    }\n    build(site, blueprint, x = -1, y = -1, adoptedItem = null) {\n        if (typeof blueprint === 'string') {\n            const id = blueprint;\n            blueprint = BLUE.blueprints[id];\n            if (!blueprint)\n                throw new Error('Failed to find blueprint - ' + id);\n        }\n        if (this.seed) {\n            site.rng.seed(this.seed);\n        }\n        const data = new BuildData(site, blueprint);\n        site.analyze();\n        return this._buildAt(data, x, y, adoptedItem);\n    }\n    _buildAt(data, x = -1, y = -1, adoptedItem = null) {\n        if (x >= 0 && y >= 0) {\n            return this._build(data, x, y, adoptedItem);\n        }\n        let count = this._markCandidates(data);\n        if (!count) {\n            return null;\n        }\n        let tries = 20; // TODO - Make property of Blueprint\n        while (count-- && tries--) {\n            const loc = BLUE.pickCandidateLoc(data) || false;\n            if (loc) {\n                if (this._build(data, loc[0], loc[1], adoptedItem)) {\n                    return { x: loc[0], y: loc[1] };\n                }\n            }\n        }\n        this.log.onBlueprintFail(data, 'No suitable locations found to build blueprint.');\n        return null;\n    }\n    //////////////////////////////////////////\n    // Returns true if the machine got built; false if it was aborted.\n    // If empty array spawnedItems or spawnedMonsters is given, will pass those back for deletion if necessary.\n    _build(data, originX, originY, adoptedItem = null) {\n        data.reset(originX, originY);\n        this.log.onBlueprintStart(data, adoptedItem);\n        if (!this._computeInterior(data)) {\n            return null;\n        }\n        // This is the point of no return. Back up the level so it can be restored if we have to abort this machine after this point.\n        const snapshot = data.site.snapshot();\n        data.machineNumber = data.site.nextMachineId(); // Reserve this machine number, starting with 1.\n        // Perform any transformations to the interior indicated by the blueprint flags, including expanding the interior if requested.\n        BLUE.prepareInterior(data);\n        // Calculate the distance map (so that features that want to be close to or far from the origin can be placed accordingly)\n        // and figure out the 33rd and 67th percentiles for features that want to be near or far from the origin.\n        data.calcDistances(data.blueprint.size.hi);\n        // Now decide which features will be skipped -- of the features marked MF_ALTERNATIVE, skip all but one, chosen randomly.\n        // Then repeat and do the same with respect to MF_ALTERNATIVE_2, to provide up to two independent sets of alternative features per machine.\n        const components = data.blueprint.pickComponents(data.site.rng);\n        // Zero out occupied[][], and use it to keep track of the personal space around each feature that gets placed.\n        // Now tick through the features and build them.\n        for (let index = 0; index < components.length; index++) {\n            const component = components[index];\n            // console.log('BUILD COMPONENT', component);\n            if (!this._buildStep(data, component, adoptedItem)) {\n                // failure! abort!\n                // Restore the map to how it was before we touched it.\n                this.log.onBlueprintFail(data, `Failed to build step ${component.index + 1}/${data.blueprint.steps.length}.`);\n                data.site.restore(snapshot);\n                snapshot.free();\n                // abortItemsAndMonsters(spawnedItems, spawnedMonsters);\n                return null;\n            }\n        }\n        // Clear out the interior flag for all non-wired cells, if requested.\n        if (data.blueprint.noInteriorFlag) {\n            SITE.clearInteriorFlag(data.site, data.machineNumber);\n        }\n        // if (torchBearer && torch) {\n        // \tif (torchBearer->carriedItem) {\n        // \t\tdeleteItem(torchBearer->carriedItem);\n        // \t}\n        // \tremoveItemFromChain(torch, floorItems);\n        // \ttorchBearer->carriedItem = torch;\n        // }\n        this.log.onBlueprintSuccess(data);\n        snapshot.free();\n        // console.log('Built a machine from blueprint:', originX, originY);\n        return { x: originX, y: originY };\n    }\n    _markCandidates(data) {\n        const count = BLUE.markCandidates(data);\n        if (count <= 0) {\n            this.log.onBlueprintFail(data, 'No suitable candidate locations found.');\n            return 0;\n        }\n        this.log.onBlueprintCandidates(data);\n        return count;\n    }\n    _computeInterior(data) {\n        let fail = null;\n        let count = data.blueprint.fillInterior(data);\n        // Now make sure the interior map satisfies the machine's qualifications.\n        if (!count) {\n            fail = 'Interior error.';\n        }\n        else if (!data.blueprint.size.contains(count)) {\n            fail = `Interior wrong size - have: ${count}, want: ${data.blueprint.size.toString()}`;\n        }\n        else if (data.blueprint.treatAsBlocking &&\n            SITE.siteDisruptedBy(data.site, data.interior, {\n                machine: data.site.machineCount,\n            })) {\n            fail = 'Interior blocks map.';\n        }\n        else if (data.blueprint.requireBlocking &&\n            SITE.siteDisruptedSize(data.site, data.interior) < 100) {\n            fail = 'Interior does not block enough cells.';\n        }\n        if (!fail) {\n            this.log.onBlueprintInterior(data);\n            return true;\n        }\n        this.log.onBlueprintFail(data, fail);\n        return false;\n    }\n    _buildStep(data, buildStep, adoptedItem) {\n        let wantCount = 0;\n        let builtCount = 0;\n        const site = data.site;\n        this.log.onStepStart(data, buildStep, adoptedItem);\n        // console.log(\n        //     'buildComponent',\n        //     blueprint.id,\n        //     blueprint.steps.indexOf(buildStep)\n        // );\n        // Figure out the distance bounds.\n        const distanceBound = STEP.calcDistanceBound(data, buildStep);\n        // If the StepFlags.BS_REPEAT_UNTIL_NO_PROGRESS flag is set, repeat until we fail to build the required number of instances.\n        // Make a master map of candidate locations for this feature.\n        let qualifyingTileCount = 0;\n        if (buildStep.buildVestibule) {\n            // Generate a door guard machine.\n            // Try to create a sub-machine that qualifies.\n            let success = this.buildRandom(data.site, BLUE.Flags.BP_VESTIBULE, data.originX, data.originY);\n            if (!success) {\n                this.log.onStepFail(data, buildStep, 'Failed to build vestibule');\n                return false;\n            }\n        }\n        // If we are just building a vestibule, then we can exit here...\n        if (!buildStep.buildsInstances) {\n            this.log.onStepSuccess(data, buildStep);\n            return true;\n        }\n        const candidates = GWU.grid.alloc(site.width, site.height);\n        let didSomething = false;\n        do {\n            didSomething = false;\n            if (buildStep.buildAtOrigin) {\n                candidates[data.originX][data.originY] = 1;\n                qualifyingTileCount = 1;\n                wantCount = 1;\n            }\n            else {\n                qualifyingTileCount = buildStep.markCandidates(data, candidates, distanceBound);\n                if (buildStep.generateEverywhere ||\n                    buildStep.repeatUntilNoProgress) {\n                    wantCount = qualifyingTileCount;\n                }\n                else {\n                    wantCount = buildStep.count.value(site.rng);\n                }\n                this.log.onStepCandidates(data, buildStep, candidates, wantCount);\n                // get rid of all error/invalid codes\n                candidates.update((v) => (v == 1 ? 1 : 0));\n                if (!qualifyingTileCount ||\n                    qualifyingTileCount < buildStep.count.lo) {\n                    this.log.onStepFail(data, buildStep, `Only ${qualifyingTileCount} qualifying tiles - want ${buildStep.count.toString()}.`);\n                    return false;\n                }\n            }\n            let x = 0, y = 0;\n            while (qualifyingTileCount > 0 && builtCount < wantCount) {\n                // Find a location for the feature.\n                if (buildStep.buildAtOrigin) {\n                    // Does the feature want to be at the origin? If so, put it there. (Just an optimization.)\n                    x = data.originX;\n                    y = data.originY;\n                }\n                else {\n                    // Pick our candidate location randomly, and also strike it from\n                    // the candidates map so that subsequent instances of this same feature can't choose it.\n                    [x, y] = data.rng.matchingLoc(candidates.width, candidates.height, (x, y) => candidates[x][y] == 1);\n                }\n                // Don't waste time trying the same place again whether or not this attempt succeeds.\n                candidates[x][y] = 0;\n                qualifyingTileCount--;\n                const snapshot = data.site.snapshot();\n                if (this._buildStepInstance(data, buildStep, x, y, adoptedItem)) {\n                    // OK, if placement was successful, clear some personal space around the feature so subsequent features can't be generated too close.\n                    qualifyingTileCount -= buildStep.makePersonalSpace(data, x, y, candidates);\n                    builtCount++; // we've placed an instance\n                    didSomething = true;\n                    snapshot.free(); // This snapshot is useless b/c we made changes...\n                }\n                else {\n                    data.site.restore(snapshot); // need to undo any changes...\n                    snapshot.free();\n                }\n                // Finished with this instance!\n            }\n        } while (didSomething && buildStep.repeatUntilNoProgress);\n        GWU.grid.free(candidates);\n        if (!buildStep.count.contains(builtCount) &&\n            !buildStep.generateEverywhere &&\n            !buildStep.repeatUntilNoProgress) {\n            this.log.onStepFail(data, buildStep, `Failed to build enough instances - want: ${buildStep.count.toString()}, built: ${builtCount}`);\n            return false;\n        }\n        this.log.onStepSuccess(data, buildStep);\n        return true;\n    }\n    _buildStepInstance(data, buildStep, x, y, adoptedItem = null) {\n        let success = true;\n        let didSomething = true;\n        const site = data.site;\n        if (success && buildStep.treatAsBlocking) {\n            // Yes, check for blocking.\n            const options = {\n                machine: site.machineCount,\n            };\n            if (buildStep.noBlockOrigin) {\n                options.updateWalkable = (g) => {\n                    g[data.originX][data.originY] = 1;\n                    return true;\n                };\n            }\n            if (SITE.siteDisruptedByXY(site, x, y, options)) {\n                this.log.onStepInstanceFail(data, buildStep, x, y, 'instance blocks map');\n                success = false;\n            }\n        }\n        // Try to build the DF first, if any, since we don't want it to be disrupted by subsequently placed terrain.\n        if (success && buildStep.feature) {\n            success = buildStep.feature(site, x, y);\n            didSomething = success;\n            if (!success) {\n                this.log.onStepInstanceFail(data, buildStep, x, y, 'Failed to build effect - ' +\n                    JSON.stringify(buildStep.feature));\n            }\n        }\n        // Now try to place the terrain tile, if any.\n        if (success && buildStep.tile) {\n            if (!buildStep.permitBlocking &&\n                site.tileBlocksMove(buildStep.tile) &&\n                !buildStep.treatAsBlocking // already did treatAsBlocking\n            ) {\n                if (SITE.siteDisruptedByXY(site, x, y, {\n                    machine: site.machineCount,\n                })) {\n                    this.log.onStepInstanceFail(data, buildStep, x, y, 'tile blocks site');\n                    success = false;\n                }\n            }\n            if (success) {\n                success = site.setTile(x, y, buildStep.tile);\n                didSomething = didSomething || success;\n                if (!success) {\n                    this.log.onStepInstanceFail(data, buildStep, x, y, 'failed to set tile - ' + buildStep.tile);\n                }\n            }\n        }\n        let torch = adoptedItem;\n        // Generate an item, if necessary\n        if (success && buildStep.item) {\n            const itemInfo = ITEM.pickItem(data.site.depth, buildStep.item);\n            if (!itemInfo) {\n                success = false;\n                this.log.onStepInstanceFail(data, buildStep, x, y, 'Failed to make random item - ' +\n                    JSON.stringify(buildStep.item));\n            }\n            else {\n                const item = ITEM.makeItem(itemInfo);\n                if (buildStep.itemIsKey) {\n                    item.key = {\n                        x,\n                        y,\n                        disposable: !!buildStep.keyIsDisposable,\n                    };\n                }\n                if (buildStep.outsourceItem) {\n                    const result = this.buildRandom(data.site, BLUE.Flags.BP_ADOPT_ITEM, -1, -1, item);\n                    if (result) {\n                        didSomething = true;\n                    }\n                    else {\n                        this.log.onStepInstanceFail(data, buildStep, x, y, 'Failed to build machine to adopt item - ' + item.id);\n                        success = false;\n                    }\n                }\n                else if (buildStep.hordeTakesItem) {\n                    torch = item;\n                }\n                else {\n                    success = site.addItem(x, y, item) > 0;\n                    didSomething = didSomething || success;\n                    if (!success) {\n                        this.log.onStepInstanceFail(data, buildStep, x, y, 'Failed to add item to site - ' + item.id);\n                    }\n                }\n            }\n        }\n        else if (success && buildStep.adoptItem) {\n            // adopt item if necessary\n            if (!adoptedItem) {\n                throw new Error('Failed to build blueprint because there is no adopted item.');\n            }\n            if (success) {\n                success = site.addItem(x, y, adoptedItem) > 0;\n                if (success) {\n                    didSomething = true;\n                }\n                else {\n                    this.log.onStepInstanceFail(data, buildStep, x, y, 'Failed to add adopted item to site - ' + adoptedItem.id);\n                }\n            }\n        }\n        let torchBearer = null;\n        if (success && buildStep.horde) {\n            let horde = HORDE.pickHorde(data.site.depth, buildStep.horde, site.rng);\n            // if (buildStep.horde.random) {\n            //     horde = GWM.horde.random({ rng: site.rng });\n            // } else if (buildStep.horde.id) {\n            //     horde = GWM.horde.from(buildStep.horde.id);\n            // } else {\n            //     buildStep.horde.rng = site.rng;\n            //     horde = GWM.horde.random(buildStep.horde);\n            // }\n            if (!horde) {\n                success = false;\n                this.log.onStepInstanceFail(data, buildStep, x, y, 'Failed to pick horde - ' + JSON.stringify(buildStep.horde));\n            }\n            else {\n                if (horde.blueprint) {\n                    const blueprint = BLUE.get(horde.blueprint);\n                    const newData = new BuildData(data.site, blueprint, data.machineNumber);\n                    const result = this._build(newData, x, y, null);\n                    newData.free();\n                    if (!result) {\n                        return false;\n                    }\n                }\n                const leader = HORDE.spawnHorde(horde, site, x, y, {\n                    machine: site.machineCount,\n                });\n                if (!leader) {\n                    success = false;\n                    this.log.onStepInstanceFail(data, buildStep, x, y, 'Failed to build horde - ' + horde);\n                }\n                else {\n                    // What to do now?\n                    didSomething = true;\n                    // leader adopts item...\n                    if (torch && buildStep.hordeTakesItem) {\n                        torchBearer = leader;\n                        torchBearer.item = torch;\n                        torch.x = -1;\n                        torch.y = -1;\n                    }\n                    if (horde.feature) {\n                        horde.feature(site, x, y);\n                    }\n                    if (buildStep.horde.feature) {\n                        buildStep.horde.feature(site, x, y);\n                    }\n                }\n            }\n        }\n        if (success && didSomething) {\n            // Mark the feature location as part of the machine, in case it is not already inside of it.\n            if (!data.blueprint.noInteriorFlag) {\n                site.setMachine(x, y, data.machineNumber, data.blueprint.isRoom);\n            }\n            // Mark the feature location as impregnable if requested.\n            if (buildStep.impregnable) {\n                site.makeImpregnable(x, y);\n            }\n            this.log.onStepInstanceSuccess(data, buildStep, x, y);\n        }\n        else if (didSomething) {\n            // roll back any changes?\n        }\n        return success && didSomething;\n    }\n}\n////////////////////////////////////////////////////\n// TODO - Change this!!!\n// const blue = BLUE.get(id | blue);\n// const result =  blue.buildAt(map, x, y);\n//\nexport function build(blueprint, site, x, y, opts) {\n    const builder = new Builder(opts);\n    return builder.build(site, blueprint, x, y);\n}\n"],"names":["install","make","Fl","Flags","FEATURE.make","DIRS","TILE.getTile","TILE.tileId","ANALYZE.analyze","Utils.directionOfDoorSite","SITE.chooseRandomDoorSites","TYPES.Room","TYPES.makeHall","SITE.computeDistanceMap","LOGGER.NullLogger","SITE.Site","ROOM.RoomDigger","ROOM.rooms","ROOM.ChoiceRoom","hall","HALL.dig","LOOP.LoopDigger","LAKE.Lakes","BRIDGE.Bridges","STAIRS.Stairs","LEVEL.Digger","STEP.BuildStep","STEP.StepFlags","BLUE.get","blueprints","BLUE.blueprints","BLUE.Flags","BLUE.pickCandidateLoc","BLUE.prepareInterior","SITE.clearInteriorFlag","BLUE.markCandidates","SITE.siteDisruptedBy","SITE.siteDisruptedSize","STEP.calcDistanceBound","SITE.siteDisruptedByXY","ITEM.pickItem","ITEM.makeItem","HORDE.pickHorde","HORDE.spawnHorde"],"mappings":"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AAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACrC,SAAS;AACT,KAAK,CAAC,CAAC;AACP,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;AAChD,IAAI,IAAI,GAAG,EAAE,WAAW,CAAC;AACzB,IAAI,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAC/B,IAAI,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC,YAAY,CAAC;AACtC,IAAI,KAAK,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;AAClC,QAAQ,IAAI,GAAG,CAAC,GAAGA,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,QAAQ,IAAI,GAAG,CAAC,GAAGA,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,QAAQ,IAAI,GAAG,CAAC,GAAGA,MAAI,CAAC,GAAG,CAAC,CAA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"}