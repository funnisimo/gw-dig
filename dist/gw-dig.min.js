!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("gw-utils")):"function"==typeof define&&define.amd?define(["exports","gw-utils"],o):o((t="undefined"!=typeof globalThis?globalThis:t||self).GW=t.GW||{},t.GW)}(this,(function(t,o){"use strict";class i{constructor(t,i,e,r=1){this.width=1,this.doors=[],this.x=t[0],this.y=t[1];const n=o.utils.DIRS[i];this.length=e,this.width=r,i===o.utils.UP||i===o.utils.DOWN?(this.x2=this.x+(r-1),this.y2=this.y+(e-1)*n[1]):(this.x2=this.x+(e-1)*n[0],this.y2=this.y+(r-1)),this.dir=i}translate(t,o){this.x+=t,this.y+=o,this.x2+=t,this.y2+=o,this.doors&&this.doors.forEach((i=>{i&&(i[0]<0||i[1]<0||(i[0]+=t,i[1]+=o))}))}}class e{constructor(t,o,i,e,r){this.doors=[],this.hall=null,this.digger=t,this.x=o,this.y=i,this.width=e,this.height=r}get cx(){return this.x+Math.floor(this.width/2)}get cy(){return this.y+Math.floor(this.height/2)}translate(t,o){this.x+=t,this.y+=o,this.doors&&this.doors.forEach((i=>{i&&(i[0]<0||i[1]<0||(i[0]+=t,i[1]+=o))})),this.hall&&this.hall.translate(t,o)}}var r={};function n(t,o,i){const e=o(i||{});return e.fn=o,e.id=t,r[t]=e,e}function l(t,i){return t=t||{},i=i||{},Object.entries(i).forEach((([i,e])=>{let r=t[i];if("tile"===i)return void(void 0===r&&(t[i]=e));if(!0===e){if(!r)return o.utils.ERROR("Missing required config for digger: "+i)}else r=("number"==typeof e||Array.isArray(e),r||e);const n=o.range.make(r);t[i]=n})),t}function h(t,o){if(t=l(t,{width:[3,6],height:[3,6]}),!o)return t;const i=t.width.value(),r=t.height.value(),n=t.tile||1;o.fill(0);const h=Math.floor((o.width-i)/2),f=Math.floor((o.height-r)/2);return o.fillRect(h,f,i,r,n),new e(t.id,h,f,i,r)}n("DEFAULT",h);var f={__proto__:null,Hall:i,Room:e,rooms:r,install:n,checkConfig:l,cavern:function(t,i){if(t=l(t,{width:12,height:8}),!i)return t;let r,n,h;const f=t.width.value(),a=t.height.value(),s=t.tile||1;h=o.grid.alloc(i.width,i.height,0);const c=Math.floor(.5*f),u=f,d=Math.floor(.5*a),g=a;i.fill(0);const m=h.fillBlob(5,c,d,u,g,55,"ffffffttt","ffffttttt");return r=Math.floor((i.width-m.width)/2),n=Math.floor((i.height-m.height)/2),o.grid.offsetZip(i,h,r-m.x,n-m.y,s),o.grid.free(h),new e(t.id,r,n,m.width,m.height)},choiceRoom:function(t,i){let e;if(t=t||{},Array.isArray(t.choices)?e=o.random.item.bind(o.random,t.choices):"object"==typeof t.choices?e=o.random.weighted.bind(o.random,t.choices):o.utils.ERROR("Expected choices to be either array of room ids or map - ex: { ROOM_ID: weight }"),!i)return t;let n=e();const l=r[n];l||o.utils.ERROR("Missing digger choice: "+n);let h=l;return t.opts&&(h=Object.assign({},l,t.opts)),l.fn(h,i)},entrance:function(t,o){if(t=l(t,{width:20,height:10}),!o)return t;const i=t.width.value(),r=t.height.value(),n=t.tile||1,h=Math.floor(.4*i),f=r,a=i,s=Math.floor(.5*r),c=Math.floor(o.width/2-h/2-1),u=o.height-f-2,d=Math.floor(o.width/2-a/2-1),g=o.height-s-2;return o.fill(0),o.fillRect(c,u,h,f,n),o.fillRect(d,g,a,s,n),new e(t.id,Math.min(c,d),Math.min(u,g),Math.max(h,a),Math.max(f,s))},cross:function(t,i){if(t=l(t,{width:12,height:20}),!i)return t;const r=t.width.value(),n=t.height.value(),h=t.tile||1,f=r,a=Math.max(3,Math.floor(r*o.random.range(25,75)/100)),s=Math.max(3,Math.floor(n*o.random.range(25,75)/100)),c=n,u=Math.floor((i.width-f)/2),d=u+o.random.range(2,Math.max(2,f-a-2)),g=Math.floor((i.height-c)/2),m=g+o.random.range(2,Math.max(2,c-s-2));return i.fill(0),i.fillRect(u,m,f,s,h),i.fillRect(d,g,a,c,h),new e(t.id,u,g,Math.max(f,a),Math.max(s,c))},symmetricalCross:function(t,i){if(t=l(t,{width:7,height:7}),!i)return t;const r=t.width.value(),n=t.height.value(),h=t.tile||1;let f=Math.max(3,Math.floor(r*o.random.range(25,50)/100)),a=Math.max(3,Math.floor(n*o.random.range(25,50)/100));i.fill(0);const s=Math.floor((i.width-r)/2),c=Math.floor((i.height-a)/2);i.fillRect(s,c,r,a,h);const u=Math.floor((i.width-f)/2),d=Math.floor((i.height-n)/2);return i.fillRect(u,d,f,n,h),new e(t.id,Math.min(s,u),Math.min(c,d),Math.max(r,f),Math.max(n,a))},rectangular:h,circular:function(t,o){if(t=l(t,{radius:[3,4]}),!o)return t;const i=t.radius.value(),r=t.tile||1;o.fill(0);const n=Math.floor(o.width/2),h=Math.floor(o.height/2);return i>1&&o.fillCircle(n,h,i,r),new e(t.id,n-i,h-i,2*i+1,2*i+1)},brogueDonut:function(t,i){if(t=l(t,{radius:[5,10],ringMinWidth:3,holeMinSize:3,holeChance:50}),!i)return t;const r=t.radius.value(),n=t.ringMinWidth.value(),h=t.holeMinSize.value(),f=t.tile||1;i.fill(0);const a=Math.floor(i.width/2),s=Math.floor(i.height/2);return i.fillCircle(a,s,r,f),r>n+h&&o.random.chance(t.holeChance.value())&&i.fillCircle(a,s,o.random.range(h,r-h),0),new e(t.id,a-r,s-r,2*r+1,2*r+1)},chunkyRoom:function(t,i){if(t=l(t,{count:[2,12],width:[5,20],height:[5,20]}),!i)return t;let r,n,h,f,a,s,c,u=t.count.value();const d=t.width.value(),g=t.height.value(),m=t.tile||1;for(f=Math.floor(i.width/2)-Math.floor(d/2),a=Math.floor(i.width/2)+Math.floor(d/2),s=Math.floor(i.height/2)-Math.floor(g/2),c=Math.floor(i.height/2)+Math.floor(g/2),i.fill(0),i.fillCircle(Math.floor(i.width/2),Math.floor(i.height/2),2,m),r=0;r<u;)if(n=o.random.range(f,a),h=o.random.range(s,c),i[n][h]){if(n-2<f)continue;if(n+2>a)continue;if(h-2<s)continue;if(h+2>c)continue;i.fillCircle(n,h,2,m),r++}const w=i.valueBounds(m);return new e(t.id,w.x,w.y,w.width,w.height)}};const a=o.utils.DIRS;var s={};function c(t,o,i={}){const e=o(i||{});return e.fn=o,e.id=t,s[t]=e,e}function u(t={}){return o.utils.clamp(function(t){if(!t)return 1;if("number"==typeof t)return t;if(void 0===t.width)return 1;let i=t.width;if("number"==typeof i)return i;i=Array.isArray(i)?o.random.weighted(i)+1:"string"==typeof i?o.range.make(i).value():Number.parseInt(o.random.weighted(i));return i}(t),1,3)}function d(t,i){return i.length||(i.length=[]),Array.isArray(i.length)?t==o.utils.UP||t==o.utils.DOWN?o.range.make(i.length[1]||[2,9]):o.range.make(i.length[0]||[9,15]):o.range.make(i.length)}function g(t,i,e){const r=i.doors;let n=e.dir||o.utils.NO_DIRECTION;if(n==o.utils.NO_DIRECTION){const i=o.random.sequence(4);for(let l=0;l<4;l++){n=i[l];const h=d(n,e).hi,f=r[n];if(f&&-1!=f[0]&&-1!=f[1]){const o=f[0]+Math.floor(a[n][0]*h),i=f[1]+Math.floor(a[n][1]*h);if(t.hasXY(o,i))break}n=o.utils.NO_DIRECTION}}return n}function m(t,i,e,r,n){let l,h;const f=o.utils.firstOpt("obliqueChance",n,15),s=o.random.chance(f),c=[];for(let o=0;o<4;o++)l=i+a[o][0],h=e+a[o][1],o!=r&&!s||!t.hasXY(l,h)||t[l][h]||(c[o]=[l,h]);return c}function w(t,e,r){if((t=t||{}).width=1,!e)return t;const n=g(e,r,t);if(n===o.utils.NO_DIRECTION)return null;const l=d(n,t).value(),h=r.doors[n],f=a[n];let s=h[0],c=h[1];const u=t.tile||1;for(let t=0;t<l;t++)e[s][c]=u,s+=f[0],c+=f[1];s-=f[0],c-=f[1];const w=new i(h,n,l);return w.doors=m(e,s,c,n,t),w}c("DEFAULT",w,{chance:15});var M={__proto__:null,halls:s,install:c,pickWidth:u,pickLengthRange:d,pickHallDirection:g,pickHallExits:m,digWide:function(t,e,r){if((t=t||{}).width||(t.width=2),!e)return t;const n=g(e,r,t);if(n===o.utils.NO_DIRECTION)return null;const l=d(n,t).value(),h=u(t)||2,f=r.doors[n],a=t.tile||1,s=[];let c,m,w;if(n===o.utils.UP){c=o.utils.clamp(f[0],r.x,r.x+r.width-h),m=f[1]-l+1;for(let t=c;t<c+h;++t)for(let o=m;o<m+l;++o)e[t][o]=a;s[n]=[c,m-1],w=new i([c,f[1]],n,l,2)}else if(n===o.utils.DOWN){c=o.utils.clamp(f[0],r.x,r.x+r.width-h),m=f[1]+l-1;for(let t=c;t<c+h;++t)for(let o=m;o>m-l;--o)e[t][o]=a;s[n]=[c,m+1],w=new i([c,f[1]],n,l,2)}else if(n===o.utils.LEFT){c=f[0]-l+1,m=o.utils.clamp(f[1],r.y,r.y+r.height-h);for(let t=c;t<c+l;++t)for(let o=m;o<m+h;++o)e[t][o]=a;s[n]=[c-1,m],w=new i([f[0],m],n,l,2)}else{c=f[0]+l-1,m=o.utils.clamp(f[1],r.y,r.y+r.height-h);for(let t=c;t>c-l;--t)for(let o=m;o<m+h;++o)e[t][o]=a;s[n]=[c+1,m],w=new i([f[0],m],n,l,h)}return w.doors=s,w.width=h,w},dig:w};const y=o.utils.DIRS;var p;function R(t,i,e,r){const n=e.hall?e.hall.doors:e.doors;for(let l=0;l<p.length;l++){const h=Math.floor(p[l]/t.height),f=p[l]%t.height;if(0!=t.get(h,f))continue;const a=x(t,h,f,1);if(a!=o.utils.NO_DIRECTION){const l=(a+2)%4,s=n[l];if(!s)continue;const c=h-s[0],u=f-s[1];if(-1!=s[0]&&D(t,i,c,u))return o.grid.offsetZip(t,i,c,u,((o,i,e,n)=>{t[e][n]=r.room.tile||1})),O(t,e,r,h,f,l),e.translate(c,u),!0}}return!1}function O(t,i,e,r,n,l){const h=e.door||2;if(t[r][n]=h,i.hall&&i.hall.width>1&&i.hall.dir===l)if(l===o.utils.UP||l===o.utils.DOWN){let o=!0,i=1;for(;o;)o=!1,0===t.get(r-i,n)&&t.get(r-i,n-1)&&t.get(r-i,n+1)&&(t[r-i][n]=h,o=!0),0===t.get(r+i,n)&&t.get(r+i,n-1)&&t.get(r+i,n+1)&&(t[r+i][n]=h,o=!0),++i}else{let o=!0,i=1;for(;o;)o=!1,0===t.get(r,n-i)&&t.get(r-1,n-i)&&t.get(r+1,n-i)&&(t[r][n-i]=e.door,o=!0),0===t.get(r,n+i)&&t.get(r-1,n+i)&&t.get(r+1,n+i)&&(t[r][n+i]=e.door,o=!0),++i}}function D(t,o,i,e){let r,n,l,h,f,a;for(r=0;r<o.width;r++)for(n=0;n<o.height;n++)if(o[r][n])for(l=r+i,h=n+e,f=l-1;f<=l+1;f++)for(a=h-1;a<=h+1;a++)if(!t.hasXY(f,a)||t.isBoundaryXY(f,a)||0!==t.get(f,a))return!1;return!0}function x(t,i,e,r){let n,l,h,f,a,s;const c="function"==typeof r?r:t=>t==r;for(l=o.utils.NO_DIRECTION,n=0;n<4;n++)if(h=i+y[n][0],f=e+y[n][1],a=i-y[n][0],s=e-y[n][1],t.hasXY(a,s)&&t.hasXY(h,f)&&c(t[a][s],a,s,t)){if(l!=o.utils.NO_DIRECTION)return o.utils.NO_DIRECTION;l=n}return l}function v(t,i,e,r,n){const l=o.random.sequence(i.length);for(let o=0;o<l.length;o++){const h=i[l[o]];if(!h)continue;if(E(t,h[0],h[1],e,r,n))return!0}return!1}function E(t,i,e,r,n,l){const h=n.hall?n.hall.doors:n.doors,f=o.random.sequence(4);for(let a of f){const f=(a+2)%4,s=h[f];if(s&&(-1!=s[0]&&D(t,r,i-s[0],e-s[1]))){const h=i-s[0],a=e-s[1];return o.grid.offsetZip(t,r,h,a,((o,i,e,r)=>{t[e][r]=l.room.tile||1})),O(t,n,l,i,e,f),n.translate(h,a),!0}}return!1}function I(t,i){let e,r,n,l,h,f,a;i=i||1;const s=o.grid.alloc(t.width,t.height);for(s.copy(t),e=0;e<s.width;e++)for(r=0;r<s.height;r++)if(!s[e][r]&&(f=x(s,e,r,i),f!=o.utils.NO_DIRECTION)){for(l=e+y[f][0],h=r+y[f][1],a=!1,n=0;n<10&&s.hasXY(l,h)&&!a;n++)s[l][h]&&(a=!0),l+=y[f][0],h+=y[f][1];a||(s[e][r]=f+200)}let c=[];for(f=0;f<4;f++){const t=s.randomMatchingLoc(f+200)||[-1,-1];c[f]=[t[0],t[1]]}return o.grid.free(s),c}function N(t,o,i){const e=t.get(o,i);return 1===e||2===e||5===e||6===e||7===e}function _(t,o,i){return 2===t.get(o,i)}function T(t,o,i){const e=t.get(o,i);return 0===e||3===e}function b(t,o,i){const e=t.get(o,i);return 6===e||7===e}function A(t,i,e=0,r=0){const n=o.grid.alloc(t.width,t.height);let l=!1;t.forEach(((o,h,f)=>{const a=h+e,s=f+r;if(o)if(b(t,h,f))i.get(a,s)?l=!0:n[h][f]=1;else if(N(t,h,f)){if(i.get(a,s))return;n[h][f]=1}}));let h=!0;for(let t=0;t<n.width&&!l;++t)for(let o=0;o<n.height&&!l;++o)1==n[t][o]&&(h?(n.floodFill(t,o,1,2),console.log("FLOOD FILL",t,o),h=!1):l=!0);return o.grid.free(n),l}function C(t){let i,e,r,n,l,h;do{for(h=!1,i=0;i<t.width-1;i++)for(e=0;e<t.height-1;e++)for(r=0;r<=1;r++)N(t,i+r,e)&&!N(t,i+(1-r),e)&&T(t,i+(1-r),e)&&!N(t,i+r,e+1)&&T(t,i+r,e+1)&&N(t,i+(1-r),e+1)&&(o.random.chance(50)?(n=i+(1-r),l=e):(n=i+r,l=e+1),h=!0,t[n][l]=1)}while(1==h)}function L(t){t.forEach(((o,i,e)=>{t.isBoundaryXY(i,e)||2==o&&(1!=t.get(i+1,e)&&1!=t.get(i-1,e)||1!=t.get(i,e+1)&&1!=t.get(i,e-1)?(1!==t.get(i+1,e)?1:0)+(1!==t.get(i-1,e)?1:0)+(1!==t.get(i,e+1)?1:0)+(1!==t.get(i,e-1)?1:0)>=3&&(t[i][e]=1):t[i][e]=1)}))}function X(t,o=3){t.forEach(((i,e,r)=>{0==i&&(t[e][r]=o)}))}var Y={__proto__:null,room:f,hall:M,start:function(t){p=o.random.sequence(t.width*t.height),t.fill(0)},finish:function(t){C(t),X(t),L(t)},dig:function(t,i){if("string"==typeof(i=i||{room:"DEFAULT",hall:"DEFAULT",tries:10})&&(i={room:i}),i.loc&&(i.locs=[i.loc]),i.room||(i.room="DEFAULT"),"function"==typeof i.room&&(i.room={fn:i.room}),"string"==typeof i.room){const t=i.room;i.room=r[t],i.room||o.utils.ERROR("Failed to find room: "+t)}const e=i.room;let n=null;if(!0===i.hall&&(i.hall="DEFAULT"),!1===i.hall||i.hall||(i.hall="DEFAULT"),"function"==typeof i.hall&&(i.hall={fn:i.hall}),"string"==typeof i.hall){const t=i.hall;if(i.hall=s[t],!i.hall)return o.utils.ERROR("Failed to find hall: "+t),null;n=i.hall}else i.hall&&i.hall.fn&&(n=i.hall);!1===i.door?i.door=1:!0!==i.door&&i.door||(i.door=2);let l=i.locs||null;if(l&&Array.isArray(l))l&&l.length&&2==l.length&&"number"==typeof l[0]?l=[l]:0==l.length&&(l=null);else if(l=null,0===t.count(1)){l=[[Math.floor(t.width/2),t.height-2]]}const h=i.room,f=o.grid.alloc(t.width,t.height);let a=!1;if(n){let t=void 0!==n.chance?n.chance:15;a=o.random.chance(t)}let c,u=!1,d=i.tries||10;for(;--d>=0&&!u;)f.fill(0),c=h.fn(e,f),c.doors=I(f,1),a&&n&&(c.hall=n.fn(n,f,c)),u=l?v(t,l,f,c,i):R(t,f,c,i);return o.grid.free(f),c&&u?c:null},attachRoom:R,attachDoor:O,roomFitsAt:D,directionOfDoorSite:x,forceRoomAtMapLoc:function(t,i,e,r,n){for(let l=0;l<p.length;l++){const h=Math.floor(p[l]/t.height),f=p[l]%t.height;if(e[h][f])continue;if(x(e,h,f,1)!=o.utils.NO_DIRECTION){const l=i[0]-h,a=i[1]-f;if(D(t,e,l,a)){if(o.grid.offsetZip(t,e,l,a,((o,i,e,r)=>{t[e][r]=n.room.tile||1})),!1!==n.room.door){const o=!0!==n.room.door&&n.room.door?n.room.door:2;t[i[0]][i[1]]=o}return r.translate(l,a),!0}}}return!1},chooseRandomDoorSites:I,isPassable:N,isDoor:_,isObstruction:T,isStairs:b,addLoops:function(t,i,e){let r,n,l,h,f,a,s,c,u;i=i||Math.floor(Math.min(t.width,t.height)/2),e=e||1;const d=t,g=o.grid.alloc(t.width,t.height),m=o.grid.alloc(t.width,t.height),w=[[1,0],[0,1]];function M(o,i,e){return!!t.hasXY(o,i)&&(!!t.hasXY(o+e[1],i+e[0])&&(!!t.hasXY(o-e[1],i-e[0])&&(!t.get(o,i)&&(!t.get(o+e[1],i+e[0])&&!t.get(o-e[1],i-e[0])))))}function y(o,i,e){return!!t.hasXY(o,i)&&(!!t.hasXY(o+e[1],i+e[0])&&(!!t.hasXY(o-e[1],i-e[0])&&(!!t.get(o,i)||(!!t.get(o+e[1],i+e[0])||!!t.get(o-e[1],i-e[0])))))}for(function(t,i){t.forEach(((e,r,n)=>{i[r][n]=N(t,r,n)?1:o.path.OBSTRUCTION}))}(t,m),f=0;f<p.length;f++){c=Math.floor(p[f]/d.height),u=p[f]%d.height;if(!d[c][u])for(s=0;s<=1;s++){let f=w[s];if(M(c,u,f)){if(a=e,t.hasXY(c+f[0],u+f[1])&&N(t,c+f[0],u+f[1])){if(!t.hasXY(c-f[0],u-f[1])||_(t,c-f[0],u-f[1]))continue}else{if(!t.hasXY(c-f[0],u-f[1])||!N(t,c-f[0],u-f[1]))continue;if(!t.hasXY(c+f[0],u+f[1])||_(t,c+f[0],u+f[1]))continue;f=f.map((t=>-1*t))}for(r=c+f[0],n=u+f[1],l=c,h=u,a=0;a<e&&(l-=f[0],h-=f[1],!y(l,h,f));++a);if(a<e&&(o.path.calculateDistances(g,r,n,m,!1),g[l][h]>i&&g[l][h]<3e4)){for(;l!==r||h!==n;)0==t.get(l,h)&&(t[l][h]=1,m[l][h]=1),l+=f[0],h+=f[1];t[c][u]=2;break}}}}o.grid.free(g),o.grid.free(m)},addLakes:function(t,i={}){let e,r,n,l,h,f,a,s,c,u,d,g=0;f=i.height||15,a=i.width||30,s=i.minSize||5,c=i.tries||20,u=1,d=i.canDisrupt||!1;const m=o.grid.alloc(t.width,t.height,0);for(;f>=s&&a>=s&&g<1;f--,a-=2){m.fill(0);const s=m.fillBlob(5,4,4,a,f,55,"ffffftttt","ffffttttt");for(m.dump(),n=0;n<c&&g<1;n++)if(l=o.random.range(1-s.x,m.width-s.width-s.x-2),h=o.random.range(1-s.y,m.height-s.height-s.y-2),console.log("lake try",l,h),d||!A(t,m,-l,-h)){for(++g,e=0;e<s.width;e++)for(r=0;r<s.height;r++)if(m[e+s.x][r+s.y]){const o=e+s.x+l,n=r+s.y+h;t[o][n]=i.tile||4}break}}return o.grid.free(m),g},removeDiagonalOpenings:C,finishDoors:L,finishWalls:X,Room:e,Hall:i,NOTHING:0,FLOOR:1,DOOR:2,WALL:3,LAKE:4,BRIDGE:5,UP_STAIRS:6,DOWN_STAIRS:7};t.dig=Y,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=gw-dig.min.js.map
