!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("gw-utils")):"function"==typeof define&&define.amd?define(["exports","gw-utils"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).GW=t.GW||{},t.GW)}(this,(function(t,e){"use strict";function o(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(o){if("default"!==o){var i=Object.getOwnPropertyDescriptor(t,o);Object.defineProperty(e,o,i.get?i:{enumerable:!0,get:function(){return t[o]}})}})),e.default=t,e}var i=o(e);const r={0:"NULL",1:"FLOOR",2:"DOOR",3:"WALL",8:"IMPREGNABLE",4:"LAKE",5:"SHALLOW",6:"BRIDGE",7:"UP_STAIRS",17:"DOWN_STAIRS"},n=[];function h(t){n.length=t;for(let e=0;e<t;++e)n[e]=e;i.random.shuffle(n)}function l(t,e){t.forEach(((o,r,n)=>{e[r][n]=a(t,r,n)?1:i.path.OBSTRUCTION}))}function a(t,e,o){return c(t,e,o)||s(t,e,o)||u(t,e,o)||m(t,e,o)||w(t,e,o)}function f(t,e,o){return 0===t.get(e,o)}function c(t,e,o){return 1==t.get(e,o)}function s(t,e,o){return 2===t.get(e,o)}function u(t,e,o){return 6===t.get(e,o)}function d(t,e,o){const i=t.get(e,o);return 3===i||8===i}function g(t,e,o){return f(t,e,o)||d(t,e,o)}function m(t,e,o){const i=t.get(e,o);return 7===i||17===i}function y(t,e,o){return 4===t.get(e,o)}function w(t,e,o){return 5===t.get(e,o)}function x(t,e,o){return y(t,e,o)||w(t,e,o)}const M=i.xy.DIRS;function p(t,e,o,r){const h=o.hall?o.hall.doors:o.doors;for(let l=0;l<n.length;l++){const a=Math.floor(n[l]/t.height),f=n[l]%t.height;if(0!=t.get(a,f))continue;const c=D(t,a,f,1);if(c!=i.xy.NO_DIRECTION){const n=(c+2)%4,l=h[n];if(!l)continue;const s=a-l[0],u=f-l[1];if(-1!=l[0]&&O(t,e,s,u))return i.grid.offsetZip(t,e,s,u,((e,o,i,n)=>{t[i][n]=r.room.tile||1})),R(t,o,r,a,f,n),o.translate(s,u),!0}}return!1}function R(t,e,o,r,n,h){if(0===o.door)return;const l=o.door||2;if(t[r][n]=l,e.hall&&e.hall.width>1&&e.hall.dir===h)if(h===i.xy.UP||h===i.xy.DOWN){let e=!0,o=1;for(;e;)e=!1,0===t.get(r-o,n)&&t.get(r-o,n-1)&&t.get(r-o,n+1)&&(t[r-o][n]=l,e=!0),0===t.get(r+o,n)&&t.get(r+o,n-1)&&t.get(r+o,n+1)&&(t[r+o][n]=l,e=!0),++o}else{let e=!0,i=1;for(;e;)e=!1,0===t.get(r,n-i)&&t.get(r-1,n-i)&&t.get(r+1,n-i)&&(t[r][n-i]=o.door,e=!0),0===t.get(r,n+i)&&t.get(r-1,n+i)&&t.get(r+1,n+i)&&(t[r][n+i]=o.door,e=!0),++i}}function O(t,e,o,i){let r,n,h,l,a,f;for(r=0;r<e.width;r++)for(n=0;n<e.height;n++)if(e[r][n])for(h=r+o,l=n+i,a=h-1;a<=h+1;a++)for(f=l-1;f<=l+1;f++)if(!t.hasXY(a,f)||t.isBoundaryXY(a,f)||0!==t.get(a,f))return!1;return!0}function D(t,e,o,r){let n,h,l,a,f,c;const s="function"==typeof r?r:t=>t==r;for(h=i.xy.NO_DIRECTION,n=0;n<4;n++)if(l=e+M[n][0],a=o+M[n][1],f=e-M[n][0],c=o-M[n][1],t.hasXY(f,c)&&t.hasXY(l,a)&&s(t[f][c],f,c,t)){if(h!=i.xy.NO_DIRECTION)return i.xy.NO_DIRECTION;h=n}return h}function _(t,e,o,r,n){const h=i.random.sequence(e.length);for(let i=0;i<h.length;i++){const l=e[h[i]];if(!l)continue;if(E(t,l[0],l[1],o,r,n))return!0}return!1}function E(t,e,o,r,n,h){const l=n.hall?n.hall.doors:n.doors,a=i.random.sequence(4);for(let f of a){const a=(f+2)%4,c=l[a];if(c&&(-1!=c[0]&&O(t,r,e-c[0],o-c[1]))){const l=e-c[0],f=o-c[1];return i.grid.offsetZip(t,r,l,f,((e,o,i,r)=>{t[i][r]=h.room.tile||1})),R(t,n,h,e,o,a),n.translate(l,f),!0}}return!1}function L(t,e){let o,r,n,h,l,a,f;e=e||1;const c=i.grid.alloc(t.width,t.height);for(c.copy(t),o=0;o<c.width;o++)for(r=0;r<c.height;r++)if(!c[o][r]&&(a=D(c,o,r,e),a!=i.xy.NO_DIRECTION)){for(h=o+M[a][0],l=r+M[a][1],f=!1,n=0;n<10&&c.hasXY(h,l)&&!f;n++)c[h][l]&&(f=!0),h+=M[a][0],l+=M[a][1];f||(c[o][r]=a+200)}let s=[];for(a=0;a<4;a++){const t=c.randomMatchingLoc(a+200)||[-1,-1];s[a]=[t[0],t[1]]}return i.grid.free(c),s}var I={__proto__:null,attachRoom:p,attachDoor:R,roomFitsAt:O,directionOfDoorSite:D,forceRoomAtMapLoc:function(t,e,o,r,h){for(let l=0;l<n.length;l++){const a=Math.floor(n[l]/t.height),f=n[l]%t.height;if(o[a][f])continue;if(D(o,a,f,1)!=i.xy.NO_DIRECTION){const n=e[0]-a,l=e[1]-f;if(O(t,o,n,l)){if(i.grid.offsetZip(t,o,n,l,((e,o,i,r)=>{t[i][r]=h.room.tile||1})),!1!==h.room.door){const o=!0!==h.room.door&&h.room.door?h.room.door:2;t[e[0]][e[1]]=o}return r.translate(n,l),!0}}}return!1},attachRoomAtMapDoor:_,chooseRandomDoorSites:L};class N{constructor(t,e,o,r=1){this.width=1,this.doors=[],this.x=t[0],this.y=t[1];const n=i.xy.DIRS[e];this.length=o,this.width=r,e===i.xy.UP||e===i.xy.DOWN?(this.x2=this.x+(r-1),this.y2=this.y+(o-1)*n[1]):(this.x2=this.x+(o-1)*n[0],this.y2=this.y+(r-1)),this.dir=e}translate(t,e){this.x+=t,this.y+=e,this.x2+=t,this.y2+=e,this.doors&&this.doors.forEach((o=>{o&&(o[0]<0||o[1]<0||(o[0]+=t,o[1]+=e))}))}}class A{constructor(t,e,o,i,r){this.doors=[],this.hall=null,this.digger=t,this.x=e,this.y=o,this.width=i,this.height=r}get cx(){return this.x+Math.floor(this.width/2)}get cy(){return this.y+Math.floor(this.height/2)}translate(t,e){this.x+=t,this.y+=e,this.doors&&this.doors.forEach((o=>{o&&(o[0]<0||o[1]<0||(o[0]+=t,o[1]+=e))})),this.hall&&this.hall.translate(t,e)}}const b=i.xy.DIRS;var v={};function S(t,e,o={}){const i=e(o||{});return i.fn=e,i.id=t,v[t]=i,i}function T(t={}){return i.clamp(function(t){if(!t)return 1;if("number"==typeof t)return t;if(void 0===t.width)return 1;let e=t.width;if("number"==typeof e)return e;Array.isArray(e)?e=i.random.weighted(e)+1:"string"==typeof e?e=i.range.make(e).value():(e=i.random.weighted(e),"string"==typeof e&&(e=Number.parseInt(e)));return e}(t),1,3)}function C(t,e){return e.length||(e.length=[]),Array.isArray(e.length)?t==i.xy.UP||t==i.xy.DOWN?i.range.make(e.length[1]||[2,9]):i.range.make(e.length[0]||[9,15]):i.range.make(e.length)}function W(t,e,o){const r=e.doors;let n=o.dir||i.xy.NO_DIRECTION;if(n==i.xy.NO_DIRECTION){const e=i.random.sequence(4);for(let h=0;h<4;h++){n=e[h];const l=C(n,o).hi,a=r[n];if(a&&-1!=a[0]&&-1!=a[1]){const e=a[0]+Math.floor(b[n][0]*l),o=a[1]+Math.floor(b[n][1]*l);if(t.hasXY(e,o))break}n=i.xy.NO_DIRECTION}}return n}function X(t,e,o,r,n){let h,l;const a=i.object.firstOpt("obliqueChance",n,15),f=i.random.chance(a),c=[];for(let i=0;i<4;i++)h=e+b[i][0],l=o+b[i][1],i!=r&&!f||!t.hasXY(h,l)||t[h][l]||(c[i]=[h,l]);return c}function Y(t,e,o){if((t=t||{}).width=1,!e)return t;const r=W(e,o,t);if(r===i.xy.NO_DIRECTION)return null;const n=C(r,t).value(),h=o.doors[r],l=b[r];let a=h[0],f=h[1];const c=t.tile||1;for(let t=0;t<n;t++)e[a][f]=c,a+=l[0],f+=l[1];a-=l[0],f-=l[1];const s=new N(h,r,n);return s.doors=X(e,a,f,r,t),s}S("DEFAULT",Y,{chance:15});var k={__proto__:null,halls:v,install:S,pickWidth:T,pickLengthRange:C,pickHallDirection:W,pickHallExits:X,digWide:function(t,e,o){if((t=t||{}).width||(t.width=2),!e)return t;const r=W(e,o,t);if(r===i.xy.NO_DIRECTION)return null;const n=C(r,t).value(),h=T(t)||2,l=o.doors[r],a=t.tile||1,f=[];let c,s,u;if(r===i.xy.UP){c=i.clamp(l[0],o.x,o.x+o.width-h),s=l[1]-n+1;for(let t=c;t<c+h;++t)for(let o=s;o<s+n;++o)e[t][o]=a;f[r]=[c,s-1],u=new N([c,l[1]],r,n,2)}else if(r===i.xy.DOWN){c=i.clamp(l[0],o.x,o.x+o.width-h),s=l[1]+n-1;for(let t=c;t<c+h;++t)for(let o=s;o>s-n;--o)e[t][o]=a;f[r]=[c,s+1],u=new N([c,l[1]],r,n,2)}else if(r===i.xy.LEFT){c=l[0]-n+1,s=i.clamp(l[1],o.y,o.y+o.height-h);for(let t=c;t<c+n;++t)for(let o=s;o<s+h;++o)e[t][o]=a;f[r]=[c-1,s],u=new N([l[0],s],r,n,2)}else{c=l[0]+n-1,s=i.clamp(l[1],o.y,o.y+o.height-h);for(let t=c;t>c-n;--t)for(let o=s;o<s+h;++o)e[t][o]=a;f[r]=[c+1,s],u=new N([l[0],s],r,n,h)}return u.doors=f,u.width=h,u},dig:Y},B={};function F(t,e,o){const i=e(o||{});return i.fn=e,i.id=t,B[t]=i,i}function P(t,e){return t=t||{},e=e||{},Object.entries(e).forEach((([e,o])=>{let r=t[e];if("tile"===e)return void(void 0===r&&(t[e]=o));if(!0===o){if(!r)return i.ERROR("Missing required config for digger: "+e)}else r=("number"==typeof o||Array.isArray(o),r||o);const n=i.range.make(r);t[e]=n})),t}function U(t,e){if(t=P(t,{width:[3,6],height:[3,6]}),!e)return t;const o=t.width.value(),i=t.height.value(),r=t.tile||1;e.fill(0);const n=Math.floor((e.width-o)/2),h=Math.floor((e.height-i)/2);return e.fillRect(n,h,o,i,r),new A(t.id,n,h,o,i)}function H(t,e={}){let o,r,n,h,l,a,f,c,s,u,d,g=0;a=e.height||15,f=e.width||30,c=e.minSize||5,s=e.tries||20,u=e.count||1,d=e.canDisrupt||!1;const m=e.wreath||0,y=e.wreathTile||5,w=e.tile||4,x=i.grid.alloc(t.width,t.height,0);let M=0;for(;M<u&&g<u;){const e=Math.round((f-c)*(u-M)/u)+c,p=Math.round((a-c)*(u-M)/u)+c;x.fill(0);const R=i.blob.fillBlob(x,{rounds:5,minWidth:4,minHeight:4,maxWidth:e,maxHeight:p,percentSeeded:55});let O=!1;for(n=0;n<s&&!O;n++)if(h=i.random.range(1-R.x,x.width-R.width-R.x-2),l=i.random.range(1-R.y,x.height-R.height-R.y-2),d||!j(t,x,-h,-l)){for(O=!0,o=0;o<R.width;o++)for(r=0;r<R.height;r++)if(x[o+R.x][r+R.y]){const e=o+R.x+h,i=r+R.y+l;t[e][i]=w,m&&t.forCircle(e,i,m,((e,o,i)=>{1!==e&&2!==e||(t[o][i]=y)}))}break}O?++g:++M}return i.grid.free(x),g}function j(t,e,o=0,r=0){const n=i.grid.alloc(t.width,t.height);let h=!1;t.forEach(((i,l,f)=>{const c=l+o,s=f+r;if(i)if(m(t,l,f))e.get(c,s)?h=!0:n[l][f]=1;else if(a(t,l,f)){if(e.get(c,s))return;n[l][f]=1}}));let l=!0;for(let t=0;t<n.width&&!h;++t)for(let e=0;e<n.height&&!h;++e)1==n[t][e]&&(l?(n.floodFill(t,e,1,2),l=!1):h=!0);return i.grid.free(n),h}function q(t,e,o,i){return 6===t.get(e,o)||!!x(t,e,o)&&(!!x(t,e+i[1],o+i[0])&&!!x(t,e-i[1],o-i[0]))}function G(t,e,o){let r,n,h,f,c,s,u;o=o||1;const d=t,g=i.grid.alloc(t.width,t.height),m=i.grid.alloc(t.width,t.height),y=[[1,0],[0,1]];l(t,m);const w=i.random.sequence(t.width*t.height);for(h=0;h<w.length;h++)if(s=Math.floor(w[h]/d.height),u=w[h]%d.height,t.hasXY(s,u)&&t.get(s,u)&&a(t,s,u)&&!x(t,s,u))for(c=0;c<=1;c++){const h=y[c];if(r=s+h[0],n=u+h[1],f=o,t.hasXY(r,n)){if(x(t,r,n))for(f=0;f<o&&(r+=h[0],n+=h[1],x(t,r,n));++f);if(t.get(r,n)&&a(t,r,n)&&f<o&&(i.path.calculateDistances(g,r,n,m,!1),g[s][u]>e&&g[s][u]<i.path.NO_PATH)){for(;s!==r||u!==n;)q(t,s,u,h)?(t[s][u]=6,m[s][u]=1):(t[s][u]=1,m[s][u]=1),s+=h[0],u+=h[1];break}}}i.grid.free(g),i.grid.free(m)}function K(t,e,o,r){let n=0;if(!g(r,e,o))return!1;for(let t=0;t<4;++t){const h=i.xy.DIRS[t];if(!r.hasXY(e+h[0],o+h[1]))return!1;if(!r.hasXY(e-h[0],o-h[1]))return!1;if(c(r,e+h[0],o+h[1])){if(n+=1,!g(r,e-h[0]+h[1],o-h[1]+h[0]))return!1;if(!g(r,e-h[0]-h[1],o-h[1]-h[0]))return!1}else if(!g(r,e+h[0],o+h[1]))return!1}return 1==n}function Z(t,e,o,r){const n=i.random.sequence(4);let h=null;for(let r=0;r<n.length;++r){h=i.xy.DIRS[r];if(c(t,e+h[0],o+h[1])&&g(t,e-h[0],o-h[1]))break;h=null}h||i.ERROR("No stair direction found!"),t.set(e,o,r);const l=i.xy.CLOCK_DIRS.findIndex((t=>t[0]==h[0]&&t[1]==h[1]));for(let r=0;r<i.xy.CLOCK_DIRS.length;++r){const n=r?r-1:7,h=(r+1)%8;if(r==l||n==l||h==l)continue;const a=i.xy.CLOCK_DIRS[r];t.set(e+a[0],o+a[1],3)}return!0}function z(t,e={}){let o=!1!==e.up,r=!1!==e.down;const n=e.minDistance||Math.floor(Math.max(t.width,t.height)/2),h=e.isValid||K,l=e.setup||Z;let a=Array.isArray(e.up)?e.up:null,f=Array.isArray(e.down)?e.down:null;const c={};if(e.start&&"string"!=typeof e.start){let o=e.start;o=!0===o?t.randomMatchingLoc(h):t.matchingLocNear(i.xy.x(o),i.xy.y(o),h),c.start=o}return a&&f?(a=t.matchingLocNear(i.xy.x(a),i.xy.y(a),h),f=t.matchingLocNear(i.xy.x(f),i.xy.y(f),h)):a&&!f?(a=t.matchingLocNear(i.xy.x(a),i.xy.y(a),h),r&&(f=t.randomMatchingLoc(((e,o,r)=>!(i.xy.distanceBetween(o,r,a[0],a[1])<n)&&h(e,o,r,t))))):f&&!a?(f=t.matchingLocNear(i.xy.x(f),i.xy.y(f),h),o&&(a=t.randomMatchingLoc(((e,o,r)=>!(i.xy.distanceBetween(o,r,f[0],f[1])<n)&&K(0,o,r,t))))):o?(a=t.randomMatchingLoc(h),r&&(f=t.randomMatchingLoc(((e,o,r)=>!(i.xy.distanceBetween(o,r,a[0],a[1])<n)&&K(0,o,r,t))))):r&&(f=t.randomMatchingLoc(h)),a&&(c.up=a.slice(),l(t,a[0],a[1],e.upTile||7),"up"===e.start&&(c.start=c.up)),f&&(c.down=f.slice(),l(t,f[0],f[1],e.downTile||17),"down"===e.start&&(c.start=c.down)),a||f?c:null}function V(t){let e,o,r,n,h,l;do{for(l=!1,e=0;e<t.width-1;e++)for(o=0;o<t.height-1;o++)for(r=0;r<=1;r++)a(t,e+r,o)&&!a(t,e+(1-r),o)&&g(t,e+(1-r),o)&&!a(t,e+r,o+1)&&g(t,e+r,o+1)&&a(t,e+(1-r),o+1)&&(i.random.chance(50)?(n=e+(1-r),h=o):(n=e+r,h=o+1),l=!0,t[n][h]=1)}while(1==l)}function Q(t){t.forEach(((e,o,i)=>{t.isBoundaryXY(o,i)||2==e&&(1!=t.get(o+1,i)&&1!=t.get(o-1,i)||1!=t.get(o,i+1)&&1!=t.get(o,i-1)?(1!==t.get(o+1,i)?1:0)+(1!==t.get(o-1,i)?1:0)+(1!==t.get(o,i+1)?1:0)+(1!==t.get(o,i-1)?1:0)>=3&&(t[o][i]=1):t[o][i]=1)}))}function J(t,e=3){t.forEach(((o,i,r)=>{0==o&&(t[i][r]=e)}))}F("DEFAULT",U);var $={__proto__:null,room:{__proto__:null,rooms:B,install:F,checkConfig:P,cavern:function(t,e){if(t=P(t,{width:12,height:8}),!e)return t;let o,r,n;const h=t.width.value(),l=t.height.value(),a=t.tile||1;n=i.grid.alloc(e.width,e.height,0);const f=Math.floor(.5*h),c=h,s=Math.floor(.5*l),u=l;e.fill(0);const d=i.blob.fillBlob(n,{rounds:5,minWidth:f,minHeight:s,maxWidth:c,maxHeight:u,percentSeeded:55});return o=Math.floor((e.width-d.width)/2),r=Math.floor((e.height-d.height)/2),i.grid.offsetZip(e,n,o-d.x,r-d.y,a),i.grid.free(n),new A(t.id,o,r,d.width,d.height)},choiceRoom:function(t,e){let o;if(t=t||{},Array.isArray(t.choices)?o=i.random.item.bind(i.random,t.choices):"object"==typeof t.choices?o=i.random.weighted.bind(i.random,t.choices):i.ERROR("Expected choices to be either array of room ids or map - ex: { ROOM_ID: weight }"),!e)return t;let r=o();const n=B[r];n||i.ERROR("Missing digger choice: "+r);let h=n;return t.opts&&(h=Object.assign({},n,t.opts)),n.fn(h,e)},entrance:function(t,e){if(t=P(t,{width:20,height:10}),!e)return t;const o=t.width.value(),i=t.height.value(),r=t.tile||1,n=Math.floor(.4*o),h=i,l=o,a=Math.floor(.5*i),f=Math.floor(e.width/2-n/2-1),c=e.height-h-2,s=Math.floor(e.width/2-l/2-1),u=e.height-a-2;return e.fill(0),e.fillRect(f,c,n,h,r),e.fillRect(s,u,l,a,r),new A(t.id,Math.min(f,s),Math.min(c,u),Math.max(n,l),Math.max(h,a))},cross:function(t,e){if(t=P(t,{width:12,height:20}),!e)return t;const o=t.width.value(),r=t.height.value(),n=t.tile||1,h=o,l=Math.max(3,Math.floor(o*i.random.range(25,75)/100)),a=Math.max(3,Math.floor(r*i.random.range(25,75)/100)),f=r,c=Math.floor((e.width-h)/2),s=c+i.random.range(2,Math.max(2,h-l-2)),u=Math.floor((e.height-f)/2),d=u+i.random.range(2,Math.max(2,f-a-2));return e.fill(0),e.fillRect(c,d,h,a,n),e.fillRect(s,u,l,f,n),new A(t.id,c,u,Math.max(h,l),Math.max(a,f))},symmetricalCross:function(t,e){if(t=P(t,{width:7,height:7}),!e)return t;const o=t.width.value(),r=t.height.value(),n=t.tile||1;let h=Math.max(3,Math.floor(o*i.random.range(25,50)/100)),l=Math.max(3,Math.floor(r*i.random.range(25,50)/100));e.fill(0);const a=Math.floor((e.width-o)/2),f=Math.floor((e.height-l)/2);e.fillRect(a,f,o,l,n);const c=Math.floor((e.width-h)/2),s=Math.floor((e.height-r)/2);return e.fillRect(c,s,h,r,n),new A(t.id,Math.min(a,c),Math.min(f,s),Math.max(o,h),Math.max(r,l))},rectangular:U,circular:function(t,e){if(t=P(t,{radius:[3,4]}),!e)return t;const o=t.radius.value(),i=t.tile||1;e.fill(0);const r=Math.floor(e.width/2),n=Math.floor(e.height/2);return o>1&&e.fillCircle(r,n,o,i),new A(t.id,r-o,n-o,2*o+1,2*o+1)},brogueDonut:function(t,e){if(t=P(t,{radius:[5,10],ringMinWidth:3,holeMinSize:3,holeChance:50}),!e)return t;const o=t.radius.value(),r=t.ringMinWidth.value(),n=t.holeMinSize.value(),h=t.tile||1;e.fill(0);const l=Math.floor(e.width/2),a=Math.floor(e.height/2);return e.fillCircle(l,a,o,h),o>r+n&&i.random.chance(t.holeChance.value())&&e.fillCircle(l,a,i.random.range(n,o-n),0),new A(t.id,l-o,a-o,2*o+1,2*o+1)},chunkyRoom:function(t,e){if(t=P(t,{count:[2,12],width:[5,20],height:[5,20]}),!e)return t;let o,r,n,h,l,a,f,c=t.count.value();const s=t.width.value(),u=t.height.value(),d=t.tile||1;for(h=Math.floor(e.width/2)-Math.floor(s/2),l=Math.floor(e.width/2)+Math.floor(s/2),a=Math.floor(e.height/2)-Math.floor(u/2),f=Math.floor(e.height/2)+Math.floor(u/2),e.fill(0),e.fillCircle(Math.floor(e.width/2),Math.floor(e.height/2),2,d),o=0;o<c;)if(r=i.random.range(h,l),n=i.random.range(a,f),e[r][n]){if(r-2<h)continue;if(r+2>l)continue;if(n-2<a)continue;if(n+2>f)continue;e.fillCircle(r,n,2,d),o++}const g=e.valueBounds(d);return new A(t.id,g.x,g.y,g.width,g.height)}},hall:k,lake:{__proto__:null,digLakes:H,digBridges:G},stairs:{__proto__:null,isValidStairLoc:K,setupStairs:Z,addStairs:z},utils:I,start:function(t){h(t.width*t.height),t.fill(0)},finish:function(t){V(t),J(t),Q(t)},addRoom:function(t,e){if("string"==typeof(e=e||{room:"DEFAULT",hall:"DEFAULT",tries:10})&&(e={room:e}),e.loc&&(e.locs=[e.loc]),e.room||(e.room="DEFAULT"),"function"==typeof e.room&&(e.room={fn:e.room}),"string"==typeof e.room){const t=e.room;e.room=B[t],e.room||i.ERROR("Failed to find room: "+t)}const o=e.room;let r=null;if(!0===e.hall&&(e.hall="DEFAULT"),!1===e.hall||e.hall||(e.hall="DEFAULT"),"function"==typeof e.hall&&(e.hall={fn:e.hall}),"string"==typeof e.hall){const t=e.hall;if(e.hall=v[t],!e.hall)return i.ERROR("Failed to find hall: "+t),null;r=e.hall}else e.hall&&e.hall.fn&&(r=e.hall);!1===e.door?e.door=0:!0===e.door?e.door=2:"number"==typeof e.door?e.door=i.random.chance(e.door)?2:1:e.door=1;let n=e.locs||null;if(n&&n.doors&&(n=n.doors),n&&Array.isArray(n))n&&n.length&&2==n.length&&"number"==typeof n[0]?n=[n]:0==n.length&&(n=null);else if(n=null,0===t.count(1)){n=[[Math.floor(t.width/2),t.height-2]]}const h=e.room,l=i.grid.alloc(t.width,t.height);let a=!1;if(r){let t=void 0!==r.chance?r.chance:15;a=i.random.chance(t)}let f,c=!1,s=e.tries||10;for(;--s>=0&&!c;)l.fill(0),f=h.fn(o,l),f.doors=L(l,1),a&&r&&(f.hall=r.fn(r,l,f)),c=n?_(t,n,l,f,e):p(t,l,f,e);return i.grid.free(l),f&&c?f:null},addLoops:function(t,e,o){let r,h,f,c,u,d,g,m,y;e=e||Math.floor(Math.min(t.width,t.height)/2),o=o||1;const w=t,x=i.grid.alloc(t.width,t.height),M=i.grid.alloc(t.width,t.height),p=[[1,0],[0,1]];function R(e,o,i){return!!t.hasXY(e,o)&&(!!t.hasXY(e+i[1],o+i[0])&&(!!t.hasXY(e-i[1],o-i[0])&&(!t.get(e,o)&&(!t.get(e+i[1],o+i[0])&&!t.get(e-i[1],o-i[0])))))}function O(e,o,i){return!!t.hasXY(e,o)&&(!!t.hasXY(e+i[1],o+i[0])&&(!!t.hasXY(e-i[1],o-i[0])&&(!!t.get(e,o)||(!!t.get(e+i[1],o+i[0])||!!t.get(e-i[1],o-i[0])))))}for(l(t,M),u=0;u<n.length;u++){m=Math.floor(n[u]/w.height),y=n[u]%w.height;if(!w[m][y])for(g=0;g<=1;g++){let n=p[g];if(R(m,y,n)){if(d=o,t.hasXY(m+n[0],y+n[1])&&a(t,m+n[0],y+n[1])){if(!t.hasXY(m-n[0],y-n[1])||s(t,m-n[0],y-n[1]))continue}else{if(!t.hasXY(m-n[0],y-n[1])||!a(t,m-n[0],y-n[1]))continue;if(!t.hasXY(m+n[0],y+n[1])||s(t,m+n[0],y+n[1]))continue;n=n.map((t=>-1*t))}for(r=m+n[0],h=y+n[1],f=m,c=y,d=0;d<o&&(f-=n[0],c-=n[1],!O(f,c,n));++d);if(d<o&&(i.path.calculateDistances(x,r,h,M,!1),x[f][c]>e&&x[f][c]<3e4)){for(;f!==r||c!==h;)0==t.get(f,c)&&(t[f][c]=1,M[f][c]=1),f+=n[0],c+=n[1];t[m][y]=2;break}}}}i.grid.free(x),i.grid.free(M)},addLakes:function(t,e={}){return H(t,e)},addBridges:function(t,e,o){return G(t,e,o)},addStairs:function(t,e={}){return z(t,e)},removeDiagonalOpenings:V,finishDoors:Q,finishWalls:J,NOTHING:0,FLOOR:1,DOOR:2,WALL:3,DEEP:4,SHALLOW:5,BRIDGE:6,UP_STAIRS:7,DOWN_STAIRS:17,IMPREGNABLE:8,TILEMAP:r,SEQ:n,initSeqence:h,fillCostGrid:l,isPassable:a,isNothing:f,isFloor:c,isDoor:s,isBridge:u,isWall:d,isObstruction:g,isStairs:m,isDeep:y,isShallow:w,isAnyWater:x,Hall:N,Room:A};t.dig=$,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=gw-dig.min.js.map
