!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("gw-utils")):"function"==typeof define&&define.amd?define(["exports","gw-utils"],o):o((t="undefined"!=typeof globalThis?globalThis:t||self).GW=t.GW||{},t.GW)}(this,(function(t,o){"use strict";var e={};function i(t,e){return e=e||{},(t=t||{}).width&&t.height||o.utils.ERROR("All diggers require config to include width and height."),Object.entries(e).forEach((([e,i])=>{const r=t[e];if(!0===i)"number"!=typeof r&&o.utils.ERROR("Invalid configuration for digger: "+e+" expected number received "+typeof r);else if("number"==typeof i){"number"!=typeof t[e]&&(t[e]=i)}else if(Array.isArray(i))if("number"==typeof r)t[e]=new Array(i.length).fill(r);else if(Array.isArray(r)){if(i.length>r.length)for(let t=r.length;t<i.length;++t)r[t]=i[t]}else o.utils.WARN("Received unexpected config for digger : "+e+" expected array, received "+typeof r+", using defaults."),t[e]=i.slice();else o.utils.WARN("Unexpected digger configuration parameter: ",e,""+i)})),t}const r=o.utils.DIRS;var n;function h(t,e,i,r={}){console.log("fitRoomToMap");for(let h=0;h<n.length;h++){const f=Math.floor(n[h]/t.height),a=n[h]%t.height;if(0!=t.get(f,a))continue;const c=o.grid.directionOfDoorSite(t,f,a,1);if(c!=o.utils.NO_DIRECTION){const n=(c+2)%4,h=f-i[n][0],g=a-i[n][1];if(-1!=i[n][0]&&l(t,e,h,g)){o.grid.offsetZip(t,e,h,g,((o,e,i,n)=>{t[i][n]=r.tile||1})),(r.door||!1!==r.placeDoor)&&(t[f][a]=r.door||2),i[n][0]=-1,i[n][1]=-1;for(let t=0;t<i.length;++t)i[t][0]>0&&(i[t][0]+=h,i[t][1]+=g);return i}}}return!1}function l(t,o,e,i){let r,n,h,l,f,a;for(console.log("roomAttachesAt",e,i),r=0;r<o.width;r++)for(n=0;n<o.height;n++)if(o[r][n])for(h=r+e,l=n+i,f=h-1;f<=h+1;f++)for(a=l-1;a<=l+1;a++)if(!t.hasXY(f,a)||t.isBoundaryXY(f,a)||0!==t.get(f,a))return console.log("- NO"),!1;return console.log("- YES"),!0}function f(t,e,i,r,h={}){console.log("fitRoomAtXY",e);for(let f=0;f<n.length;f++){const a=Math.floor(n[f]/t.height),c=n[f]%t.height;if(i[a][c])continue;const g=o.grid.directionOfDoorSite(i,a,c,1);if(g!=o.utils.NO_DIRECTION&&l(t,i,e[0]-a,e[1]-c)){o.grid.offsetZip(t,i,e[0]-a,e[1]-c,((o,e,i,r)=>{t[i][r]=h.tile||1})),(h.door||!1!==h.placeDoor)&&(t[e[0]][e[1]]=h.door||2),r[g][0]=-1,r[g][1]=-1;for(let t=0;t<r.length;++t)r[t][0]>0&&(r[t][0]+=e[0]-a,r[t][1]+=e[1]-c);return r}}return!1}function a(t,e,i,r,n={}){const h=o.random.sequence(e.length);console.log("attachRoomAtMapDoors",e.join(", "));for(let o=0;o<h.length;o++){const l=h[o],f=c(t,e[l][0],e[l][1],i,r,n);if(f)return f}return!1}function c(t,e,i,r,n,h={}){const f=o.random.sequence(4);console.log("attachRoomAtXY",e,i,n.join(", "));for(let a of f){const f=(a+2)%4;if(-1!=n[f][0]&&l(t,r,e-n[f][0],i-n[f][1])){const l=e-n[f][0],a=i-n[f][1];o.grid.offsetZip(t,r,l,a,((o,e,i,r)=>{t[i][r]=h.tile||1})),(h.door||!1!==h.placeDoor)&&(t[e][i]=h.door||2);return n.map((t=>{const o=t[0]+l,r=t[1]+a;return o==e&&r==i?[-1,-1]:[o,r]}))}}return!1}function g(t){let e,i,n,h,l,f,a;const c=o.grid.alloc(t.width,t.height);for(c.copy(t),e=0;e<c.width;e++)for(i=0;i<c.height;i++)if(!c[e][i]&&(f=o.grid.directionOfDoorSite(c,e,i,1),f!=o.utils.NO_DIRECTION)){for(h=e+r[f][0],l=i+r[f][1],a=!1,n=0;n<10&&c.hasXY(h,l)&&!a;n++)c[h][l]&&(a=!0),h+=r[f][0],l+=r[f][1];a||(c[e][i]=f+200)}let g=[];for(f=0;f<4;f++){const t=c.randomMatchingLoc(f+200)||[-1,-1];g[f]=[t[0],t[1]]}return o.grid.free(c),g}function d(t,e,i){let n,h,l,f,a,c,g,d,s;const u=(i=i||{}).tile||1,m=o.utils.firstOpt("horizontalHallLength",i,[9,15]),M=o.utils.firstOpt("verticalHallLength",i,[2,9]);if(g=i.dir,void 0===g){const i=o.random.sequence(4);for(n=0;n<4&&(g=i[n],-1==e[g][0]||-1==e[g][1]||!t.hasXY(e[g][0]+Math.floor(r[g][0]*m[1]),e[g][1]+Math.floor(r[g][1]*M[1])));n++);if(4==n)return}c=g==o.utils.UP||g==o.utils.DOWN?o.random.range(M[0],M[1]):o.random.range(m[0],m[1]),h=e[g][0],l=e[g][1];const w=[h-r[g][0],l-r[g][1]];for(n=0;n<c;n++)t.hasXY(h,l)&&(t[h][l]=u),h+=r[g][0],l+=r[g][1];for(h=o.utils.clamp(h-r[g][0],0,t.width-1),l=o.utils.clamp(l-r[g][1],0,t.height-1),s=o.random.chance(15),d=0;d<4;d++)f=h+r[d][0],a=l+r[d][1],d!=g&&!s||!t.hasXY(f,a)||t[f][a]?(e[d][0]=-1,e[d][1]=-1):(e[d][0]=f,e[d][1]=a);return w}function s(t,o,e){const i=t.get(o,e);return 1===i||2===i||5===i}function u(t,o,e){const i=t.get(o,e);return 0===i||3===i}function m(t){let e,i,r,n,h,l;do{for(l=!1,e=0;e<t.width-1;e++)for(i=0;i<t.height-1;i++)for(r=0;r<=1;r++)s(t,e+r,i)&&!s(t,e+(1-r),i)&&u(t,e+(1-r),i)&&!s(t,e+r,i+1)&&u(t,e+r,i+1)&&s(t,e+(1-r),i+1)&&(o.random.chance(50)?(n=e+(1-r),h=i):(n=e+r,h=i+1),l=!0,t[n][h]=1)}while(1==l)}function M(t){t.forEach(((o,e,i)=>{t.isBoundaryXY(e,i)||2==o&&(1!=t.get(e+1,i)&&1!=t.get(e-1,i)||1!=t.get(e,i+1)&&1!=t.get(e,i-1)?(1!==t.get(e+1,i)?1:0)+(1!==t.get(e-1,i)?1:0)+(1!==t.get(e,i+1)?1:0)+(1!==t.get(e,i-1)?1:0)>=3&&(t[e][i]=1):t[e][i]=1)}))}function w(t){t.forEach(((o,e,i)=>{0==o&&(t[e][i]=3)}))}var R={__proto__:null,start:function(t){n=o.random.sequence(t.width*t.height),t.fill(0)},finish:function(t){m(t),w(t),M(t)},dig:function(t,i={}){"string"==typeof i&&(i={digger:i});const r=i.digger||i.id||"SMALL",n=e[r];n||o.utils.ERROR("Failed to find digger: "+r);let l=i.locs||i.loc||null;if(l&&Array.isArray(l))l&&l.length&&2==l.length&&"number"==typeof l[0]?l=[l]:0==l.length&&(l=null);else if(l=null,0===t.count(1)){l=[[Math.floor(t.width/2),t.height-2]]}const c=Object.assign({},n,i),s=o.grid.alloc(t.width,t.height),u=c.hallChance||c.hallway||0;let m=!1,M=i.tries||10;for(;--M>=0&&!m;){s.fill(0),n.fn(c,s);const e=g(s);if(o.random.chance(u)&&d(s,e,c),l){if(m=a(t,l,s,e,c),!m)for(let o=0;o<l.length&&!m;++o)l[o][0]>0&&(m=f(t,l[o],s,e,c))}else m=h(t,s,e,c)}return o.grid.free(s),m},fitRoomToMap:h,roomAttachesAt:l,fitRoomAtXY:f,chooseRandomDoorSites:g,attachHallway:d,isPassable:s,isObstruction:u,removeDiagonalOpenings:m,finishDoors:M,finishWalls:w,NOTHING:0,FLOOR:1,DOOR:2,WALL:3,LAKE:4,BRIDGE:5,diggers:e,install:function(t,o,i){return(i=o(i||{})).fn=o,i.id=t,e[t]=i,i},checkConfig:i,cavern:function(t,e){if(t=i(t,{width:12,height:8}),!e)return t;let r,n,h;h=o.grid.alloc(e.width,e.height,0);const l=Math.floor(.5*t.width),f=t.width,a=Math.floor(.5*t.height),c=t.height;e.fill(0);const g=h.fillBlob(5,l,a,f,c,55,"ffffffttt","ffffttttt");return r=Math.floor((e.width-g.width)/2),n=Math.floor((e.height-g.height)/2),o.grid.offsetZip(e,h,r-g.x,n-g.y,1),o.grid.free(h),t.id},choiceRoom:function(t,i){let r,n;t=t||{},Array.isArray(t.choices)?r=t.choices:"object"==typeof t.choices?r=Object.keys(t.choices):o.utils.ERROR("Expected choices to be either array of choices or map { digger: weight }");for(let t of r)e[t]||o.utils.ERROR("Missing digger choice: "+t);if(!i)return t;n=Array.isArray(t.choices)?o.random.item(t.choices):o.random.weighted(t.choices);const h=e[n];let l=h;return t.opts&&(l=Object.assign({},h,t.opts)),h.fn(l,i),n},entranceRoom:function(t,o){if(t=i(t,{width:20,height:10}),!o)return t;const e=Math.floor(.4*t.width),r=t.height,n=t.width,h=Math.floor(.5*t.height),l=Math.floor(o.width/2-e/2-1),f=o.height-r-2,a=Math.floor(o.width/2-n/2-1),c=o.height-h-2;return o.fill(0),o.fillRect(l,f,e,r,1),o.fillRect(a,c,n,h,1),t.id},crossRoom:function(t,e){if(t=i(t,{width:12,height:20}),!e)return t;const r=Math.max(2,Math.floor(t.width*o.random.range(15,60)/100)),n=Math.max(2,Math.floor(t.width*o.random.range(20,100)/100)),h=Math.max(2,Math.floor(t.height*o.random.range(50,100)/100)),l=Math.max(2,Math.floor(t.height*o.random.range(25,75)/100)),f=o.random.range(Math.max(0,Math.floor(e.width/2)-(r-1)),Math.min(e.width,Math.floor(e.width/2))),a=f+Math.floor(r/2)+o.random.range(0,2)+o.random.range(0,2)-3-Math.floor(n/2),c=Math.floor(e.height/2-h),g=Math.floor(e.height/2-l-(o.random.range(0,2)+o.random.range(0,1)));return e.fill(0),e.fillRect(f-5,c+5,r,h,1),e.fillRect(a-5,g+5,n,l,1),t.id},symmetricalCrossRoom:function(t,e){if(t=i(t,{width:8,height:5}),!e)return t;let r=Math.floor(t.width*o.random.range(50,100)/100),n=Math.floor(t.height*o.random.range(75,100)/100),h=Math.max(2,Math.floor(t.width*o.random.range(25,50)/100));n%2==0&&h>2&&(h-=1);let l=Math.max(2,Math.floor(t.height*o.random.range(25,50)/100));return r%2==0&&l>2&&(l-=1),e.fill(0),e.fillRect(Math.floor((e.width-r)/2),Math.floor((e.height-l)/2),r,l,1),e.fillRect(Math.floor((e.width-h)/2),Math.floor((e.height-n)/2),h,n,1),t.id},rectangularRoom:function(t,e){if(t=i(t,{width:6,height:4,minPct:50}),!e)return t;const r=Math.floor(t.width*o.random.range(t.minPct,100)/100),n=Math.floor(t.height*o.random.range(t.minPct,100)/100);return e.fill(0),e.fillRect(Math.floor((e.width-r)/2),Math.floor((e.height-n)/2),r,n,1),t.id},circularRoom:function(t,e){if(t=i(t,{width:6,height:6}),!e)return t;const r=Math.floor((Math.min(t.width,t.height)-1)*o.random.range(75,100)/200);return e.fill(0),r>1&&e.fillCircle(Math.floor(e.width/2),Math.floor(e.height/2),r,1),t.id},brogueDonut:function(t,e){if(t=i(t,{width:10,height:10,altChance:5,ringMinWidth:3,holeMinSize:3,holeChance:50}),!e)return t;const r=Math.floor(Math.min(t.width,t.height)*o.random.range(75,100)/100);return e.fill(0),e.fillCircle(Math.floor(e.width/2),Math.floor(e.height/2),r,1),r>t.ringMinWidth+t.holeMinSize&&o.random.chance(t.holeChance)&&e.fillCircle(Math.floor(e.width/2),Math.floor(e.height/2),o.random.range(t.holeMinSize,r-t.holeMinSize),0),t.id},chunkyRoom:function(t,e){if(t=i(t,{count:8}),!e)return t;let r,n,h,l,f,a,c,g=Math.floor(t.count*o.random.range(25,100)/100);for(l=Math.floor(e.width/2)-Math.floor(t.width/2),f=Math.floor(e.width/2)+Math.floor(t.width/2),a=Math.floor(e.height/2)-Math.floor(t.height/2),c=Math.floor(e.height/2)+Math.floor(t.height/2),e.fill(0),e.fillCircle(Math.floor(e.width/2),Math.floor(e.height/2),2,1),r=0;r<g;)if(n=o.random.range(l,f),h=o.random.range(a,c),e[n][h]){if(n-2<l)continue;if(n+2>f)continue;if(h-2<a)continue;if(h+2>c)continue;e.fillCircle(n,h,2,1),r++}return t.id}};t.dig=R,t.diggers=e,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=gw-dig.min.js.map
