!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("gw-utils"),require("gw-map")):"function"==typeof define&&define.amd?define(["exports","gw-utils","gw-map"],i):i((t="undefined"!=typeof globalThis?globalThis:t||self).GWD={},t.GWU,t.GWM)}(this,(function(t,i,e){"use strict";function s(t){if(t&&t.__esModule)return t;var i=Object.create(null);return t&&Object.keys(t).forEach((function(e){if("default"!==e){var s=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(i,e,s.get?s:{enumerable:!0,get:function(){return t[e]}})}})),i.default=t,i}var o,r,n=s(i),l=s(e);const h=l.tile.get("NULL").index,a=l.tile.get("FLOOR").index,c=l.tile.get("DOOR").index,g=null!==(r=null===(o=l.tile.get("DOOR_SECRET"))||void 0===o?void 0:o.index)&&void 0!==r?r:-1,u=l.tile.get("WALL").index,d=l.tile.get("LAKE").index,f=l.tile.get("SHALLOW").index,_=l.tile.get("BRIDGE").index,I=l.tile.get("UP_STAIRS").index,p=l.tile.get("DOWN_STAIRS").index,E=l.tile.get("IMPREGNABLE").index,m={[h]:"NULL",[a]:"FLOOR",[c]:"DOOR",[u]:"WALL",[E]:"IMPREGNABLE",[d]:"LAKE",[f]:"SHALLOW",[_]:"BRIDGE",[I]:"UP_STAIRS",[p]:"DOWN_STAIRS"};class T{constructor(t,i){this.tiles=n.grid.alloc(t,i)}free(){n.grid.free(this.tiles)}clear(){this.tiles.fill(0)}get width(){return this.tiles.width}get height(){return this.tiles.height}hasXY(t,i){return this.tiles.hasXY(t,i)}isBoundaryXY(t,i){return this.tiles.isBoundaryXY(t,i)}isPassable(t,i){return this.isFloor(t,i)||this.isDoor(t,i)||this.isBridge(t,i)||this.isStairs(t,i)||this.isShallow(t,i)}isNothing(t,i){return this.tiles.get(t,i)===h}isDiggable(t,i){return this.tiles.get(t,i)===h}isFloor(t,i){return this.tiles.get(t,i)==a}isDoor(t,i){return this.tiles.get(t,i)===c}isSecretDoor(t,i){return this.tiles.get(t,i)===g}isBridge(t,i){return this.tiles.get(t,i)===_}isWall(t,i){const e=this.tiles.get(t,i);return e===u||e===E}blocksMove(t,i){return this.isNothing(t,i)||this.isWall(t,i)||this.isDeep(t,i)}blocksDiagonal(t,i){return this.isNothing(t,i)||this.isWall(t,i)}blocksPathing(t,i){return this.isNothing(t,i)||this.isWall(t,i)||this.isDeep(t,i)||this.isStairs(t,i)}blocksVision(t,i){return this.isNothing(t,i)||this.isWall(t,i)}blocksItems(t,i){return this.blocksPathing(t,i)||this.blocksPathing(t,i)}blocksEffects(t,i){return this.isWall(t,i)}isStairs(t,i){const e=this.tiles.get(t,i);return e===I||e===p}isDeep(t,i){return this.tiles.get(t,i)===d}isShallow(t,i){return this.tiles.get(t,i)===f}isAnyLiquid(t,i){return this.isDeep(t,i)||this.isShallow(t,i)}isSet(t,i){return(this.tiles.get(t,i)||0)>0}getTileIndex(t,i){return this.tiles.get(t,i)||0}setTile(t,i,e){if(e instanceof l.tile.Tile&&(e=e.index),"string"==typeof e){const t=l.tile.tiles[e];if(!t)throw new Error("Failed to find tie: "+e);e=t.index}return!!this.tiles.hasXY(t,i)&&(this.tiles[t][i]=e,!0)}hasTile(t,i,e){if(e instanceof l.tile.Tile&&(e=e.index),"string"==typeof e){const t=l.tile.tiles[e];if(!t)throw new Error("Failed to find tie: "+e);e=t.index}return this.tiles.hasXY(t,i)&&this.tiles[t][i]==e}getMachine(t,i){return 0}}const R=l.flags.Cell;class B{constructor(t){this.machineCount=0,this.map=t}get width(){return this.map.width}get height(){return this.map.height}hasXY(t,i){return this.map.hasXY(t,i)}isBoundaryXY(t,i){return this.map.isBoundaryXY(t,i)}hasCellFlag(t,i,e){return this.map.cellInfo(t,i).hasCellFlag(e)}setCellFlag(t,i,e){this.map.cell(t,i).setCellFlag(e)}clearCellFlag(t,i,e){this.map.cell(t,i).clearCellFlag(e)}hasTile(t,i,e){return this.map.cellInfo(t,i).hasTile(e)}setTile(t,i,e,s){return this.map.setTile(t,i,e,s)}getTileIndex(t,i){if(!this.hasXY(t,i))return 0;return this.map.cell(t,i).highestPriorityTile().index}clear(){this.map.cells.forEach((t=>t.clear()))}hasItem(t,i){return this.map.cellInfo(t,i).hasItem()}makeRandomItem(t){return l.item.makeRandom(t)}addItem(t,i,e){return this.map.forceItem(t,i,e)}hasActor(t,i){return this.map.hasActor(t,i)}blocksMove(t,i){return this.map.cellInfo(t,i).blocksMove()}blocksVision(t,i){return this.map.cellInfo(t,i).blocksVision()}blocksDiagonal(t,i){return this.map.cellInfo(t,i).hasEntityFlag(l.flags.Entity.L_BLOCKS_DIAGONAL)}blocksPathing(t,i){const e=this.map.cellInfo(t,i);return e.hasEntityFlag(l.flags.Entity.L_BLOCKS_MOVE)||e.hasTileFlag(l.tile.flags.Tile.T_PATHING_BLOCKER)}blocksItems(t,i){return this.map.cellInfo(t,i).hasEntityFlag(l.flags.Entity.L_BLOCKS_ITEMS)}blocksEffects(t,i){return this.map.cellInfo(t,i).hasEntityFlag(l.flags.Entity.L_BLOCKS_EFFECTS)}isWall(t,i){return this.map.cellInfo(t,i).isWall()}isStairs(t,i){return this.map.cellInfo(t,i).isStairs()}isSet(t,i){return this.hasXY(t,i)&&!this.map.cell(t,i).isEmpty()}isDiggable(t,i){if(!this.hasXY(t,i))return!1;const e=this.map.cell(t,i);return!!e.isEmpty()||!!e.isWall()}isNothing(t,i){return this.hasXY(t,i)&&this.map.cell(t,i).isEmpty()}isFloor(t,i){return this.isPassable(t,i)}isBridge(t,i){return this.map.cellInfo(t,i).hasTileFlag(l.tile.flags.Tile.T_BRIDGE)}isDoor(t,i){return this.map.cellInfo(t,i).hasTileFlag(l.tile.flags.Tile.T_IS_DOOR)}isSecretDoor(t,i){return this.map.cellInfo(t,i).hasEntityFlag(l.flags.Entity.L_SECRETLY_PASSABLE)}isDeep(t,i){return this.map.cellInfo(t,i).hasTileFlag(l.tile.flags.Tile.T_DEEP_WATER)}isShallow(t,i){if(!this.hasXY(t,i))return!1;const e=this.map.cell(t,i);return!!e.depthTile(l.flags.Depth.LIQUID)&&!e.hasTileFlag(l.tile.flags.Tile.T_IS_DEEP_LIQUID)}isAnyLiquid(t,i){if(!this.hasXY(t,i))return!1;const e=this.map.cell(t,i);return e.hasDepthTile(l.flags.Depth.LIQUID)||e.hasTileFlag(l.tile.flags.Tile.T_IS_DEEP_LIQUID)}isOccupied(t,i){return this.hasItem(t,i)||this.hasActor(t,i)}isPassable(t,i){const e=this.map.cellInfo(t,i);return!(e.blocksMove()||e.blocksPathing())}backup(){const t=new B(this.map.clone());return t.machineCount=this.machineCount,t}restore(t){this.map.copy(t.map),this.machineCount=t.machineCount}free(){}getChokeCount(t,i){return this.map.cell(t,i).chokeCount}setChokeCount(t,i,e){this.map.cell(t,i).chokeCount=e}analyze(){l.map.analyze(this.map)}fireEffect(t,i,e){return l.effect.fireSync(t,this.map,i,e)}nextMachineId(){return++this.machineCount}getMachine(t,i){return this.map.cell(t,i).machineId}setMachine(t,i,e,s=!0){this.map.cell(t,i).machineId=e,0==e?this.map.clearCellFlag(t,i,R.IS_IN_MACHINE):this.map.setCellFlag(t,i,s?R.IS_IN_ROOM_MACHINE:R.IS_IN_AREA_MACHINE)}}const O=n.utils.DIRS;function w(t,i,e){let s,o,r,l,h,a;for(o=n.utils.NO_DIRECTION,s=0;s<4;s++)if(r=i+O[s][0],l=e+O[s][1],h=i-O[s][0],a=e-O[s][1],t.hasXY(h,a)&&t.hasXY(r,l)&&t.isFloor(h,a)){if(o!=n.utils.NO_DIRECTION)return n.utils.NO_DIRECTION;o=s}return o}function L(t){let i,e,s,o,r,l,h;const a=[[],[],[],[]],c=t.height,g=t.width;for(i=0;i<g;i++)for(e=0;e<c;e++)if(t.isDiggable(i,e)&&(l=w(t,i,e),l!=n.utils.NO_DIRECTION)){for(o=i+n.utils.DIRS[l][0],r=e+n.utils.DIRS[l][1],h=!1,s=0;s<10&&t.hasXY(o,r)&&!h;s++)t.isSet(o,r)&&(h=!0),o+=n.utils.DIRS[l][0],r+=n.utils.DIRS[l][1];h||a[l].push([i,e])}let u=[];for(l=0;l<4;l++){const t=n.random.item(a[l])||[-1,-1];u[l]=[t[0],t[1]]}return u}function N(t,i,e=0,s=0){n.utils.forRect(t.width,t.height,((o,r)=>{const n=o-e,l=r-s,h=i.getTileIndex(n,l);h&&t.setTile(o,r,h)}))}function M(t,i){i.update(((i,e,s)=>t.isPassable(e,s)?1:n.path.OBSTRUCTION))}function S(t,i,e={}){var s,o,r;null!==(s=e.offsetX)&&void 0!==s||(e.offsetX=0),null!==(o=e.offsetY)&&void 0!==o||(e.offsetY=0),null!==(r=e.machine)&&void 0!==r||(e.machine=0);const l=n.grid.alloc(t.width,t.height);let h=!1;n.utils.forRect(t.width,t.height,((s,o)=>{const r=s+e.offsetX,n=o+e.offsetY;i.get(r,n)?t.isStairs(s,o)&&(h=!0):!t.isPassable(s,o)||0!=t.getMachine(s,o)&&t.getMachine(s,o)!=e.machine||(l[s][o]=1)}));let a=!0;for(let t=0;t<l.width&&!h;++t)for(let i=0;i<l.height&&!h;++i)1==l[t][i]&&(a?(l.floodFill(t,i,1,2),a=!1):h=!0);return n.grid.free(l),h}function A(t,i,e=0,s=0){const o=n.grid.alloc(t.width,t.height);let r=0;if(n.utils.forRect(t.width,t.height,((n,l)=>{const h=n+e,a=l+s;i.get(h,a)?t.isStairs(n,l)&&(r=t.width*t.height):t.isPassable(n,l)&&(o[n][l]=1)})),r)return r;let l=!0,h=2,a=t.width*t.height;for(let t=0;t<o.width;++t)for(let i=0;i<o.height;++i)if(1==o[t][i]){const e=o.floodFill(t,i,1,h++);a=Math.min(a,e),l?l=!1:r=a}return n.grid.free(o),r}function F(t,i,e,s,o){const r=n.grid.alloc(t.width,t.height);M(t,r),n.path.calculateDistances(i,e,s,r,!1,o+1),n.grid.free(r)}var b={__proto__:null,NOTHING:h,FLOOR:a,DOOR:c,SECRET_DOOR:g,WALL:u,DEEP:d,SHALLOW:f,BRIDGE:_,UP_STAIRS:I,DOWN_STAIRS:p,IMPREGNABLE:E,TILEMAP:m,GridSite:T,MapSite:B,directionOfDoorSite:w,chooseRandomDoorSites:L,copySite:N,fillCostGrid:M,siteDisruptedBy:S,siteDisruptedSize:A,computeDistanceMap:F};class D{constructor(t,i,e,s=1){this.width=1,this.doors=[],this.x=t[0],this.y=t[1];const o=n.utils.DIRS[i];this.length=e,this.width=s,i===n.utils.UP||i===n.utils.DOWN?(this.x2=this.x+(s-1),this.y2=this.y+(e-1)*o[1]):(this.x2=this.x+(e-1)*o[0],this.y2=this.y+(s-1)),this.dir=i}translate(t,i){this.x+=t,this.y+=i,this.x2+=t,this.y2+=i,this.doors&&this.doors.forEach((e=>{e&&(e[0]<0||e[1]<0||(e[0]+=t,e[1]+=i))}))}}class P extends n.utils.Bounds{constructor(t,i,e,s){super(t,i,e,s),this.doors=[],this.hall=null}get cx(){return this.x+Math.floor(this.width/2)}get cy(){return this.y+Math.floor(this.height/2)}translate(t,i){this.x+=t,this.y+=i,this.doors&&this.doors.forEach((e=>{e&&(e[0]<0||e[1]<0||(e[0]+=t,e[1]+=i))})),this.hall&&this.hall.translate(t,i)}}function C(t,i={}){return t=t||{},i=i||{},Object.entries(i).forEach((([i,e])=>{let s=t[i];if("tile"===i)return void(void 0===s&&(t[i]=e));if(!0===e){if(!s)throw new Error("Missing required config for room digger: "+i)}else s=("number"==typeof e||Array.isArray(e),s||e);const o=n.range.make(s);t[i]=o})),t}class k{constructor(t,i={}){this.options={},this.doors=[],this._setOptions(t,i)}_setOptions(t,i={}){this.options=C(t,i)}create(t){const i=this.carve(t);return i&&(i.doors&&0!=i.doors.length&&!i.doors.every((t=>!t||-1==t[0]))||(i.doors=L(t))),i}}var y={};class v extends k{constructor(t={}){super(t,{choices:["DEFAULT"]})}_setOptions(t,i={}){const e=t.choices||i.choices;if(Array.isArray(e))this.randomRoom=n.random.item.bind(n.random,e);else{if("object"!=typeof e)throw new Error("Expected choices to be either array of room ids or weighted map - ex: { ROOM_ID: weight }");this.randomRoom=n.random.weighted.bind(n.random,e)}}carve(t){let i=this.randomRoom();const e=y[i];return e||n.utils.ERROR("Missing room digger choice: "+i),e.create(t)}}class Y extends k{constructor(t={}){super(t,{width:12,height:8})}carve(t){const i=this.options.width.value(),e=this.options.height.value(),s=this.options.tile||a,o=n.grid.alloc(t.width,t.height,0),r=Math.floor(.5*i),l=i,h=Math.floor(.5*e),c=e,g=new n.blob.Blob({rounds:5,minWidth:r,minHeight:h,maxWidth:l,maxHeight:c,percentSeeded:55,birthParameters:"ffffftttt",survivalParameters:"ffffttttt"}).carve(o.width,o.height,((t,i)=>o[t][i]=1)),u=Math.floor((t.width-g.width)/2),d=u-g.x,f=Math.floor((t.height-g.height)/2),_=f-g.y;return o.forEach(((i,e,o)=>{i&&t.setTile(e+d,o+_,s)})),n.grid.free(o),new P(u,f,g.width,g.height)}}class x extends k{constructor(t={}){super(t,{width:20,height:10})}carve(t){const i=this.options.width.value(),e=this.options.height.value(),s=this.options.tile||a,o=Math.floor(.4*i),r=e,l=i,h=Math.floor(.5*e),c=Math.floor(t.width/2-o/2-1),g=t.height-r-2,u=Math.floor(t.width/2-l/2-1),d=t.height-h-2;n.utils.forRect(c,g,o,r,((i,e)=>t.setTile(i,e,s))),n.utils.forRect(u,d,l,h,((i,e)=>t.setTile(i,e,s)));const f=new P(Math.min(c,u),Math.min(g,d),Math.max(o,l),Math.max(r,h));return f.doors[n.utils.DOWN]=[Math.floor(t.width/2),t.height-2],f}}class G extends k{constructor(t={}){super(t,{width:12,height:20})}carve(t){const i=this.options.width.value(),e=this.options.height.value(),s=this.options.tile||a,o=i,r=Math.max(3,Math.floor(i*n.random.range(25,75)/100)),l=Math.max(3,Math.floor(e*n.random.range(25,75)/100)),h=e,c=Math.floor((t.width-o)/2),g=c+n.random.range(2,Math.max(2,o-r-2)),u=Math.floor((t.height-h)/2),d=u+n.random.range(2,Math.max(2,h-l-2));return n.utils.forRect(c,d,o,l,((i,e)=>t.setTile(i,e,s))),n.utils.forRect(g,u,r,h,((i,e)=>t.setTile(i,e,s))),new P(c,u,Math.max(o,r),Math.max(l,h))}}class X extends k{constructor(t={}){super(t,{width:7,height:7})}carve(t){const i=this.options.width.value(),e=this.options.height.value(),s=this.options.tile||a;let o=Math.max(3,Math.floor(i*n.random.range(25,50)/100)),r=Math.max(3,Math.floor(e*n.random.range(25,50)/100));const l=Math.floor((t.width-i)/2),h=Math.floor((t.height-r)/2);n.utils.forRect(l,h,i,r,((i,e)=>t.setTile(i,e,s)));const c=Math.floor((t.width-o)/2),g=Math.floor((t.height-e)/2);return n.utils.forRect(c,g,o,e,((i,e)=>t.setTile(i,e,s))),new P(Math.min(l,c),Math.min(h,g),Math.max(i,o),Math.max(e,r))}}class W extends k{constructor(t={}){super(t,{width:[3,6],height:[3,6]})}carve(t){const i=this.options.width.value(),e=this.options.height.value(),s=this.options.tile||a,o=Math.floor((t.width-i)/2),r=Math.floor((t.height-e)/2);return n.utils.forRect(o,r,i,e,((i,e)=>t.setTile(i,e,s))),new P(o,r,i,e)}}class U extends k{constructor(t={}){super(t,{radius:[3,4]})}carve(t){const i=this.options.radius.value(),e=this.options.tile||a,s=Math.floor(t.width/2),o=Math.floor(t.height/2);return i>1&&n.utils.forCircle(s,o,i,((i,s)=>t.setTile(i,s,e))),new P(s-i,o-i,2*i+1,2*i+1)}}class V extends k{constructor(t={}){super(t,{radius:[5,10],ringMinWidth:3,holeMinSize:3,holeChance:50})}carve(t){const i=this.options.radius.value(),e=this.options.ringMinWidth.value(),s=this.options.holeMinSize.value(),o=this.options.tile||a,r=Math.floor(t.width/2),l=Math.floor(t.height/2);return n.utils.forCircle(r,l,i,((i,e)=>t.setTile(i,e,o))),i>e+s&&n.random.chance(this.options.holeChance.value())&&n.utils.forCircle(r,l,n.random.range(s,i-s),((i,e)=>t.setTile(i,e,0))),new P(r-i,l-i,2*i+1,2*i+1)}}class H extends k{constructor(t={}){super(t,{count:[2,12],width:[5,20],height:[5,20]})}carve(t){let i,e,s,o=this.options.count.value();const r=this.options.width.value(),l=this.options.height.value(),h=this.options.tile||a,c=Math.floor(t.width/2)-Math.floor(r/2),g=Math.floor(t.width/2)+Math.floor(r/2),u=Math.floor(t.height/2)-Math.floor(l/2),d=Math.floor(t.height/2)+Math.floor(l/2);let f=Math.floor(t.width/2),_=f,I=Math.floor(t.height/2),p=I;for(n.utils.forCircle(f,I,2,((i,e)=>t.setTile(i,e,h))),f-=2,_+=2,I-=2,p+=2,i=0;i<o;)if(e=n.random.range(c,g),s=n.random.range(u,d),t.isSet(e,s)){if(e-2<c)continue;if(e+2>g)continue;if(s-2<u)continue;if(s+2>d)continue;f=Math.min(e-2,f),_=Math.max(e+2,_),I=Math.min(s-2,I),p=Math.max(s+2,p),n.utils.forCircle(e,s,2,((i,e)=>t.setTile(i,e,h))),i++}return new P(f,I,_-f+1,p-I+1)}}function q(t,i){return y[t]=i,i}q("DEFAULT",new W);var K={__proto__:null,checkConfig:C,RoomDigger:k,rooms:y,ChoiceRoom:v,choiceRoom:function(t,i){return new v(t).create(i)},Cavern:Y,cavern:function(t,i){return new Y(t).create(i)},BrogueEntrance:x,brogueEntrance:function(t,i){return new x(t).create(i)},Cross:G,cross:function(t,i){return new G(t).create(i)},SymmetricalCross:X,symmetricalCross:function(t,i){return new X(t).create(i)},Rectangular:W,rectangular:function(t,i){return new W(t).create(i)},Circular:U,circular:function(t,i){return new U(t).create(i)},BrogueDonut:V,brogueDonut:function(t,i){return new V(t).create(i)},ChunkyRoom:H,chunkyRoom:function(t,i){return new H(t).create(i)},install:q};const z=n.utils.DIRS;function j(t,i,e){if(!t.hasXY(i[0],i[1]))return!1;if(!t.isDiggable(i[0],i[1]))return!1;const s=[i[0]-e[0],i[1]-e[1]];return!!t.hasXY(s[0],s[1])&&!!t.isFloor(s[0],s[1])}function Q(t,i){return t==n.utils.UP||t==n.utils.DOWN?i[1].value():i[0].value()}function Z(t,i,e){let s=n.utils.NO_DIRECTION;if(s==n.utils.NO_DIRECTION){const o=n.random.sequence(4);for(let r=0;r<4;r++){s=o[r];const l=e[(r+1)%2].hi,h=i[s];if(h&&-1!=h[0]&&-1!=h[1]){const i=h[0]+Math.floor(z[s][0]*l),e=h[1]+Math.floor(z[s][1]*l);if(t.hasXY(i,e))break}s=n.utils.NO_DIRECTION}}return s}function $(t,i,e,s,o){let r,l;const h=n.random.chance(o),a=[];for(let o=0;o<4;o++)r=i+z[o][0],l=e+z[o][1],o!=s&&!h||!t.hasXY(r,l)||t.isSet(r,l)||(a[o]=[r,l]);return a}class J{constructor(t={}){this.config={width:n.range.make(1),length:[n.range.make("2-15"),n.range.make("2-9")],tile:a,obliqueChance:15,chance:100},this._setOptions(t)}_setOptions(t={}){if(t.width&&(this.config.width=n.range.make(t.width)),t.length&&"number"==typeof t.length){const i=n.range.make(t.length);this.config.length=[i,i]}t.tile&&(this.config.tile=t.tile),t.chance&&(this.config.chance=t.chance)}create(t,i=[]){if(i=i||L(t),!n.random.chance(this.config.chance))return null;const e=Z(t,i,this.config.length);if(e===n.utils.NO_DIRECTION)return null;if(!i[e])return null;const s=this.config.width.value(),o=Q(e,this.config.length),r=i[e];return 1==s?this.dig(t,e,r,o):this.digWide(t,e,r,o,s)}_digLine(t,i,e,s){let o=i[0],r=i[1];const n=this.config.tile;for(let i=0;i<s;i++)t.setTile(o,r,n),o+=e[0],r+=e[1];return o-=e[0],r-=e[1],[o,r]}dig(t,i,e,s){const o=z[i],[r,n]=this._digLine(t,e,o,s),l=new D(e,i,s);return l.doors=$(t,r,n,i,this.config.obliqueChance),l}digWide(t,i,e,s,o){const r=n.utils.DIRS[i],l=[e[0]-r[1],e[1]-r[0]],h=[e[0]+r[1],e[1]+r[0]];this._digLine(t,e,r,s);let a=1,c=e[0],g=e[1];a<o&&j(t,l,r)&&(this._digLine(t,l,r,s),c=Math.min(l[0],c),g=Math.min(l[1],g),++a),a<o&&j(t,h,r)&&(this._digLine(t,h,r,s),c=Math.min(h[0],c),g=Math.min(h[1],g),++a);const u=new D([c,g],i,s,o);return u.doors=[],u.doors[i]=[e[0]+s*r[0],e[1]+s*r[1]],u.width=o,u}}function tt(t,i,e){return new J(t).create(i,e)}var it={};function et(t,i){return it[t]=i,i}et("DEFAULT",new J({chance:15}));var st={__proto__:null,isDoorLoc:j,pickWidth:function(t={}){return n.utils.clamp(function(t){if(!t)return 1;if("number"==typeof t)return t;if(void 0===t.width)return 1;let i=t.width;if("number"==typeof i)return i;i=Array.isArray(i)?n.random.weighted(i)+1:"string"==typeof i?n.range.make(i).value():Number.parseInt(n.random.weighted(i));return i}(t),1,3)},pickLength:Q,pickHallDirection:Z,pickHallExits:$,HallDigger:J,dig:tt,halls:it,install:et};class ot{constructor(t={}){this.options={height:15,width:30,minSize:5,tries:20,count:1,canDisrupt:!1,wreathTile:f,wreathChance:50,wreathSize:1,tile:d},Object.assign(this.options,t)}create(t){let i,e,s,o,r,l,h,a,c,g,u,_=0;l=this.options.height||15,h=this.options.width||30,a=this.options.minSize||5,c=this.options.tries||20,g=this.options.count||1,u=this.options.canDisrupt||!1;const I=!!n.random.chance(this.options.wreathChance),p=this.options.wreathTile||f,E=this.options.wreathSize||1,m=this.options.tile||d,T=n.grid.alloc(t.width,t.height,0);let R=0;for(;R<g&&_<g;){const d=Math.round((h-a)*(g-R)/g)+a,f=Math.round((l-a)*(g-R)/g)+a,B=new n.blob.Blob({rounds:5,minWidth:4,minHeight:4,maxWidth:d,maxHeight:f,percentSeeded:55,birthParameters:"ffffftttt",survivalParameters:"ffffttttt"}).carve(T.width,T.height,((t,i)=>T[t][i]=1));let O=!1;for(s=0;s<c&&!O;s++)if(o=n.random.range(1-B.x,T.width-B.width-B.x-2),r=n.random.range(1-B.y,T.height-B.height-B.y-2),u||!this.isDisruptedBy(t,T,-o,-r)){for(O=!0,i=0;i<B.width;i++)for(e=0;e<B.height;e++)if(T[i+B.x][e+B.y]){const s=i+B.x+o,l=e+B.y+r;t.setTile(s,l,m),I&&n.utils.forCircle(s,l,E,((i,e)=>{t.isPassable(i,e)&&t.setTile(i,e,p)}))}break}O?++_:++R}return n.grid.free(T),_}isDisruptedBy(t,i,e=0,s=0){const o=n.grid.alloc(t.width,t.height);let r=!1;n.utils.forRect(t.width,t.height,((n,l)=>{const h=n+e,a=l+s;i.get(h,a)?t.isStairs(n,l)&&(r=!0):t.isPassable(n,l)&&(o[n][l]=1)}));let l=!0;for(let t=0;t<o.width&&!r;++t)for(let i=0;i<o.height&&!r;++i)1==o[t][i]&&(l?(o.floodFill(t,i,1,2),l=!1):r=!0);return n.grid.free(o),r}}var rt={__proto__:null,Lakes:ot};class nt{constructor(t={}){this.options={minDistance:20,maxLength:5},Object.assign(this.options,t)}create(t){let i,e,s,o,r,l,h,c=0;const g=this.options.maxLength,u=this.options.minDistance,d=n.grid.alloc(t.width,t.height),f=n.grid.alloc(t.width,t.height),I=[[1,0],[0,1]];f.update(((i,e,s)=>t.isPassable(e,s)?1:n.path.OBSTRUCTION));const p=n.random.sequence(t.width*t.height);for(s=0;s<p.length;s++)if(l=Math.floor(p[s]/t.height),h=p[s]%t.height,t.isPassable(l,h)&&!t.isAnyLiquid(l,h))for(r=0;r<=1;r++){const s=I[r];if(i=l+s[0],e=h+s[1],o=g,t.isAnyLiquid(i,e))for(o=0;o<g&&(i+=s[0],e+=s[1],t.isAnyLiquid(i,e));++o);if(t.isPassable(i,e)&&o<g&&(n.path.calculateDistances(d,i,e,f,!1),d[l][h]>u&&d[l][h]<n.path.NO_PATH)){for(;l!==i||h!==e;)this.isBridgeCandidate(t,l,h,s)?(t.setTile(l,h,_),f[l][h]=1):(t.setTile(l,h,a),f[l][h]=1),l+=s[0],h+=s[1];++c;break}}return n.grid.free(d),n.grid.free(f),c}isBridgeCandidate(t,i,e,s){return!!t.isBridge(i,e)||!!t.isAnyLiquid(i,e)&&(!!t.isAnyLiquid(i+s[1],e+s[0])&&!!t.isAnyLiquid(i-s[1],e-s[0]))}}var lt={__proto__:null,Bridges:nt};class ht{constructor(t={}){this.options={up:!0,down:!0,minDistance:10,start:!1,upTile:I,downTile:p,wall:E},Object.assign(this.options,t)}create(t){let i=!1!==this.options.up,e=!1!==this.options.down;const s=this.options.minDistance||Math.floor(Math.max(t.width,t.height)/2),o={};let r=null,l=null;const h=this.isStairXY.bind(this,t);if(this.options.start&&"string"!=typeof this.options.start){let i=this.options.start;i=!0===i?n.random.matchingLoc(t.width,t.height,h):n.random.matchingLocNear(n.utils.x(i),n.utils.y(i),h),o.start=i}if(Array.isArray(this.options.up)&&Array.isArray(this.options.down)){const t=this.options.up;r=n.random.matchingLocNear(n.utils.x(t),n.utils.y(t),h);const i=this.options.down;l=n.random.matchingLocNear(n.utils.x(i),n.utils.y(i),h)}else if(Array.isArray(this.options.up)&&!Array.isArray(this.options.down)){const i=this.options.up;r=n.random.matchingLocNear(n.utils.x(i),n.utils.y(i),h),e&&(l=n.random.matchingLoc(t.width,t.height,((t,i)=>!(n.utils.distanceBetween(t,i,r[0],r[1])<s)&&h(t,i))))}else if(Array.isArray(this.options.down)&&!Array.isArray(this.options.up)){const e=this.options.down;l=n.random.matchingLocNear(n.utils.x(e),n.utils.y(e),h),i&&(r=n.random.matchingLoc(t.width,t.height,((t,i)=>!(n.utils.distanceBetween(t,i,l[0],l[1])<s)&&h(t,i))))}else i?(r=n.random.matchingLoc(t.width,t.height,h),e&&(l=n.random.matchingLoc(t.width,t.height,((t,i)=>!(n.utils.distanceBetween(t,i,r[0],r[1])<s)&&h(t,i))))):e&&(l=n.random.matchingLoc(t.width,t.height,h));return r&&(o.up=r.slice(),this.setupStairs(t,r[0],r[1],this.options.upTile),"up"===this.options.start&&(o.start=o.up)),l&&(o.down=l.slice(),this.setupStairs(t,l[0],l[1],this.options.downTile),"down"===this.options.start&&(o.start=o.down)),r||l?o:null}hasXY(t,i,e){return!(i<0||e<0)&&!(i>=t.width||e>=t.height)}isStairXY(t,i,e){let s=0;if(!this.hasXY(t,i,e)||!t.isDiggable(i,e))return!1;for(let o=0;o<4;++o){const r=n.utils.DIRS[o];if(!this.hasXY(t,i+r[0],e+r[1]))return!1;if(!this.hasXY(t,i-r[0],e-r[1]))return!1;if(t.isFloor(i+r[0],e+r[1])){if(s+=1,!t.isDiggable(i-r[0]+r[1],e-r[1]+r[0]))return!1;if(!t.isDiggable(i-r[0]-r[1],e-r[1]-r[0]))return!1}else if(!t.isDiggable(i+r[0],e+r[1]))return!1}return 1==s}setupStairs(t,i,e,s){const o=n.random.sequence(4);let r=null;for(let s=0;s<o.length;++s){r=n.utils.DIRS[s];const o=i+r[0],l=e+r[1];if(t.isFloor(o,l)&&t.isDiggable(i-r[0],e-r[1]))break;r=null}r||n.utils.ERROR("No stair direction found!"),t.setTile(i,e,s);const l=n.utils.CLOCK_DIRS.findIndex((t=>t[0]==r[0]&&t[1]==r[1])),h=this.options.wall;for(let s=0;s<n.utils.CLOCK_DIRS.length;++s){const o=s?s-1:7,r=(s+1)%8;if(s==l||o==l||r==l)continue;const a=n.utils.CLOCK_DIRS[s];t.setTile(i+a[0],e+a[1],h)}return!0}}var at={__proto__:null,Stairs:ht};class ct{constructor(t={}){this.options={minDistance:100,maxLength:1,doorChance:50},Object.assign(this.options,t)}create(t){let i,e,s,o,r,l,h,g,u;const d=Math.min(this.options.minDistance,Math.floor(Math.max(t.width,t.height)/2)),f=this.options.maxLength,_=n.grid.alloc(t.width,t.height),I=n.grid.alloc(t.width,t.height),p=[[1,0],[0,1]];function E(i,e,s){return!!t.hasXY(i,e)&&(!!t.hasXY(i+s[1],e+s[0])&&(!!t.hasXY(i-s[1],e-s[0])&&(!t.isSet(i,e)&&(!t.isSet(i+s[1],e+s[0])&&!t.isSet(i-s[1],e-s[0])))))}function m(i,e,s){return!!t.hasXY(i,e)&&(!!t.hasXY(i+s[1],e+s[0])&&(!!t.hasXY(i-s[1],e-s[0])&&(!!t.isSet(i,e)||(!!t.isSet(i+s[1],e+s[0])||!!t.isSet(i-s[1],e-s[0])))))}M(t,I);let T=0;const R=n.random.sequence(t.width*t.height);for(r=0;r<R.length;r++)if(g=Math.floor(R[r]/t.height),u=R[r]%t.height,!t.isSet(g,u))for(h=0;h<=1;h++){let r=p[h];if(E(g,u,r)){if(l=f,t.hasXY(g+r[0],u+r[1])&&t.isPassable(g+r[0],u+r[1])){if(!t.hasXY(g-r[0],u-r[1])||t.isDoor(g-r[0],u-r[1]))continue}else{if(!t.hasXY(g-r[0],u-r[1])||!t.isPassable(g-r[0],u-r[1]))continue;if(!t.hasXY(g+r[0],u+r[1])||t.isDoor(g+r[0],u+r[1]))continue;r=r.map((t=>-1*t))}for(i=g+r[0],e=u+r[1],s=g,o=u,l=0;l<f&&(s-=r[0],o-=r[1],!m(s,o,r));++l);if(l<f&&(n.path.calculateDistances(_,i,e,I,!1),_[s][o]>d&&_[s][o]<3e4)){for(;s!==i||o!==e;)t.isNothing(s,o)&&(t.setTile(s,o,a),I[s][o]=1),s+=r[0],o+=r[1];const l=n.random.chance(this.options.doorChance)?c:a;t.setTile(g,u,l),++T;break}}}return n.grid.free(_),n.grid.free(I),T}}var gt={__proto__:null,LoopDigger:ct,digLoops:function(t,i={}){return new ct(i).create(t)}};class ut{constructor(t={}){var i,e;this.seed=0,this.rooms={},this.doors={chance:15},this.halls={chance:15},this.loops={},this.lakes={},this.bridges={},this.stairs={},this.boundary=!0,this.startLoc=[-1,-1],this.endLoc=[-1,-1],this.seed=t.seed||0,n.utils.setOptions(this.rooms,t.rooms),!1===t.doors?t.doors={chance:0}:!0===t.doors&&(t.doors={chance:100}),n.utils.setOptions(this.doors,t.doors),!1===t.halls?t.halls={chance:0}:!0===t.halls&&(t.halls={}),n.utils.setOptions(this.halls,t.halls),!1===t.loops?this.loops=null:(!0===t.loops&&(t.loops={}),t.loops=t.loops||{},t.loops.doorChance=null!==(i=t.loops.doorChance)&&void 0!==i?i:null===(e=t.doors)||void 0===e?void 0:e.chance,n.utils.setOptions(this.loops,t.loops)),!1===t.lakes?this.lakes=null:(!0===t.lakes&&(t.lakes={}),n.utils.setOptions(this.lakes,t.lakes)),!1===t.bridges?this.bridges=null:(!0===t.bridges&&(t.bridges={}),n.utils.setOptions(this.bridges,t.bridges)),!1===t.stairs?this.stairs=null:(!0===t.stairs&&(t.stairs={}),n.utils.setOptions(this.stairs,t.stairs)),this.startLoc=t.startLoc||[-1,-1],this.endLoc=t.endLoc||[-1,-1]}_makeSite(t,i){return new T(t,i)}create(...t){if(1==t.length&&t[0]instanceof l.map.Map){const i=t[0];this.site=new B(i)}if(t.length>1){const i=t[0],e=t[1];this.site=new T(i,e)}const i=this._create(this.site);if(t.length>1){const i=t[0],e=t[1],s=t[2];n.utils.forRect(i,e,((t,i)=>{const e=this.site.getTileIndex(t,i);e&&s(t,i,e)}))}return this.site.free(),i}_create(t){this.startLoc[0]<0&&this.startLoc[0]<0&&(this.startLoc[0]=Math.floor(t.width/2),this.startLoc[1]=t.height-2),this.start(t);let i=20;for(;--i&&!this.addFirstRoom(t););if(!i)throw new Error("Failed to place first room!");let e=0;for(;e<20;)this.addRoom(t)?e=0:++e;return this.loops&&this.addLoops(t,this.loops),this.lakes&&this.addLakes(t,this.lakes),this.bridges&&this.addBridges(t,this.bridges),this.stairs&&this.addStairs(t,this.stairs),this.finish(t),!0}start(t){this.seed&&n.random.seed(this.seed),t.clear(),this.seq=n.random.sequence(t.width*t.height)}getDigger(t){if(!t)throw new Error("Missing digger!");if(t instanceof k)return t;if("string"==typeof t){const i=y[t];if(!i)throw new Error("Failed to find digger - "+t);return i}return new v(t)}addFirstRoom(t){const i=this._makeSite(t.width,t.height);let e=this.getDigger(this.rooms.first||this.rooms.digger||"DEFAULT").create(i);return e&&!this._attachRoomAtLoc(t,i,e,this.startLoc)&&(e=null),i.free(),e}addRoom(t){const i=this._makeSite(t.width,t.height);let e=this.getDigger(this.rooms.digger||"DEFAULT").create(i);if(this.halls.chance){let t=tt(this.halls,i,e.doors);t&&(e.hall=t)}return e&&!this._attachRoom(t,i,e)&&(e=null),i.free(),e}_attachRoom(t,i,e){const s=e.hall?e.hall.doors:e.doors;for(let o=0;o<this.seq.length;o++){const r=Math.floor(this.seq[o]/t.height),l=this.seq[o]%t.height;if(!t.isNothing(r,l))continue;const h=w(t,r,l);if(h!=n.utils.NO_DIRECTION){const o=(h+2)%4,n=s[o];if(!n)continue;const a=r-n[0],c=l-n[1];if(-1!=n[0]&&this._roomFitsAt(t,i,a,c))return N(t,i,a,c),this._attachDoor(t,e,r,l,o),e.translate(a,c),!0}}return!1}_attachRoomAtLoc(t,i,e,s){const[o,r]=s,l=e.hall?e.hall.doors:e.doors,h=n.random.sequence(4);for(let s of h){const n=l[(s+2)%4];if(!n||-1==n[0])continue;const h=o-n[0],a=r-n[1];if(this._roomFitsAt(t,i,h,a))return N(t,i,h,a),e.translate(h,a),!0}return!1}_roomFitsAt(t,i,e,s){let o,r,n,l,h,a;for(o=0;o<i.width;o++)for(r=0;r<i.height;r++)if(i.isSet(o,r))for(n=o+e,l=r+s,h=n-1;h<=n+1;h++)for(a=l-1;a<=l+1;a++)if(!t.hasXY(h,a)||t.isBoundaryXY(h,a)||!t.isNothing(h,a))return!1;return!0}_attachDoor(t,i,e,s,o){const r=this.doors;let l=!1;r.chance&&n.random.chance(r.chance)&&(l=!0);const h=l?r.tile||c:a;if(t.setTile(e,s,h),i.hall&&i.hall.width>1&&i.hall.dir===o)if(o===n.utils.UP||o===n.utils.DOWN){let i=!0,o=1;for(;i;)i=!1,t.isNothing(e-o,s)&&t.isSet(e-o,s-1)&&t.isSet(e-o,s+1)&&(t.setTile(e-o,s,h),i=!0),t.isNothing(e+o,s)&&t.isSet(e+o,s-1)&&t.isSet(e+o,s+1)&&(t.setTile(e+o,s,h),i=!0),++o}else{let i=!0,o=1;for(;i;)i=!1,t.isNothing(e,s-o)&&t.isSet(e-1,s-o)&&t.isSet(e+1,s-o)&&(t.setTile(e,s-o,h),i=!0),t.isNothing(e,s+o)&&t.isSet(e-1,s+o)&&t.isSet(e+1,s+o)&&(t.setTile(e,s+o,h),i=!0),++o}}addLoops(t,i){return new ct(i).create(t)}addLakes(t,i){return new ot(i).create(t)}addBridges(t,i){return new nt(i).create(t)}addStairs(t,i){return new ht(i).create(t)}finish(t){this._removeDiagonalOpenings(t),this._finishWalls(t),this._finishDoors(t)}_removeDiagonalOpenings(t){let i,e,s,o,r,l;do{for(l=!1,i=0;i<t.width-1;i++)for(e=0;e<t.height-1;e++)for(s=0;s<=1;s++)!t.blocksMove(i+s,e)&&t.blocksMove(i+(1-s),e)&&t.blocksDiagonal(i+(1-s),e)&&t.blocksMove(i+s,e+1)&&t.blocksDiagonal(i+s,e+1)&&!t.blocksMove(i+(1-s),e+1)&&(n.random.chance(50)?(o=i+(1-s),r=e):(o=i+s,r=e+1),l=!0,t.setTile(o,r,a))}while(1==l)}_finishDoors(t){n.utils.forRect(t.width,t.height,((i,e)=>{t.isBoundaryXY(i,e)||t.isDoor(i,e)&&((t.isFloor(i+1,e)||t.isFloor(i-1,e))&&(t.isFloor(i,e+1)||t.isFloor(i,e-1))||(t.blocksPathing(i+1,e)?1:0)+(t.blocksPathing(i-1,e)?1:0)+(t.blocksPathing(i,e+1)?1:0)+(t.blocksPathing(i,e-1)?1:0)>=3)&&t.setTile(i,e,a)}))}_finishWalls(t){const i=this.boundary?E:u;n.utils.forRect(t.width,t.height,((e,s)=>{t.isNothing(e,s)&&(t.isBoundaryXY(e,s)?t.setTile(e,s,i):t.setTile(e,s,u))}))}}const dt=n.flag.fl;var ft;!function(t){t[t.BP_ROOM=dt(10)]="BP_ROOM",t[t.BP_VESTIBULE=dt(1)]="BP_VESTIBULE",t[t.BP_REWARD=dt(7)]="BP_REWARD",t[t.BP_ADOPT_ITEM=dt(0)]="BP_ADOPT_ITEM",t[t.BP_PURGE_PATHING_BLOCKERS=dt(2)]="BP_PURGE_PATHING_BLOCKERS",t[t.BP_PURGE_INTERIOR=dt(3)]="BP_PURGE_INTERIOR",t[t.BP_PURGE_LIQUIDS=dt(4)]="BP_PURGE_LIQUIDS",t[t.BP_SURROUND_WITH_WALLS=dt(5)]="BP_SURROUND_WITH_WALLS",t[t.BP_IMPREGNABLE=dt(6)]="BP_IMPREGNABLE",t[t.BP_OPEN_INTERIOR=dt(8)]="BP_OPEN_INTERIOR",t[t.BP_MAXIMIZE_INTERIOR=dt(9)]="BP_MAXIMIZE_INTERIOR",t[t.BP_REDESIGN_INTERIOR=dt(14)]="BP_REDESIGN_INTERIOR",t[t.BP_TREAT_AS_BLOCKING=dt(11)]="BP_TREAT_AS_BLOCKING",t[t.BP_REQUIRE_BLOCKING=dt(12)]="BP_REQUIRE_BLOCKING",t[t.BP_NO_INTERIOR_FLAG=dt(13)]="BP_NO_INTERIOR_FLAG"}(ft||(ft={}));class _t{constructor(t={}){if(this.tags=[],this.flags=0,this.steps=[],this.id="n/a",t.tags&&("string"==typeof t.tags&&(t.tags=t.tags.split(/[,|]/).map((t=>t.trim()))),this.tags=t.tags),this.frequency=n.frequency.make(t.frequency||100),t.size){if(this.size=n.range.make(t.size),this.size.lo>this.size.hi)throw new Error("Blueprint size must be small to large.")}else this.size=n.range.make([1,1]);if(t.flags&&(this.flags=n.flag.from(ft,t.flags)),t.steps&&(this.steps=t.steps.map((t=>new Tt(t)))),this.flags&ft.BP_ADOPT_ITEM&&!this.steps.some((t=>t.flags&mt.BF_ADOPT_ITEM)))throw new Error("Blueprint wants to BP_ADOPT_ITEM, but has no steps with BF_ADOPT_ITEM.")}getChance(t,i){return i&&i.length&&("string"==typeof i&&(i=i.split(/[,|]/).map((t=>t.trim()))),!i.every((t=>this.tags.includes(t))))?0:this.frequency(t)}get isRoom(){return!!(this.flags&ft.BP_ROOM)}get isReward(){return!!(this.flags&ft.BP_REWARD)}get isVestiblue(){return!!(this.flags&ft.BP_VESTIBULE)}get adoptsItem(){return!!(this.flags&ft.BP_ADOPT_ITEM)}get treatAsBlocking(){return!!(this.flags&ft.BP_TREAT_AS_BLOCKING)}get requireBlocking(){return!!(this.flags&ft.BP_REQUIRE_BLOCKING)}get purgeInterior(){return!!(this.flags&ft.BP_PURGE_INTERIOR)}get purgeBlockers(){return!!(this.flags&ft.BP_PURGE_PATHING_BLOCKERS)}get purgeLiquids(){return!!(this.flags&ft.BP_PURGE_LIQUIDS)}get surroundWithWalls(){return!!(this.flags&ft.BP_SURROUND_WITH_WALLS)}get makeImpregnable(){return!!(this.flags&ft.BP_IMPREGNABLE)}get maximizeInterior(){return!!(this.flags&ft.BP_MAXIMIZE_INTERIOR)}get openInterior(){return!!(this.flags&ft.BP_OPEN_INTERIOR)}get noInteriorFlag(){return!!(this.flags&ft.BP_NO_INTERIOR_FLAG)}qualifies(t,i){return!(this.frequency(i)<=0||~this.flags&t||this.flags&ft.BP_ADOPT_ITEM&~t||this.flags&ft.BP_VESTIBULE&~t)}pickLocation(t){if(this.isRoom){const i=n.random.matchingLoc(t.width,t.height,((i,e)=>t.hasCellFlag(i,e,l.flags.Cell.IS_GATE_SITE)&&this.size.contains(t.getChokeCount(i,e))));return!i||i[0]<0||i[1]<0?(console.log("Failed to build a machine; there was no eligible door candidate for the chosen room machine from blueprint."),!1):i}if(this.isVestiblue)return console.log("ERROR: Attempted to build a vestiblue without a location being provided."),!1;const i=n.random.matchingLoc(t.width,t.height,((i,e)=>t.isPassable(i,e)));return!(!i||i[0]<0||i[1]<0)&&i}computeInterior(t){let i,e=this.isRoom?10:20;const s=t.interior,o=t.site;do{if(i=!1,--e<=0)return console.log("Failed to build a machine; failed repeatedly to find a suitable blueprint location."),!1;if(s.fill(0),this.isRoom)i=!this.addTileToInteriorAndIterate(t,t.originX,t.originY);else if(this.isVestiblue){if(!this.computeInteriorForVestibuleMachine(t))return console.error("ERROR: Attempted to build a door machine from blueprint: not enough room."),!1}else{let e=n.grid.alloc(s.width,s.height);F(o,e,t.originX,t.originY,this.size.hi);const r=n.random.sequence(o.width*o.height);let h=0,a=this.size.value();for(let t=0;t<1e3&&h<a;t++)for(let n=0;n<r.length&&h<a;n++){const c=Math.floor(r[n]/o.height),g=r[n]%o.height;e[c][g]==t&&(s[c][g]=1,h++,(o.isOccupied(c,g)||o.hasCellFlag(c,g,l.flags.Cell.IS_IN_MACHINE))&&(i=!0,h=a))}h<a?(i=!0,console.log("too small")):this.treatAsBlocking&&S(o,s,{machine:o.machineCount})?(console.log("disconnected"),i=!0):this.requireBlocking&&A(o,s)<100&&(console.log("not disconnected enough"),i=!0),n.grid.free(e)}}while(i);return!0}addTileToInteriorAndIterate(t,i,e){let s=!0;const o=t.interior,r=t.site;o[i][e]=1;const h=r.getChokeCount(i,e);for(let a=0;a<4&&s;a++){const c=i+n.utils.DIRS[a][0],g=e+n.utils.DIRS[a][1];if(r.hasXY(c,g)&&!o[c][g]){if(r.isOccupied(c,g)||r.hasCellFlag(c,g,l.flags.Cell.IS_IN_MACHINE)&&!r.hasCellFlag(c,g,l.flags.Cell.IS_GATE_SITE))return!1;r.getChokeCount(c,g)<=h&&!r.hasCellFlag(c,g,l.flags.Cell.IS_IN_MACHINE)&&(s=this.addTileToInteriorAndIterate(t,c,g))}}return s}computeInteriorForVestibuleMachine(t){let i=!0;const e=t.site,s=t.interior;s.fill(0);const o=e.getChokeCount(t.originX,t.originY),r=[-1,-1];let l=o;n.utils.eachNeighbor(t.originX,t.originY,((t,i)=>{const s=e.getChokeCount(t,i);s!=o&&(s>1e4||s<0||(r[0]=t,r[1]=i,l=s))}),!0);const h=l-o;if(this.size.contains(h)){const t=s.floodFill(r[0],r[1],((t,s,o)=>(e.isOccupied(s,o)&&(i=!1),e.getChokeCount(s,o)===l)),1);if(i&&this.size.contains(t))return!0}let a=0;const c=this.size.value(),g=n.grid.alloc(e.width,e.height);F(e,g,t.originX,t.originY,this.size.hi);const u=n.random.sequence(e.width*e.height);i=!0;for(let t=0;t<1e3&&a<c;t++)for(let r=0;r<u.length&&a<c;++r){const n=Math.floor(u[r]/e.height),l=u[r]%e.height;g[n][l]==t&&(e.isOccupied(n,l)&&(i=!1,a=c),e.getChokeCount(n,l)<=o||(s[n][l]=1,a+=1))}return(this.treatAsBlocking&&S(e,s,{machine:e.machineCount})||this.requireBlocking&&A(e,s)<100)&&(i=!1),n.grid.free(g),i}prepareInteriorWithMachineFlags(t){const i=t.interior,e=t.site;this.maximizeInterior?this.expandMachineInterior(t,1):this.openInterior&&this.expandMachineInterior(t,4),this.purgeInterior&&i.forEach(((t,i,s)=>{t&&e.setTile(i,s,a)})),this.purgeBlockers&&i.forEach(((t,i,s)=>{t&&e.blocksPathing(i,s)&&e.setTile(i,s,a)})),this.purgeLiquids&&i.forEach(((t,i,s)=>{t&&e.isAnyLiquid(i,s)&&e.setTile(i,s,a)})),this.surroundWithWalls&&i.forEach(((t,s,o)=>{t&&!e.hasCellFlag(s,o,l.flags.Cell.IS_GATE_SITE)&&n.utils.eachNeighbor(s,o,((t,s)=>{i.hasXY(t,s)&&(i[t][s]||e.isWall(t,s)||e.hasCellFlag(t,s,l.flags.Cell.IS_GATE_SITE)||e.hasCellFlag(t,s,l.flags.Cell.IS_IN_MACHINE)||e.blocksPathing(t,s)&&e.setTile(t,s,u))}),!1)})),this.makeImpregnable&&i.forEach(((t,s,o)=>{t&&!e.hasCellFlag(s,o,l.flags.Cell.IS_GATE_SITE)&&(e.setCellFlag(s,o,l.flags.Cell.IMPREGNABLE),n.utils.eachNeighbor(s,o,((t,s)=>{i.hasXY(t,s)&&(i[t][s]||e.hasCellFlag(t,s,l.flags.Cell.IS_GATE_SITE)||e.setCellFlag(t,s,l.flags.Cell.IMPREGNABLE))}),!1))}));const s=t.machineNumber;i.forEach(((t,i,o)=>{t&&(this.flags&ft.BP_NO_INTERIOR_FLAG||e.setMachine(i,o,s,this.isRoom),e.isSecretDoor(i,o)&&e.setTile(i,o,c))}))}expandMachineInterior(t,i=1){let e;const s=t.interior,o=t.site;do{e=!1,s.forEach(((t,r,h)=>{if(o.hasCellFlag(r,h,l.flags.Cell.IS_IN_MACHINE))return;if(!o.blocksPathing(r,h))return;let c=0;n.utils.eachNeighbor(r,h,((t,i)=>{s.hasXY(t,i)&&s[t][i]&&!o.blocksPathing(t,i)&&++c}),!1),c<i||(c=0,n.utils.eachNeighbor(r,h,((t,i)=>{s.hasXY(t,i)&&(s[t][i]||o.isWall(t,i)&&!o.hasCellFlag(t,i,l.flags.Cell.IS_IN_MACHINE)||++c)}),!1),c||(e=!0,s[r][h]=1,o.blocksPathing(r,h)&&o.setTile(r,h,a),n.utils.eachNeighbor(r,h,((t,i)=>{s.hasXY(t,i)&&(o.isSet(t,i)||o.setTile(t,i,u))}))))}))}while(e)}calcDistances(t){t.distanceMap.fill(0),F(t.site,t.distanceMap,t.originX,t.originY,this.size.hi);let i=0;const e=new Array(100).fill(0);t.interior.forEach(((s,o,r)=>{if(!s)return;const n=t.distanceMap[o][r];n<100&&(e[n]++,i++)}));let s=Math.round(i/4),o=Math.round(3*i/4);for(let t=0;t<100;t++){if(s<=e[t]){s=t;break}s-=e[t]}for(let t=0;t<100;t++){if(o<=e[t]){o=t;break}o-=e[t]}t.distance25=s,t.distance75=o}pickComponents(){const t=[mt.BF_ALTERNATIVE,mt.BF_ALTERNATIVE_2],i=new Array(this.steps.length).fill(!0);for(let e=0;e<=1;e++){let s=0;for(let o=0;o<i.length;o++)this.steps[o].flags&t[e]&&(i[o]=!1,s++);if(s>0){let o=n.random.range(1,s);for(let s=0;s<i.length;s++)if(this.steps[s].flags&t[e]){if(1==o){i[s]=!0;break}o--}}}return this.steps.filter(((t,e)=>i[e]))}clearInteriorFlag(t){const i=t.site;for(let e=0;e<i.width;e++)for(let s=0;s<i.height;s++)i.getMachine(e,s)!=t.machineNumber||i.hasCellFlag(e,s,l.flags.Cell.IS_WIRED|l.flags.Cell.IS_CIRCUIT_BREAKER)||i.setMachine(e,s,0)}}const It={};function pt(t,i){const e=Object.values(It).filter((e=>e.qualifies(t,i)));return n.random.item(e)}const Et=n.flag.fl;var mt;!function(t){t[t.BF_OUTSOURCE_ITEM_TO_MACHINE=Et(1)]="BF_OUTSOURCE_ITEM_TO_MACHINE",t[t.BF_BUILD_VESTIBULE=Et(2)]="BF_BUILD_VESTIBULE",t[t.BF_ADOPT_ITEM=Et(3)]="BF_ADOPT_ITEM",t[t.BF_BUILD_AT_ORIGIN=Et(4)]="BF_BUILD_AT_ORIGIN",t[t.BF_PERMIT_BLOCKING=Et(5)]="BF_PERMIT_BLOCKING",t[t.BF_TREAT_AS_BLOCKING=Et(6)]="BF_TREAT_AS_BLOCKING",t[t.BF_NEAR_ORIGIN=Et(7)]="BF_NEAR_ORIGIN",t[t.BF_FAR_FROM_ORIGIN=Et(8)]="BF_FAR_FROM_ORIGIN",t[t.BF_IN_VIEW_OF_ORIGIN=Et(9)]="BF_IN_VIEW_OF_ORIGIN",t[t.BF_IN_PASSABLE_VIEW_OF_ORIGIN=Et(10)]="BF_IN_PASSABLE_VIEW_OF_ORIGIN",t[t.BF_MONSTER_TAKE_ITEM=Et(11)]="BF_MONSTER_TAKE_ITEM",t[t.BF_MONSTER_SLEEPING=Et(12)]="BF_MONSTER_SLEEPING",t[t.BF_MONSTER_FLEEING=Et(13)]="BF_MONSTER_FLEEING",t[t.BF_MONSTERS_DORMANT=Et(14)]="BF_MONSTERS_DORMANT",t[t.BF_ITEM_IS_KEY=Et(15)]="BF_ITEM_IS_KEY",t[t.BF_ITEM_IDENTIFIED=Et(16)]="BF_ITEM_IDENTIFIED",t[t.BF_ITEM_PLAYER_AVOIDS=Et(17)]="BF_ITEM_PLAYER_AVOIDS",t[t.BF_EVERYWHERE=Et(18)]="BF_EVERYWHERE",t[t.BF_ALTERNATIVE=Et(19)]="BF_ALTERNATIVE",t[t.BF_ALTERNATIVE_2=Et(20)]="BF_ALTERNATIVE_2",t[t.BF_BUILD_IN_WALLS=Et(21)]="BF_BUILD_IN_WALLS",t[t.BF_BUILD_ANYWHERE_ON_LEVEL=Et(22)]="BF_BUILD_ANYWHERE_ON_LEVEL",t[t.BF_REPEAT_UNTIL_NO_PROGRESS=Et(23)]="BF_REPEAT_UNTIL_NO_PROGRESS",t[t.BF_IMPREGNABLE=Et(24)]="BF_IMPREGNABLE",t[t.BF_NOT_IN_HALLWAY=Et(27)]="BF_NOT_IN_HALLWAY",t[t.BF_NOT_ON_LEVEL_PERIMETER=Et(28)]="BF_NOT_ON_LEVEL_PERIMETER",t[t.BF_SKELETON_KEY=Et(29)]="BF_SKELETON_KEY",t[t.BF_KEY_DISPOSABLE=Et(30)]="BF_KEY_DISPOSABLE"}(mt||(mt={}));class Tt{constructor(t={}){var i;if(this.tile=-1,this.flags=0,this.pad=0,this.item=null,this.horde=null,this.effect=null,this.chance=0,this.id="n/a",this.tile=null!==(i=t.tile)&&void 0!==i?i:-1,t.flags&&(this.flags=n.flag.from(mt,t.flags)),t.pad&&(this.pad=t.pad),this.count=n.range.make(t.count||1),this.item=t.item||null,this.horde=t.horde||null,t.effect&&(this.effect=l.effect.from(t.effect)),this.item&&this.flags&mt.BF_ADOPT_ITEM)throw new Error("Cannot have blueprint step with item and BF_ADOPT_ITEM.")}get repeatUntilNoProgress(){return!!(this.flags&mt.BF_REPEAT_UNTIL_NO_PROGRESS)}cellIsCandidate(t,i,e,s,o){const r=t.site;if(this.flags&mt.BF_NOT_IN_HALLWAY&&n.utils.arcCount(e,s,((t,i)=>r.hasXY(t,i)&&r.isPassable(t,i)))>1)return!1;if(this.flags&mt.BF_NOT_ON_LEVEL_PERIMETER&&(0==e||e==r.width-1||0==s||s==r.height-1))return!1;if(this.flags&mt.BF_BUILD_AT_ORIGIN)return e==t.originX&&s==t.originY;if(i.isRoom&&e==t.originX&&s==t.originY)return!1;if(t.occupied[e][s])return!1;if(this.flags&(mt.BF_IN_VIEW_OF_ORIGIN|mt.BF_IN_PASSABLE_VIEW_OF_ORIGIN)&&!t.viewMap[e][s])return!1;let h=1e4;if(r.isWall(e,s)?n.utils.eachNeighbor(e,s,((i,e)=>{t.distanceMap.hasXY(i,e)&&!r.blocksPathing(i,e)&&h>t.distanceMap[i][e]+1&&(h=t.distanceMap[i][e]+1)}),!0):h=t.distanceMap[e][s],h>o[1]||h<o[0])return!1;if(this.flags&mt.BF_BUILD_IN_WALLS){const i=r.getMachine(e,s);if(!t.interior[e][s]&&(!i||i==t.machineNumber)&&r.isWall(e,s)){let i=!1;return n.utils.eachNeighbor(e,s,((e,s)=>{r.hasXY(e,s)&&(t.interior[e][s]&&(e!=t.originX||s!=t.originY)||this.flags&mt.BF_BUILD_ANYWHERE_ON_LEVEL&&!r.blocksPathing(e,s)&&!r.getMachine(e,s))&&(i=!0)})),i}return!1}return!r.isWall(e,s)&&(this.flags&mt.BF_BUILD_ANYWHERE_ON_LEVEL?!(this.item&&r.blocksItems(e,s)||r.hasCellFlag(e,s,l.flags.Cell.IS_CHOKEPOINT|l.flags.Cell.IS_IN_LOOP|l.flags.Cell.IS_IN_MACHINE)):!!t.interior[e][s])}makePersonalSpace(t,i,e,s){const o=this.pad;let r=0;for(let n=i-o+1;n<=i+o-1;n++)for(let i=e-o+1;i<=e+o-1;i++)t.site.hasXY(n,i)&&(s[n][i]&&(s[n][i]=0,++r),t.occupied[n][i]=1);return r}get generateEverywhere(){return!!(this.flags&mt.BF_EVERYWHERE&~mt.BF_BUILD_AT_ORIGIN)}get buildAtOrigin(){return!!(this.flags&mt.BF_BUILD_AT_ORIGIN)}distanceBound(t){const i=[0,1e4];return this.flags&mt.BF_NEAR_ORIGIN&&(i[1]=t.distance25),this.flags&mt.BF_FAR_FROM_ORIGIN&&(i[0]=t.distance75),i}updateViewMap(t){if(this.flags&(mt.BF_IN_VIEW_OF_ORIGIN|mt.BF_IN_PASSABLE_VIEW_OF_ORIGIN)){const i=t.site;if(this.flags&mt.BF_IN_PASSABLE_VIEW_OF_ORIGIN){new n.fov.FOV({isBlocked:(t,e)=>i.blocksPathing(t,e),hasXY:(t,e)=>i.hasXY(t,e)}).calculate(t.originX,t.originY,50,((i,e)=>{t.viewMap[i][e]=1}))}else{new n.fov.FOV({isBlocked:(t,e)=>i.blocksPathing(t,e)||i.blocksVision(t,e),hasXY:(t,e)=>i.hasXY(t,e)}).calculate(t.originX,t.originY,50,((i,e)=>{t.viewMap[i][e]=1}))}t.viewMap[t.originX][t.originY]=1}}markCandidates(t,i,e,s){let o=0;return t.update(((t,r,n)=>this.cellIsCandidate(i,e,r,n,s)?(o++,1):0)),o}build(t,i){let e=0,s=0;const o=t.site,r=n.grid.alloc(o.width,o.height),h=this.distanceBound(t);this.updateViewMap(t);let a=this.markCandidates(r,t,i,h);if(this.generateEverywhere||(e=this.count.value()),!a||a<this.count.lo)return console.warn("Only %s qualifying tiles - want at least %s.",a,this.count.lo),!1;let c=0,g=0,u=!0;do{if(u=!0,this.buildAtOrigin?(c=t.originX,g=t.originY):[c,g]=n.random.matchingLoc(r.width,r.height,((t,i)=>r[t][i]>0)),r[c][g]=0,a--,this.effect&&(u=o.fireEffect(this.effect,c,g)),u&&-1!==this.tile){const t=l.tile.get(this.tile);if(!(this.flags&mt.BF_PERMIT_BLOCKING)&&(t.blocksMove()||this.flags&mt.BF_TREAT_AS_BLOCKING)){const t=n.grid.alloc(o.width,o.height);t[c][g]=1,u=!S(o,t,{machine:o.machineCount}),n.grid.free(t)}u&&o.setTile(c,g,t)}if(u&&(a-=this.makePersonalSpace(t,c,g,r),s++),u&&this.item){const i=o.makeRandomItem(this.item);i||(u=!1),this.flags&mt.BF_ITEM_IS_KEY&&(i.key=l.entity.makeKeyInfo(c,g,!!(this.flags&mt.BF_KEY_DISPOSABLE))),u=this.flags&mt.BF_OUTSOURCE_ITEM_TO_MACHINE?t.buildRandom(ft.BP_ADOPT_ITEM,-1,-1,i):o.addItem(c,g,i)}else if(u&&this.flags&mt.BF_ADOPT_ITEM){if(!t.adoptedItem)throw new Error("Failed to build blueprint because there is no adopted item.");u=o.addItem(c,g,t.adoptedItem),u&&(t.adoptedItem=null)}u&&(i.flags&ft.BP_NO_INTERIOR_FLAG||o.setMachine(c,g,t.machineNumber,i.isRoom),this.flags&mt.BF_IMPREGNABLE&&o.setCellFlag(c,g,l.flags.Cell.IMPREGNABLE))}while(a>0&&(this.generateEverywhere||s<e||this.flags&mt.BF_REPEAT_UNTIL_NO_PROGRESS));return u=s>0,this.flags&mt.BF_BUILD_VESTIBULE&&(u=t.buildRandom(ft.BP_VESTIBULE,t.originX,t.originY),!u)?(console.log(`Depth ${t.depth}: Failed to place blueprint ${i.id} because it requires a vestibule and we couldn't place one.`),!1):(n.grid.free(r),u)}}var Rt={__proto__:null,get StepFlags(){return mt},BuildStep:Tt,Builder:class{constructor(t,i){this.map=t,this.depth=i,this.spawnedItems=[],this.spawnedHordes=[],this.originX=-1,this.originY=-1,this.distance25=-1,this.distance75=-1,this.machineNumber=0,this.adoptedItem=null,this.site=new B(t),this.interior=n.grid.alloc(t.width,t.height),this.occupied=n.grid.alloc(t.width,t.height),this.viewMap=n.grid.alloc(t.width,t.height),this.distanceMap=n.grid.alloc(t.width,t.height)}free(){n.grid.free(this.interior),n.grid.free(this.occupied),n.grid.free(this.viewMap),n.grid.free(this.distanceMap)}buildRandom(t=ft.BP_ROOM,i=-1,e=-1,s=null){let o=10;for(;o--;){const o=pt(t,this.depth);if(o&&this.build(o,i,e,s))return!0}return console.log("Failed to find blueprint matching flags: "+n.flag.toString(ft,t)),!1}build(t,i=-1,e=-1,s=null){let o=10;if(this.site.analyze(),i>=0&&e>=0)return this._build(t,i,e,s);for(;o--;){const i=t.pickLocation(this.site);if(i&&this._build(t,i[0],i[1],s))return this.adoptedItem=null,!0}return console.log("Failed to build blueprint."),!1}_build(t,i,e,s=null){if(this.interior.fill(0),this.occupied.fill(0),this.viewMap.fill(0),this.distanceMap.fill(0),this.originX=i,this.originY=e,this.adoptedItem=s,!t.computeInterior(this))return this.adoptedItem=null,!1;const o=this.site.backup();this.machineNumber=this.site.nextMachineId(),t.prepareInteriorWithMachineFlags(this),t.calcDistances(this);const r=t.pickComponents();for(let i=0;i<r.length;i++){if(!r[i].build(this,t))return console.log("Failed to place blueprint because of step failure."),this.site.restore(o),this.adoptedItem=null,!1}return t.noInteriorFlag&&t.clearInteriorFlag(this),this.adoptedItem=null,!0}},get Flags(){return ft},Blueprint:_t,blueprints:It,install:function(t,i){return i instanceof _t||(i=new _t(i)),It[t]=i,i.id=t,i},random:pt};t.Dungeon=class{constructor(t={}){this.config={levels:1,width:80,height:34,rooms:{count:20,digger:"DEFAULT"},halls:{},loops:{},lakes:{},bridges:{},stairs:{},boundary:!0},this.seeds=[],this.stairLocs=[],n.utils.setOptions(this.config,t),this.config.seed&&n.random.seed(this.config.seed),this.initSeeds(),this.initStairLocs()}get levels(){return this.config.levels}initSeeds(){for(let t=0;t<this.config.levels;++t)this.seeds[t]=n.random.number(2**32)}initStairLocs(){let t=this.config.startLoc||[Math.floor(this.config.width/2),this.config.height-2];const i=this.config.stairDistance||Math.floor(Math.max(this.config.width/2,this.config.height/2));for(let e=0;e<this.config.levels;++e){const e=n.random.matchingLoc(this.config.width,this.config.height,((e,s)=>n.utils.distanceBetween(t[0],t[1],e,s)>i));this.stairLocs.push([[t[0],t[1]],[e[0],e[1]]]),t=e}}getLevel(t,i){if(t<0||t>this.config.levels)throw new Error("Invalid level id: "+t);n.random.seed(this.seeds[t]);const[e,s]=this.stairLocs[t],o=Object.assign({},this.config.stairs);this.config.goesUp?(o.down=e,o.up=s,0==t&&this.config.startTile&&(o.downTile=this.config.startTile),t==this.config.levels-1&&this.config.endTile&&(o.upTile=this.config.endTile)):(o.down=s,o.up=e,0==t&&this.config.startTile&&(o.upTile=this.config.startTile),t==this.config.levels-1&&this.config.endTile&&(o.downTile=this.config.endTile));const r=Object.assign({},this.config.rooms);0===t&&r.entrance&&(r.first=r.entrance);const l={loops:this.config.loops,lakes:this.config.lakes,bridges:this.config.bridges,rooms:r,stairs:o,boundary:this.config.boundary,width:this.config.width,height:this.config.height};return this.makeLevel(t,l,i)}makeLevel(t,i,e){const s=new ut(i),o=s.create(this.config.width,this.config.height,e);return n.utils.equalsXY(s.endLoc,i.endLoc)&&n.utils.equalsXY(s.startLoc,i.startLoc)||(this.stairLocs[t]=[s.startLoc,s.endLoc]),o}},t.Hall=D,t.Level=ut,t.Room=P,t.blueprint=Rt,t.bridge=lt,t.hall=st,t.lake=rt,t.loop=gt,t.room=K,t.site=b,t.stairs=at,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=gw-dig.min.js.map
