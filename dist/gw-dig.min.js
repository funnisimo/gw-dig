!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("gw-utils")):"function"==typeof define&&define.amd?define(["exports","gw-utils"],i):i((t="undefined"!=typeof globalThis?globalThis:t||self).GWDig={},t.GW)}(this,(function(t,i){"use strict";function e(t){if(t&&t.__esModule)return t;var i=Object.create(null);return t&&Object.keys(t).forEach((function(e){if("default"!==e){var s=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(i,e,s.get?s:{enumerable:!0,get:function(){return t[e]}})}})),i.default=t,Object.freeze(i)}var s,r,o=e(i);const n=o.tile.get("NULL").index,l=o.tile.get("FLOOR").index,h=o.tile.get("DOOR").index,a=null!==(r=null===(s=o.tile.get("DOOR_SECRET"))||void 0===s?void 0:s.index)&&void 0!==r?r:-1,c=o.tile.get("WALL").index,g=o.tile.get("LAKE").index,u=o.tile.get("SHALLOW").index,f=o.tile.get("BRIDGE").index,d=o.tile.get("UP_STAIRS").index,_=o.tile.get("DOWN_STAIRS").index,p=o.tile.get("IMPREGNABLE").index,I={[n]:"NULL",[l]:"FLOOR",[h]:"DOOR",[c]:"WALL",[p]:"IMPREGNABLE",[g]:"LAKE",[u]:"SHALLOW",[f]:"BRIDGE",[d]:"UP_STAIRS",[_]:"DOWN_STAIRS"};class m{constructor(t,i){this.tiles=o.grid.alloc(t,i)}free(){o.grid.free(this.tiles)}clear(){this.tiles.fill(0)}get width(){return this.tiles.width}get height(){return this.tiles.height}hasXY(t,i){return this.tiles.hasXY(t,i)}isBoundaryXY(t,i){return this.tiles.isBoundaryXY(t,i)}isPassable(t,i){return this.isFloor(t,i)||this.isDoor(t,i)||this.isBridge(t,i)||this.isStairs(t,i)||this.isShallow(t,i)}isNothing(t,i){return this.tiles.get(t,i)===n}isDiggable(t,i){return this.tiles.get(t,i)===n}isFloor(t,i){return this.tiles.get(t,i)==l}isDoor(t,i){return this.tiles.get(t,i)===h}isSecretDoor(t,i){return this.tiles.get(t,i)===a}isBridge(t,i){return this.tiles.get(t,i)===f}isWall(t,i){const e=this.tiles.get(t,i);return e===c||e===p}blocksMove(t,i){return this.isNothing(t,i)||this.isWall(t,i)||this.isDeep(t,i)}blocksDiagonal(t,i){return this.isNothing(t,i)||this.isWall(t,i)}blocksPathing(t,i){return this.isNothing(t,i)||this.isWall(t,i)||this.isDeep(t,i)||this.isStairs(t,i)}blocksVision(t,i){return this.isNothing(t,i)||this.isWall(t,i)}blocksItems(t,i){return this.blocksPathing(t,i)||this.blocksPathing(t,i)}blocksEffects(t,i){return this.isWall(t,i)}isStairs(t,i){const e=this.tiles.get(t,i);return e===d||e===_}isDeep(t,i){return this.tiles.get(t,i)===g}isShallow(t,i){return this.tiles.get(t,i)===u}isAnyLiquid(t,i){return this.isDeep(t,i)||this.isShallow(t,i)}isSet(t,i){return(this.tiles.get(t,i)||0)>0}getTileIndex(t,i){return this.tiles.get(t,i)||0}setTile(t,i,e){if(e instanceof o.tile.Tile&&(e=e.index),"string"==typeof e){const t=o.tile.tiles[e];if(!t)throw new Error("Failed to find tie: "+e);e=t.index}return!!this.tiles.hasXY(t,i)&&(this.tiles[t][i]=e,!0)}hasTile(t,i,e){if(e instanceof o.tile.Tile&&(e=e.index),"string"==typeof e){const t=o.tile.tiles[e];if(!t)throw new Error("Failed to find tie: "+e);e=t.index}return this.tiles.hasXY(t,i)&&this.tiles[t][i]==e}tileBlocksMove(t){return t===c||t===g||t===p||t===n}}const E=o.map.flags.Cell;class R{constructor(t){this.machineCount=0,this.map=t,this.machineId=new o.grid.NumGrid(t.width,t.height)}get width(){return this.map.width}get height(){return this.map.height}hasXY(t,i){return this.map.hasXY(t,i)}isBoundaryXY(t,i){return this.map.isBoundaryXY(t,i)}hasCellFlag(t,i,e){return this.map.cellInfo(t,i).hasCellFlag(e)}setCellFlag(t,i,e){this.map.cell(t,i).setCellFlag(e)}clearCellFlag(t,i,e){this.map.cell(t,i).clearCellFlag(e)}hasTile(t,i,e){return this.map.cellInfo(t,i).hasTile(e)}setTile(t,i,e,s){return this.map.setTile(t,i,e,s)}getTileIndex(t,i){if(!this.hasXY(t,i))return 0;return this.map.cell(t,i).highestPriorityTile().index}clear(){this.map.cells.forEach((t=>t.clear()))}hasItem(t,i){return this.map.cellInfo(t,i).hasItem()}hasActor(t,i){return this.map.hasActor(t,i)}blocksMove(t,i){return this.map.cellInfo(t,i).blocksMove()}blocksVision(t,i){return this.map.cellInfo(t,i).blocksVision()}blocksDiagonal(t,i){return this.map.cellInfo(t,i).hasObjectFlag(o.gameObject.flags.GameObject.L_BLOCKS_DIAGONAL)}blocksPathing(t,i){const e=this.map.cellInfo(t,i);return e.hasObjectFlag(o.gameObject.flags.GameObject.L_BLOCKS_MOVE)||e.hasTileFlag(o.tile.flags.Tile.T_PATHING_BLOCKER)}blocksItems(t,i){return this.map.cellInfo(t,i).hasObjectFlag(o.gameObject.flags.GameObject.L_BLOCKS_ITEMS)}blocksEffects(t,i){return this.map.cellInfo(t,i).hasObjectFlag(o.gameObject.flags.GameObject.L_BLOCKS_EFFECTS)}isWall(t,i){return this.map.cellInfo(t,i).isWall()}isStairs(t,i){return this.map.cellInfo(t,i).isStairs()}isSet(t,i){return this.hasXY(t,i)&&!this.map.cell(t,i).isEmpty()}isDiggable(t,i){if(!this.hasXY(t,i))return!1;const e=this.map.cell(t,i);return!!e.isEmpty()||!!e.isWall()}isNothing(t,i){return this.hasXY(t,i)&&this.map.cell(t,i).isEmpty()}isFloor(t,i){return this.isPassable(t,i)}isBridge(t,i){return this.map.cellInfo(t,i).hasTileFlag(o.tile.flags.Tile.T_BRIDGE)}isDoor(t,i){return this.map.cellInfo(t,i).hasTileFlag(o.tile.flags.Tile.T_IS_DOOR)}isSecretDoor(t,i){return this.map.cellInfo(t,i).hasObjectFlag(o.gameObject.flags.GameObject.L_SECRETLY_PASSABLE)}isDeep(t,i){return this.map.cellInfo(t,i).hasTileFlag(o.tile.flags.Tile.T_DEEP_WATER)}isShallow(t,i){if(!this.hasXY(t,i))return!1;const e=this.map.cell(t,i);return!!e.depthTile(o.gameObject.flags.Depth.LIQUID)&&!e.hasTileFlag(o.tile.flags.Tile.T_IS_DEEP_LIQUID)}isAnyLiquid(t,i){if(!this.hasXY(t,i))return!1;const e=this.map.cell(t,i);return e.hasDepthTile(o.gameObject.flags.Depth.LIQUID)||e.hasTileFlag(o.tile.flags.Tile.T_IS_DEEP_LIQUID)}isOccupied(t,i){return this.hasItem(t,i)||this.hasActor(t,i)}isPassable(t,i){return!this.map.cellInfo(t,i).blocksMove()}tileBlocksMove(t){return o.tile.get(t).blocksMove()}backup(){return this.map.clone()}restore(t){this.map=t}free(){}getChokeCount(t,i){return this.map.cell(t,i).chokeCount}setChokeCount(t,i,e){this.map.cell(t,i).chokeCount=e}analyze(){o.map.analyze(this.map)}fireEffect(t,i,e){return o.effect.fireSync(t,this.map,i,e)}nextMachineId(){return++this.machineCount}getMachine(t,i){return this.machineId[t][i]}setMachine(t,i,e,s=!0){this.machineId[t][i]=e,0==e?this.map.clearCellFlag(t,i,E.IS_IN_MACHINE):this.map.setCellFlag(t,i,s?E.IS_IN_ROOM_MACHINE:E.IS_IN_AREA_MACHINE)}}const O=o.utils.DIRS;function T(t,i,e){let s,r,n,l,h,a;for(r=o.utils.NO_DIRECTION,s=0;s<4;s++)if(n=i+O[s][0],l=e+O[s][1],h=i-O[s][0],a=e-O[s][1],t.hasXY(h,a)&&t.hasXY(n,l)&&t.isFloor(h,a)){if(r!=o.utils.NO_DIRECTION)return o.utils.NO_DIRECTION;r=s}return r}function B(t){let i,e,s,r,n,l,h;const a=[[],[],[],[]],c=t.height,g=t.width;for(i=0;i<g;i++)for(e=0;e<c;e++)if(t.isDiggable(i,e)&&(l=T(t,i,e),l!=o.utils.NO_DIRECTION)){for(r=i+o.utils.DIRS[l][0],n=e+o.utils.DIRS[l][1],h=!1,s=0;s<10&&t.hasXY(r,n)&&!h;s++)t.isSet(r,n)&&(h=!0),r+=o.utils.DIRS[l][0],n+=o.utils.DIRS[l][1];h||a[l].push([i,e])}let u=[];for(l=0;l<4;l++){const t=o.random.item(a[l])||[-1,-1];u[l]=[t[0],t[1]]}return u}function w(t,i,e=0,s=0){o.utils.forRect(t.width,t.height,((r,o)=>{const n=r-e,l=o-s,h=i.getTileIndex(n,l);h&&t.setTile(r,o,h)}))}function L(t,i){i.update(((i,e,s)=>t.isPassable(e,s)?1:o.path.OBSTRUCTION))}function N(t,i,e=0,s=0){const r=o.grid.alloc(t.width,t.height);let n=!1;o.utils.forRect(t.width,t.height,((o,l)=>{const h=o+e,a=l+s;i.get(h,a)?t.isStairs(o,l)&&(n=!0):t.isPassable(o,l)&&(r[o][l]=1)}));let l=!0;for(let t=0;t<r.width&&!n;++t)for(let i=0;i<r.height&&!n;++i)1==r[t][i]&&(l?(r.floodFill(t,i,1,2),l=!1):n=!0);return o.grid.free(r),n}function S(t,i,e=0,s=0){const r=o.grid.alloc(t.width,t.height);let n=0;if(o.utils.forRect(t.width,t.height,((o,l)=>{const h=o+e,a=l+s;i.get(h,a)?t.isStairs(o,l)&&(n=t.width*t.height):t.isPassable(o,l)&&(r[o][l]=1)})),n)return n;let l=!0,h=2,a=t.width*t.height;for(let t=0;t<r.width;++t)for(let i=0;i<r.height;++i)if(1==r[t][i]){const e=r.floodFill(t,i,1,h++);a=Math.min(a,e),l?l=!1:n=a}return o.grid.free(r),n}function M(t,i,e,s,r){const n=o.grid.alloc(t.width,t.height);L(t,n),o.path.calculateDistances(i,e,s,n,!1,r+1),o.grid.free(n)}var b=Object.freeze({__proto__:null,NOTHING:n,FLOOR:l,DOOR:h,SECRET_DOOR:a,WALL:c,DEEP:g,SHALLOW:u,BRIDGE:f,UP_STAIRS:d,DOWN_STAIRS:_,IMPREGNABLE:p,TILEMAP:I,GridSite:m,MapSite:R,directionOfDoorSite:T,chooseRandomDoorSites:B,copySite:w,fillCostGrid:L,siteDisruptedBy:N,siteDisruptedSize:S,computeDistanceMap:M});class A{constructor(t,i,e,s=1){this.width=1,this.doors=[],this.x=t[0],this.y=t[1];const r=o.utils.DIRS[i];this.length=e,this.width=s,i===o.utils.UP||i===o.utils.DOWN?(this.x2=this.x+(s-1),this.y2=this.y+(e-1)*r[1]):(this.x2=this.x+(e-1)*r[0],this.y2=this.y+(s-1)),this.dir=i}translate(t,i){this.x+=t,this.y+=i,this.x2+=t,this.y2+=i,this.doors&&this.doors.forEach((e=>{e&&(e[0]<0||e[1]<0||(e[0]+=t,e[1]+=i))}))}}class F extends o.utils.Bounds{constructor(t,i,e,s){super(t,i,e,s),this.doors=[],this.hall=null}get cx(){return this.x+Math.floor(this.width/2)}get cy(){return this.y+Math.floor(this.height/2)}translate(t,i){this.x+=t,this.y+=i,this.doors&&this.doors.forEach((e=>{e&&(e[0]<0||e[1]<0||(e[0]+=t,e[1]+=i))})),this.hall&&this.hall.translate(t,i)}}function D(t,i={}){return t=t||{},i=i||{},Object.entries(i).forEach((([i,e])=>{let s=t[i];if("tile"===i)return void(void 0===s&&(t[i]=e));if(!0===e){if(!s)throw new Error("Missing required config for room digger: "+i)}else s=("number"==typeof e||Array.isArray(e),s||e);const r=o.range.make(s);t[i]=r})),t}class P{constructor(t,i={}){this.options={},this.doors=[],this._setOptions(t,i)}_setOptions(t,i={}){this.options=D(t,i)}create(t){const i=this.carve(t);return i&&(i.doors&&0!=i.doors.length&&!i.doors.every((t=>!t||-1==t[0]))||(i.doors=B(t))),i}}var C={};class k extends P{constructor(t={}){super(t,{choices:["DEFAULT"]})}_setOptions(t,i={}){const e=t.choices||i.choices;if(Array.isArray(e))this.randomRoom=o.random.item.bind(o.random,e);else{if("object"!=typeof e)throw new Error("Expected choices to be either array of room ids or weighted map - ex: { ROOM_ID: weight }");this.randomRoom=o.random.weighted.bind(o.random,e)}}carve(t){let i=this.randomRoom();const e=C[i];return e||o.utils.ERROR("Missing room digger choice: "+i),e.create(t)}}class v extends P{constructor(t={}){super(t,{width:12,height:8})}carve(t){const i=this.options.width.value(),e=this.options.height.value(),s=this.options.tile||l,r=o.grid.alloc(t.width,t.height,0),n=Math.floor(.5*i),h=i,a=Math.floor(.5*e),c=e,g=new o.blob.Blob({rounds:5,minWidth:n,minHeight:a,maxWidth:h,maxHeight:c,percentSeeded:55,birthParameters:"ffffftttt",survivalParameters:"ffffttttt"}).carve(r.width,r.height,((t,i)=>r[t][i]=1)),u=Math.floor((t.width-g.width)/2),f=u-g.x,d=Math.floor((t.height-g.height)/2),_=d-g.y;return r.forEach(((i,e,r)=>{i&&t.setTile(e+f,r+_,s)})),o.grid.free(r),new F(u,d,g.width,g.height)}}class y extends P{constructor(t={}){super(t,{width:20,height:10})}carve(t){const i=this.options.width.value(),e=this.options.height.value(),s=this.options.tile||l,r=Math.floor(.4*i),n=e,h=i,a=Math.floor(.5*e),c=Math.floor(t.width/2-r/2-1),g=t.height-n-2,u=Math.floor(t.width/2-h/2-1),f=t.height-a-2;o.utils.forRect(c,g,r,n,((i,e)=>t.setTile(i,e,s))),o.utils.forRect(u,f,h,a,((i,e)=>t.setTile(i,e,s)));const d=new F(Math.min(c,u),Math.min(g,f),Math.max(r,h),Math.max(n,a));return d.doors[o.utils.DOWN]=[Math.floor(t.width/2),t.height-2],d}}class G extends P{constructor(t={}){super(t,{width:12,height:20})}carve(t){const i=this.options.width.value(),e=this.options.height.value(),s=this.options.tile||l,r=i,n=Math.max(3,Math.floor(i*o.random.range(25,75)/100)),h=Math.max(3,Math.floor(e*o.random.range(25,75)/100)),a=e,c=Math.floor((t.width-r)/2),g=c+o.random.range(2,Math.max(2,r-n-2)),u=Math.floor((t.height-a)/2),f=u+o.random.range(2,Math.max(2,a-h-2));return o.utils.forRect(c,f,r,h,((i,e)=>t.setTile(i,e,s))),o.utils.forRect(g,u,n,a,((i,e)=>t.setTile(i,e,s))),new F(c,u,Math.max(r,n),Math.max(h,a))}}class x extends P{constructor(t={}){super(t,{width:7,height:7})}carve(t){const i=this.options.width.value(),e=this.options.height.value(),s=this.options.tile||l;let r=Math.max(3,Math.floor(i*o.random.range(25,50)/100)),n=Math.max(3,Math.floor(e*o.random.range(25,50)/100));const h=Math.floor((t.width-i)/2),a=Math.floor((t.height-n)/2);o.utils.forRect(h,a,i,n,((i,e)=>t.setTile(i,e,s)));const c=Math.floor((t.width-r)/2),g=Math.floor((t.height-e)/2);return o.utils.forRect(c,g,r,e,((i,e)=>t.setTile(i,e,s))),new F(Math.min(h,c),Math.min(a,g),Math.max(i,r),Math.max(e,n))}}class Y extends P{constructor(t={}){super(t,{width:[3,6],height:[3,6]})}carve(t){const i=this.options.width.value(),e=this.options.height.value(),s=this.options.tile||l,r=Math.floor((t.width-i)/2),n=Math.floor((t.height-e)/2);return o.utils.forRect(r,n,i,e,((i,e)=>t.setTile(i,e,s))),new F(r,n,i,e)}}class W extends P{constructor(t={}){super(t,{radius:[3,4]})}carve(t){const i=this.options.radius.value(),e=this.options.tile||l,s=Math.floor(t.width/2),r=Math.floor(t.height/2);return i>1&&o.utils.forCircle(s,r,i,((i,s)=>t.setTile(i,s,e))),new F(s-i,r-i,2*i+1,2*i+1)}}class X extends P{constructor(t={}){super(t,{radius:[5,10],ringMinWidth:3,holeMinSize:3,holeChance:50})}carve(t){const i=this.options.radius.value(),e=this.options.ringMinWidth.value(),s=this.options.holeMinSize.value(),r=this.options.tile||l,n=Math.floor(t.width/2),h=Math.floor(t.height/2);return o.utils.forCircle(n,h,i,((i,e)=>t.setTile(i,e,r))),i>e+s&&o.random.chance(this.options.holeChance.value())&&o.utils.forCircle(n,h,o.random.range(s,i-s),((i,e)=>t.setTile(i,e,0))),new F(n-i,h-i,2*i+1,2*i+1)}}class U extends P{constructor(t={}){super(t,{count:[2,12],width:[5,20],height:[5,20]})}carve(t){let i,e,s,r=this.options.count.value();const n=this.options.width.value(),h=this.options.height.value(),a=this.options.tile||l,c=Math.floor(t.width/2)-Math.floor(n/2),g=Math.floor(t.width/2)+Math.floor(n/2),u=Math.floor(t.height/2)-Math.floor(h/2),f=Math.floor(t.height/2)+Math.floor(h/2);let d=Math.floor(t.width/2),_=d,p=Math.floor(t.height/2),I=p;for(o.utils.forCircle(d,p,2,((i,e)=>t.setTile(i,e,a))),d-=2,_+=2,p-=2,I+=2,i=0;i<r;)if(e=o.random.range(c,g),s=o.random.range(u,f),t.isSet(e,s)){if(e-2<c)continue;if(e+2>g)continue;if(s-2<u)continue;if(s+2>f)continue;d=Math.min(e-2,d),_=Math.max(e+2,_),p=Math.min(s-2,p),I=Math.max(s+2,I),o.utils.forCircle(e,s,2,((i,e)=>t.setTile(i,e,a))),i++}return new F(d,p,_-d+1,I-p+1)}}function V(t,i){return C[t]=i,i}V("DEFAULT",new Y);var H=Object.freeze({__proto__:null,checkConfig:D,RoomDigger:P,rooms:C,ChoiceRoom:k,choiceRoom:function(t,i){return new k(t).create(i)},Cavern:v,cavern:function(t,i){return new v(t).create(i)},BrogueEntrance:y,brogueEntrance:function(t,i){return new y(t).create(i)},Cross:G,cross:function(t,i){return new G(t).create(i)},SymmetricalCross:x,symmetricalCross:function(t,i){return new x(t).create(i)},Rectangular:Y,rectangular:function(t,i){return new Y(t).create(i)},Circular:W,circular:function(t,i){return new W(t).create(i)},BrogueDonut:X,brogueDonut:function(t,i){return new X(t).create(i)},ChunkyRoom:U,chunkyRoom:function(t,i){return new U(t).create(i)},install:V});const z=o.utils.DIRS;function j(t,i,e){if(!t.hasXY(i[0],i[1]))return!1;if(!t.isDiggable(i[0],i[1]))return!1;const s=[i[0]-e[0],i[1]-e[1]];return!!t.hasXY(s[0],s[1])&&!!t.isFloor(s[0],s[1])}function q(t,i){return t==o.utils.UP||t==o.utils.DOWN?i[1].value():i[0].value()}function K(t,i,e){let s=o.utils.NO_DIRECTION;if(s==o.utils.NO_DIRECTION){const r=o.random.sequence(4);for(let n=0;n<4;n++){s=r[n];const l=e[(n+1)%2].hi,h=i[s];if(h&&-1!=h[0]&&-1!=h[1]){const i=h[0]+Math.floor(z[s][0]*l),e=h[1]+Math.floor(z[s][1]*l);if(t.hasXY(i,e))break}s=o.utils.NO_DIRECTION}}return s}function Q(t,i,e,s,r){let n,l;const h=o.random.chance(r),a=[];for(let r=0;r<4;r++)n=i+z[r][0],l=e+z[r][1],r!=s&&!h||!t.hasXY(n,l)||t.isSet(n,l)||(a[r]=[n,l]);return a}class Z{constructor(t={}){this.config={width:o.range.make(1),length:[o.range.make("2-15"),o.range.make("2-9")],tile:l,obliqueChance:15,chance:100},this._setOptions(t)}_setOptions(t={}){if(t.width&&(this.config.width=o.range.make(t.width)),t.length&&"number"==typeof t.length){const i=o.range.make(t.length);this.config.length=[i,i]}t.tile&&(this.config.tile=t.tile),t.chance&&(this.config.chance=t.chance)}create(t,i=[]){if(i=i||B(t),!o.random.chance(this.config.chance))return null;const e=K(t,i,this.config.length);if(e===o.utils.NO_DIRECTION)return null;if(!i[e])return null;const s=this.config.width.value(),r=q(e,this.config.length),n=i[e];return 1==s?this.dig(t,e,n,r):this.digWide(t,e,n,r,s)}_digLine(t,i,e,s){let r=i[0],o=i[1];const n=this.config.tile;for(let i=0;i<s;i++)t.setTile(r,o,n),r+=e[0],o+=e[1];return r-=e[0],o-=e[1],[r,o]}dig(t,i,e,s){const r=z[i],[o,n]=this._digLine(t,e,r,s),l=new A(e,i,s);return l.doors=Q(t,o,n,i,this.config.obliqueChance),l}digWide(t,i,e,s,r){const n=o.utils.DIRS[i],l=[e[0]-n[1],e[1]-n[0]],h=[e[0]+n[1],e[1]+n[0]];this._digLine(t,e,n,s);let a=1,c=e[0],g=e[1];a<r&&j(t,l,n)&&(this._digLine(t,l,n,s),c=Math.min(l[0],c),g=Math.min(l[1],g),++a),a<r&&j(t,h,n)&&(this._digLine(t,h,n,s),c=Math.min(h[0],c),g=Math.min(h[1],g),++a);const u=new A([c,g],i,s,r);return u.doors=[],u.doors[i]=[e[0]+s*n[0],e[1]+s*n[1]],u.width=r,u}}function J(t,i,e){return new Z(t).create(i,e)}var $={};function tt(t,i){return $[t]=i,i}tt("DEFAULT",new Z({chance:15}));var it=Object.freeze({__proto__:null,isDoorLoc:j,pickWidth:function(t={}){return o.utils.clamp(function(t){if(!t)return 1;if("number"==typeof t)return t;if(void 0===t.width)return 1;let i=t.width;if("number"==typeof i)return i;i=Array.isArray(i)?o.random.weighted(i)+1:"string"==typeof i?o.range.make(i).value():Number.parseInt(o.random.weighted(i));return i}(t),1,3)},pickLength:q,pickHallDirection:K,pickHallExits:Q,HallDigger:Z,dig:J,halls:$,install:tt});class et{constructor(t={}){this.options={height:15,width:30,minSize:5,tries:20,count:1,canDisrupt:!1,wreathTile:u,wreathChance:50,wreathSize:1,tile:g},Object.assign(this.options,t)}create(t){let i,e,s,r,n,l,h,a,c,f,d,_=0;l=this.options.height||15,h=this.options.width||30,a=this.options.minSize||5,c=this.options.tries||20,f=this.options.count||1,d=this.options.canDisrupt||!1;const p=!!o.random.chance(this.options.wreathChance),I=this.options.wreathTile||u,m=this.options.wreathSize||1,E=this.options.tile||g,R=o.grid.alloc(t.width,t.height,0);let O=0;for(;O<f&&_<f;){const g=Math.round((h-a)*(f-O)/f)+a,u=Math.round((l-a)*(f-O)/f)+a,T=new o.blob.Blob({rounds:5,minWidth:4,minHeight:4,maxWidth:g,maxHeight:u,percentSeeded:55,birthParameters:"ffffftttt",survivalParameters:"ffffttttt"}).carve(R.width,R.height,((t,i)=>R[t][i]=1));let B=!1;for(s=0;s<c&&!B;s++)if(r=o.random.range(1-T.x,R.width-T.width-T.x-2),n=o.random.range(1-T.y,R.height-T.height-T.y-2),d||!this.isDisruptedBy(t,R,-r,-n)){for(B=!0,i=0;i<T.width;i++)for(e=0;e<T.height;e++)if(R[i+T.x][e+T.y]){const s=i+T.x+r,l=e+T.y+n;t.setTile(s,l,E),p&&o.utils.forCircle(s,l,m,((i,e)=>{t.isPassable(i,e)&&t.setTile(i,e,I)}))}break}B?++_:++O}return o.grid.free(R),_}isDisruptedBy(t,i,e=0,s=0){const r=o.grid.alloc(t.width,t.height);let n=!1;o.utils.forRect(t.width,t.height,((o,l)=>{const h=o+e,a=l+s;i.get(h,a)?t.isStairs(o,l)&&(n=!0):t.isPassable(o,l)&&(r[o][l]=1)}));let l=!0;for(let t=0;t<r.width&&!n;++t)for(let i=0;i<r.height&&!n;++i)1==r[t][i]&&(l?(r.floodFill(t,i,1,2),l=!1):n=!0);return o.grid.free(r),n}}var st=Object.freeze({__proto__:null,Lakes:et});class rt{constructor(t={}){this.options={minDistance:20,maxLength:5},Object.assign(this.options,t)}create(t){let i,e,s,r,n,h,a,c=0;const g=this.options.maxLength,u=this.options.minDistance,d=o.grid.alloc(t.width,t.height),_=o.grid.alloc(t.width,t.height),p=[[1,0],[0,1]];_.update(((i,e,s)=>t.isPassable(e,s)?1:o.path.OBSTRUCTION));const I=o.random.sequence(t.width*t.height);for(s=0;s<I.length;s++)if(h=Math.floor(I[s]/t.height),a=I[s]%t.height,t.isPassable(h,a)&&!t.isAnyLiquid(h,a))for(n=0;n<=1;n++){const s=p[n];if(i=h+s[0],e=a+s[1],r=g,t.isAnyLiquid(i,e))for(r=0;r<g&&(i+=s[0],e+=s[1],t.isAnyLiquid(i,e));++r);if(t.isPassable(i,e)&&r<g&&(o.path.calculateDistances(d,i,e,_,!1),d[h][a]>u&&d[h][a]<o.path.NO_PATH)){for(;h!==i||a!==e;)this.isBridgeCandidate(t,h,a,s)?(t.setTile(h,a,f),_[h][a]=1):(t.setTile(h,a,l),_[h][a]=1),h+=s[0],a+=s[1];++c;break}}return o.grid.free(d),o.grid.free(_),c}isBridgeCandidate(t,i,e,s){return!!t.isBridge(i,e)||!!t.isAnyLiquid(i,e)&&(!!t.isAnyLiquid(i+s[1],e+s[0])&&!!t.isAnyLiquid(i-s[1],e-s[0]))}}var ot=Object.freeze({__proto__:null,Bridges:rt});class nt{constructor(t={}){this.options={up:!0,down:!0,minDistance:10,start:!1,upTile:d,downTile:_,wall:p},Object.assign(this.options,t)}create(t){let i=!1!==this.options.up,e=!1!==this.options.down;const s=this.options.minDistance||Math.floor(Math.max(t.width,t.height)/2),r={};let n,l;const h=this.isStairXY.bind(this,t);if(this.options.start&&"string"!=typeof this.options.start){let i=this.options.start;i=!0===i?o.random.matchingLoc(t.width,t.height,h):o.random.matchingLocNear(o.utils.x(i),o.utils.y(i),h),r.start=i}if(Array.isArray(this.options.up)&&Array.isArray(this.options.down)){const t=this.options.up;n=o.random.matchingLocNear(o.utils.x(t),o.utils.y(t),h);const i=this.options.down;l=o.random.matchingLocNear(o.utils.x(i),o.utils.y(i),h)}else if(Array.isArray(this.options.up)&&!Array.isArray(this.options.down)){const i=this.options.up;n=o.random.matchingLocNear(o.utils.x(i),o.utils.y(i),h),e&&(l=o.random.matchingLoc(t.width,t.height,((t,i)=>!(o.utils.distanceBetween(t,i,n[0],n[1])<s)&&h(t,i))))}else if(Array.isArray(this.options.down)&&!Array.isArray(this.options.up)){const e=this.options.down;l=o.random.matchingLocNear(o.utils.x(e),o.utils.y(e),h),i&&(n=o.random.matchingLoc(t.width,t.height,((t,i)=>!(o.utils.distanceBetween(t,i,l[0],l[1])<s)&&h(t,i))))}else i?(n=o.random.matchingLoc(t.width,t.height,h),e&&(l=o.random.matchingLoc(t.width,t.height,((t,i)=>!(o.utils.distanceBetween(t,i,n[0],n[1])<s)&&h(t,i))))):e&&(l=o.random.matchingLoc(t.width,t.height,h));return n&&(r.up=n.slice(),this.setupStairs(t,n[0],n[1],this.options.upTile),"up"===this.options.start&&(r.start=r.up)),void 0!==l&&(r.down=l.slice(),this.setupStairs(t,l[0],l[1],this.options.downTile),"down"===this.options.start&&(r.start=r.down)),n||l?r:null}hasXY(t,i,e){return!(i<0||e<0)&&!(i>=t.width||e>=t.height)}isStairXY(t,i,e){let s=0;if(!this.hasXY(t,i,e)||!t.isDiggable(i,e))return!1;for(let r=0;r<4;++r){const n=o.utils.DIRS[r];if(!this.hasXY(t,i+n[0],e+n[1]))return!1;if(!this.hasXY(t,i-n[0],e-n[1]))return!1;if(t.isFloor(i+n[0],e+n[1])){if(s+=1,!t.isDiggable(i-n[0]+n[1],e-n[1]+n[0]))return!1;if(!t.isDiggable(i-n[0]-n[1],e-n[1]-n[0]))return!1}else if(!t.isDiggable(i+n[0],e+n[1]))return!1}return 1==s}setupStairs(t,i,e,s){const r=o.random.sequence(4);let n=null;for(let s=0;s<r.length;++s){n=o.utils.DIRS[s];const r=i+n[0],l=e+n[1];if(t.isFloor(r,l)&&t.isDiggable(i-n[0],e-n[1]))break;n=null}n||o.utils.ERROR("No stair direction found!"),t.setTile(i,e,s);const l=o.utils.CLOCK_DIRS.findIndex((t=>t[0]==n[0]&&t[1]==n[1])),h=this.options.wall;for(let s=0;s<o.utils.CLOCK_DIRS.length;++s){const r=s?s-1:7,n=(s+1)%8;if(s==l||r==l||n==l)continue;const a=o.utils.CLOCK_DIRS[s];t.setTile(i+a[0],e+a[1],h)}return!0}}var lt=Object.freeze({__proto__:null,Stairs:nt});class ht{constructor(t={}){this.options={minDistance:100,maxLength:1,doorChance:50},Object.assign(this.options,t)}create(t){let i,e,s,r,n,a,c,g,u;const f=Math.min(this.options.minDistance,Math.floor(Math.max(t.width,t.height)/2)),d=this.options.maxLength,_=o.grid.alloc(t.width,t.height),p=o.grid.alloc(t.width,t.height),I=[[1,0],[0,1]];function m(i,e,s){return!!t.hasXY(i,e)&&(!!t.hasXY(i+s[1],e+s[0])&&(!!t.hasXY(i-s[1],e-s[0])&&(!t.isSet(i,e)&&(!t.isSet(i+s[1],e+s[0])&&!t.isSet(i-s[1],e-s[0])))))}function E(i,e,s){return!!t.hasXY(i,e)&&(!!t.hasXY(i+s[1],e+s[0])&&(!!t.hasXY(i-s[1],e-s[0])&&(!!t.isSet(i,e)||(!!t.isSet(i+s[1],e+s[0])||!!t.isSet(i-s[1],e-s[0])))))}L(t,p);let R=0;const O=o.random.sequence(t.width*t.height);for(n=0;n<O.length;n++)if(g=Math.floor(O[n]/t.height),u=O[n]%t.height,!t.isSet(g,u))for(c=0;c<=1;c++){let n=I[c];if(m(g,u,n)){if(a=d,t.hasXY(g+n[0],u+n[1])&&t.isPassable(g+n[0],u+n[1])){if(!t.hasXY(g-n[0],u-n[1])||t.isDoor(g-n[0],u-n[1]))continue}else{if(!t.hasXY(g-n[0],u-n[1])||!t.isPassable(g-n[0],u-n[1]))continue;if(!t.hasXY(g+n[0],u+n[1])||t.isDoor(g+n[0],u+n[1]))continue;n=n.map((t=>-1*t))}for(i=g+n[0],e=u+n[1],s=g,r=u,a=0;a<d&&(s-=n[0],r-=n[1],!E(s,r,n));++a);if(a<d&&(o.path.calculateDistances(_,i,e,p,!1),_[s][r]>f&&_[s][r]<3e4)){for(;s!==i||r!==e;)t.isNothing(s,r)&&(t.setTile(s,r,l),p[s][r]=1),s+=n[0],r+=n[1];const a=o.random.chance(this.options.doorChance)?h:l;t.setTile(g,u,a),++R;break}}}return o.grid.free(_),o.grid.free(p),R}}var at=Object.freeze({__proto__:null,LoopDigger:ht,digLoops:function(t,i={}){return new ht(i).create(t)}});class ct{constructor(t={}){var i,e;this.seed=0,this.rooms={},this.doors={chance:15},this.halls={chance:15},this.loops={},this.lakes={},this.bridges={},this.stairs={},this.boundary=!0,this.startLoc=[-1,-1],this.endLoc=[-1,-1],this.seed=t.seed||0,o.utils.setOptions(this.rooms,t.rooms),!1===t.doors?t.doors={chance:0}:!0===t.doors&&(t.doors={chance:100}),o.utils.setOptions(this.doors,t.doors),!1===t.halls?t.halls={chance:0}:!0===t.halls&&(t.halls={}),o.utils.setOptions(this.halls,t.halls),!1===t.loops?this.loops=null:(!0===t.loops&&(t.loops={}),t.loops=t.loops||{},t.loops.doorChance=null!==(i=t.loops.doorChance)&&void 0!==i?i:null===(e=t.doors)||void 0===e?void 0:e.chance,o.utils.setOptions(this.loops,t.loops)),!1===t.lakes?this.lakes=null:(!0===t.lakes&&(t.lakes={}),o.utils.setOptions(this.lakes,t.lakes)),!1===t.bridges?this.bridges=null:(!0===t.bridges&&(t.bridges={}),o.utils.setOptions(this.bridges,t.bridges)),!1===t.stairs?this.stairs=null:(!0===t.stairs&&(t.stairs={}),o.utils.setOptions(this.stairs,t.stairs)),this.startLoc=t.startLoc||[-1,-1],this.endLoc=t.endLoc||[-1,-1]}_makeSite(t,i){return new m(t,i)}create(...t){if(1==t.length&&t[0]instanceof o.map.Map){const i=t[0];this.site=new R(i)}if(t.length>1){const i=t[0],e=t[1];this.site=new m(i,e)}const i=this._create(this.site);if(t.length>1){const i=t[0],e=t[1],s=t[2];o.utils.forRect(i,e,((t,i)=>{const e=this.site.getTileIndex(t,i);e&&s(t,i,e)}))}return this.site.free(),i}_create(t){this.startLoc[0]<0&&this.startLoc[0]<0&&(this.startLoc[0]=Math.floor(t.width/2),this.startLoc[1]=t.height-2),this.start(t);let i=20;for(;--i&&!this.addFirstRoom(t););if(!i)throw new Error("Failed to place first room!");let e=0;for(;e<20;)this.addRoom(t)?e=0:++e;return this.loops&&this.addLoops(t,this.loops),this.lakes&&this.addLakes(t,this.lakes),this.bridges&&this.addBridges(t,this.bridges),this.stairs&&this.addStairs(t,this.stairs),this.finish(t),!0}start(t){this.seed&&o.random.seed(this.seed),t.clear(),this.seq=o.random.sequence(t.width*t.height)}getDigger(t){if(!t)throw new Error("Missing digger!");if(t instanceof P)return t;if("string"==typeof t){const i=C[t];if(!i)throw new Error("Failed to find digger - "+t);return i}return new k(t)}addFirstRoom(t){const i=this._makeSite(t.width,t.height);let e=this.getDigger(this.rooms.first||this.rooms.digger||"DEFAULT").create(i);return e&&!this._attachRoomAtLoc(t,i,e,this.startLoc)&&(e=null),i.free(),e}addRoom(t){const i=this._makeSite(t.width,t.height);let e=this.getDigger(this.rooms.digger||"DEFAULT").create(i);if(this.halls.chance){let t=J(this.halls,i,e.doors);t&&(e.hall=t)}return e&&!this._attachRoom(t,i,e)&&(e=null),i.free(),e}_attachRoom(t,i,e){const s=e.hall?e.hall.doors:e.doors;for(let r=0;r<this.seq.length;r++){const n=Math.floor(this.seq[r]/t.height),l=this.seq[r]%t.height;if(!t.isNothing(n,l))continue;const h=T(t,n,l);if(h!=o.utils.NO_DIRECTION){const r=(h+2)%4,o=s[r];if(!o)continue;const a=n-o[0],c=l-o[1];if(-1!=o[0]&&this._roomFitsAt(t,i,a,c))return w(t,i,a,c),this._attachDoor(t,e,n,l,r),e.translate(a,c),!0}}return!1}_attachRoomAtLoc(t,i,e,s){const[r,n]=s,l=e.hall?e.hall.doors:e.doors,h=o.random.sequence(4);for(let s of h){const o=l[(s+2)%4];if(!o||-1==o[0])continue;const h=r-o[0],a=n-o[1];if(this._roomFitsAt(t,i,h,a))return w(t,i,h,a),e.translate(h,a),!0}return!1}_roomFitsAt(t,i,e,s){let r,o,n,l,h,a;for(r=0;r<i.width;r++)for(o=0;o<i.height;o++)if(i.isSet(r,o))for(n=r+e,l=o+s,h=n-1;h<=n+1;h++)for(a=l-1;a<=l+1;a++)if(!t.hasXY(h,a)||t.isBoundaryXY(h,a)||!t.isNothing(h,a))return!1;return!0}_attachDoor(t,i,e,s,r){const n=this.doors;let a=!1;n.chance&&o.random.chance(n.chance)&&(a=!0);const c=a?n.tile||h:l;if(t.setTile(e,s,c),i.hall&&i.hall.width>1&&i.hall.dir===r)if(r===o.utils.UP||r===o.utils.DOWN){let i=!0,r=1;for(;i;)i=!1,t.isNothing(e-r,s)&&t.isSet(e-r,s-1)&&t.isSet(e-r,s+1)&&(t.setTile(e-r,s,c),i=!0),t.isNothing(e+r,s)&&t.isSet(e+r,s-1)&&t.isSet(e+r,s+1)&&(t.setTile(e+r,s,c),i=!0),++r}else{let i=!0,r=1;for(;i;)i=!1,t.isNothing(e,s-r)&&t.isSet(e-1,s-r)&&t.isSet(e+1,s-r)&&(t.setTile(e,s-r,c),i=!0),t.isNothing(e,s+r)&&t.isSet(e-1,s+r)&&t.isSet(e+1,s+r)&&(t.setTile(e,s+r,c),i=!0),++r}}addLoops(t,i){return new ht(i).create(t)}addLakes(t,i){return new et(i).create(t)}addBridges(t,i){return new rt(i).create(t)}addStairs(t,i){return new nt(i).create(t)}finish(t){this._removeDiagonalOpenings(t),this._finishWalls(t),this._finishDoors(t)}_removeDiagonalOpenings(t){let i,e,s,r,n,h;do{for(h=!1,i=0;i<t.width-1;i++)for(e=0;e<t.height-1;e++)for(s=0;s<=1;s++)!t.blocksMove(i+s,e)&&t.blocksMove(i+(1-s),e)&&t.blocksDiagonal(i+(1-s),e)&&t.blocksMove(i+s,e+1)&&t.blocksDiagonal(i+s,e+1)&&!t.blocksMove(i+(1-s),e+1)&&(o.random.chance(50)?(r=i+(1-s),n=e):(r=i+s,n=e+1),h=!0,t.setTile(r,n,l))}while(1==h)}_finishDoors(t){o.utils.forRect(t.width,t.height,((i,e)=>{t.isBoundaryXY(i,e)||t.isDoor(i,e)&&((t.isFloor(i+1,e)||t.isFloor(i-1,e))&&(t.isFloor(i,e+1)||t.isFloor(i,e-1))||(t.blocksPathing(i+1,e)?1:0)+(t.blocksPathing(i-1,e)?1:0)+(t.blocksPathing(i,e+1)?1:0)+(t.blocksPathing(i,e-1)?1:0)>=3)&&t.setTile(i,e,l)}))}_finishWalls(t){const i=this.boundary?p:c;o.utils.forRect(t.width,t.height,((e,s)=>{t.isNothing(e,s)&&(t.isBoundaryXY(e,s)?t.setTile(e,s,i):t.setTile(e,s,c))}))}}const gt=o.flag.fl;var ut;!function(t){t[t.BF_OUTSOURCE_ITEM_TO_MACHINE=gt(1)]="BF_OUTSOURCE_ITEM_TO_MACHINE",t[t.BF_BUILD_VESTIBULE=gt(2)]="BF_BUILD_VESTIBULE",t[t.BF_ADOPT_ITEM=gt(3)]="BF_ADOPT_ITEM",t[t.BF_BUILD_AT_ORIGIN=gt(6)]="BF_BUILD_AT_ORIGIN",t[t.BF_PERMIT_BLOCKING=gt(8)]="BF_PERMIT_BLOCKING",t[t.BF_TREAT_AS_BLOCKING=gt(9)]="BF_TREAT_AS_BLOCKING",t[t.BF_NEAR_ORIGIN=gt(10)]="BF_NEAR_ORIGIN",t[t.BF_FAR_FROM_ORIGIN=gt(11)]="BF_FAR_FROM_ORIGIN",t[t.BF_IN_VIEW_OF_ORIGIN=gt(25)]="BF_IN_VIEW_OF_ORIGIN",t[t.BF_IN_PASSABLE_VIEW_OF_ORIGIN=gt(26)]="BF_IN_PASSABLE_VIEW_OF_ORIGIN",t[t.BF_MONSTER_TAKE_ITEM=gt(12)]="BF_MONSTER_TAKE_ITEM",t[t.BF_MONSTER_SLEEPING=gt(13)]="BF_MONSTER_SLEEPING",t[t.BF_MONSTER_FLEEING=gt(14)]="BF_MONSTER_FLEEING",t[t.BF_MONSTERS_DORMANT=gt(19)]="BF_MONSTERS_DORMANT",t[t.BF_ITEM_IS_KEY=gt(0)]="BF_ITEM_IS_KEY",t[t.BF_ITEM_IDENTIFIED=gt(5)]="BF_ITEM_IDENTIFIED",t[t.BF_ITEM_PLAYER_AVOIDS=gt(4)]="BF_ITEM_PLAYER_AVOIDS",t[t.BF_EVERYWHERE=gt(15)]="BF_EVERYWHERE",t[t.BF_ALTERNATIVE=gt(16)]="BF_ALTERNATIVE",t[t.BF_ALTERNATIVE_2=gt(17)]="BF_ALTERNATIVE_2",t[t.BF_BUILD_IN_WALLS=gt(21)]="BF_BUILD_IN_WALLS",t[t.BF_BUILD_ANYWHERE_ON_LEVEL=gt(22)]="BF_BUILD_ANYWHERE_ON_LEVEL",t[t.BF_REPEAT_UNTIL_NO_PROGRESS=gt(23)]="BF_REPEAT_UNTIL_NO_PROGRESS",t[t.BF_IMPREGNABLE=gt(24)]="BF_IMPREGNABLE",t[t.BF_NOT_IN_HALLWAY=gt(27)]="BF_NOT_IN_HALLWAY",t[t.BF_NOT_ON_LEVEL_PERIMETER=gt(28)]="BF_NOT_ON_LEVEL_PERIMETER",t[t.BF_SKELETON_KEY=gt(29)]="BF_SKELETON_KEY",t[t.BF_KEY_DISPOSABLE=gt(30)]="BF_KEY_DISPOSABLE"}(ut||(ut={}));class ft{constructor(t={}){if(this.tile=0,this.flags=0,this.pad=0,this.item=null,this.horde=null,this.effect=null,this.chance=0,this.id="n/a",t.tile)if("string"==typeof t.tile){const i=o.tile.tiles[t.tile];if(!i)throw new Error("Failed to find tile: "+t.tile);this.tile=i.index}else this.tile=t.tile;t.flags&&(this.flags=o.flag.from(ut,t.flags)),t.pad&&(this.pad=t.pad),this.count=o.range.make(t.count||1),this.item=t.item||null,this.horde=t.horde||null,t.effect&&(this.effect=o.effect.make(t.effect))}cellIsCandidate(t,i,e,s,r){const n=t.site;if(this.flags&ut.BF_NOT_IN_HALLWAY&&o.utils.arcCount(e,s,((t,i)=>n.hasXY(t,i)&&n.isPassable(t,i)))>1)return!1;if(this.flags&ut.BF_NOT_ON_LEVEL_PERIMETER&&(0==e||e==n.width-1||0==s||s==n.height-1))return!1;if(this.flags&ut.BF_BUILD_AT_ORIGIN)return e==t.originX&&s==t.originY;if(i.isRoom&&e==t.originX&&s==t.originY)return!1;if(t.occupied[e][s])return!1;if(this.flags&(ut.BF_IN_VIEW_OF_ORIGIN|ut.BF_IN_PASSABLE_VIEW_OF_ORIGIN)&&!t.viewMap[e][s])return!1;let l=1e4;if(n.isWall(e,s)?o.utils.eachNeighbor(e,s,((i,e)=>{t.distanceMap.hasXY(i,e)&&!n.blocksPathing(i,e)&&l>t.distanceMap[i][e]+1&&(l=t.distanceMap[i][e]+1)}),!0):l=t.distanceMap[e][s],l>r[1]||l<r[0])return!1;if(this.flags&ut.BF_BUILD_IN_WALLS){const i=n.getMachine(e,s);if(!t.interior[e][s]&&(!i||i==t.machineNumber)&&n.isWall(e,s)){let i=!1;return o.utils.eachNeighbor(e,s,((e,s)=>{n.hasXY(e,s)&&(t.interior[e][s]&&(e!=t.originX||s!=t.originY)||this.flags&ut.BF_BUILD_ANYWHERE_ON_LEVEL&&!n.blocksPathing(e,s)&&!n.getMachine(e,s))&&(i=!0)})),i}return!1}return!n.isWall(e,s)&&(this.flags&ut.BF_BUILD_ANYWHERE_ON_LEVEL?!(this.item&&n.blocksItems(e,s)||n.hasCellFlag(e,s,o.map.flags.Cell.IS_CHOKEPOINT|o.map.flags.Cell.IS_IN_LOOP|o.map.flags.Cell.IS_IN_MACHINE)):!!t.interior[e][s])}makePersonalSpace(t,i,e,s){const r=this.pad;let o=0;for(let n=i-r+1;n<=i+r-1;n++)for(let i=e-r+1;i<=e+r-1;i++)t.site.hasXY(n,i)&&(s[n][i]&&(s[n][i]=0,++o),t.occupied[n][i]=1);return o}get generateEverywhere(){return!!(this.flags&ut.BF_EVERYWHERE&~ut.BF_BUILD_AT_ORIGIN)}get buildAtOrigin(){return!!(this.flags&ut.BF_BUILD_AT_ORIGIN)}distanceBound(t){const i=[0,1e4];return this.flags&ut.BF_NEAR_ORIGIN&&(i[1]=t.distance25),this.flags&ut.BF_FAR_FROM_ORIGIN&&(i[0]=t.distance75),i}updateViewMap(t){if(this.flags&(ut.BF_IN_VIEW_OF_ORIGIN|ut.BF_IN_PASSABLE_VIEW_OF_ORIGIN)){const i=t.site;if(this.flags&ut.BF_IN_PASSABLE_VIEW_OF_ORIGIN){new o.fov.FOV({isBlocked:(t,e)=>i.blocksPathing(t,e),hasXY:(t,e)=>i.hasXY(t,e)}).calculate(t.originX,t.originY,50,((i,e)=>{t.viewMap[i][e]=1}))}else{new o.fov.FOV({isBlocked:(t,e)=>i.blocksPathing(t,e)||i.blocksVision(t,e),hasXY:(t,e)=>i.hasXY(t,e)}).calculate(t.originX,t.originY,50,((i,e)=>{t.viewMap[i][e]=1}))}t.viewMap[t.originX][t.originY]=1}}markCandidates(t,i,e,s){let r=0;return t.update(((t,o,n)=>this.cellIsCandidate(i,e,o,n,s)?(r++,1):0)),r}build(t,i){let e=0,s=0;const r=t.site,n=o.grid.alloc(r.width,r.height),l=this.distanceBound(t);this.updateViewMap(t);do{let h=this.markCandidates(n,t,i,l);if(this.generateEverywhere||(e=this.count.value()),!h||h<this.count.lo)return console.warn("Only %s qualifying tiles - want at least %s.",h,this.count.lo),0;let a=0,c=0;for(s=0;(this.generateEverywhere||s<e)&&h>0;){this.buildAtOrigin?(a=t.originX,c=t.originY):[a,c]=o.random.matchingLoc(n.width,n.height,((t,i)=>n[t][i]>0)),n[a][c]=0,h--;let e=!0,l=!0;if(this.effect&&(e=r.fireEffect(this.effect,a,c)),e&&this.tile){let t=o.tile.get(this.tile).index;if(t){if(!(this.flags&ut.BF_PERMIT_BLOCKING)&&(r.tileBlocksMove(t)||this.flags&ut.BF_TREAT_AS_BLOCKING)){const t=o.grid.alloc(r.width,r.height);t[a][c]=1,l=!N(r,t),o.grid.free(t)}}else l=!1,console.error("placing invalid tile",this.tile,a,c);l&&r.setTile(a,c,t)}e&&l&&(h-=this.makePersonalSpace(t,a,c,n),s++),e&&l&&(i.flags&_t.BP_NO_INTERIOR_FLAG||r.setMachine(a,c,t.machineNumber,i.isRoom),this.flags&ut.BF_IMPREGNABLE&&r.setCellFlag(a,c,o.map.flags.Cell.IMPREGNABLE))}}while(this.flags&ut.BF_REPEAT_UNTIL_NO_PROGRESS&&s<=this.count.lo);return o.grid.free(n),s}}const dt=o.flag.fl;var _t;!function(t){t[t.BP_ROOM=dt(10)]="BP_ROOM",t[t.BP_VESTIBULE=dt(1)]="BP_VESTIBULE",t[t.BP_REWARD=dt(7)]="BP_REWARD",t[t.BP_ADOPT_ITEM=dt(0)]="BP_ADOPT_ITEM",t[t.BP_PURGE_PATHING_BLOCKERS=dt(2)]="BP_PURGE_PATHING_BLOCKERS",t[t.BP_PURGE_INTERIOR=dt(3)]="BP_PURGE_INTERIOR",t[t.BP_PURGE_LIQUIDS=dt(4)]="BP_PURGE_LIQUIDS",t[t.BP_SURROUND_WITH_WALLS=dt(5)]="BP_SURROUND_WITH_WALLS",t[t.BP_IMPREGNABLE=dt(6)]="BP_IMPREGNABLE",t[t.BP_OPEN_INTERIOR=dt(8)]="BP_OPEN_INTERIOR",t[t.BP_MAXIMIZE_INTERIOR=dt(9)]="BP_MAXIMIZE_INTERIOR",t[t.BP_REDESIGN_INTERIOR=dt(14)]="BP_REDESIGN_INTERIOR",t[t.BP_TREAT_AS_BLOCKING=dt(11)]="BP_TREAT_AS_BLOCKING",t[t.BP_REQUIRE_BLOCKING=dt(12)]="BP_REQUIRE_BLOCKING",t[t.BP_NO_INTERIOR_FLAG=dt(13)]="BP_NO_INTERIOR_FLAG"}(_t||(_t={}));class pt{constructor(t={}){if(this.tags=[],this.flags=0,this.steps=[],this.id="n/a",t.tags&&("string"==typeof t.tags&&(t.tags=t.tags.split(/[,|]/).map((t=>t.trim()))),this.tags=t.tags),this.frequency=o.frequency.make(t.frequency||100),t.size){if("string"==typeof t.size){const i=t.size.split(/-/).map((t=>t.trim())).map((t=>Number.parseInt(t)));if(2!==i.length)throw new Error("Blueprint size must be of format: #-#");this.size=o.range.make([i[0],i[1]])}else{if(!Array.isArray(t.size))throw new Error("size must be string or array.");if(2!==t.size.length)throw new Error("Blueprint size must be [min, max]");this.size=o.range.make([t.size[0],t.size[1]])}if(this.size.lo>this.size.hi)throw new Error("Blueprint size must be small to large.")}else this.size=o.range.make([0,999999]);t.flags&&(this.flags=o.flag.from(_t,t.flags)),t.steps&&(this.steps=t.steps.map((t=>new ft(t))))}getChance(t,i){return i&&i.length&&("string"==typeof i&&(i=i.split(/[,|]/).map((t=>t.trim()))),!i.every((t=>this.tags.includes(t))))?0:this.frequency(t)}get isRoom(){return!!(this.flags&_t.BP_ROOM)}get isReward(){return!!(this.flags&_t.BP_REWARD)}get isVestiblue(){return!!(this.flags&_t.BP_VESTIBULE)}get adoptsItem(){return!!(this.flags&_t.BP_ADOPT_ITEM)}get treatAsBlocking(){return!!(this.flags&_t.BP_TREAT_AS_BLOCKING)}get requireBlocking(){return!!(this.flags&_t.BP_REQUIRE_BLOCKING)}get purgeInterior(){return!!(this.flags&_t.BP_PURGE_INTERIOR)}get purgeBlockers(){return!!(this.flags&_t.BP_PURGE_PATHING_BLOCKERS)}get purgeLiquids(){return!!(this.flags&_t.BP_PURGE_LIQUIDS)}get surroundWithWalls(){return!!(this.flags&_t.BP_SURROUND_WITH_WALLS)}get makeImpregnable(){return!!(this.flags&_t.BP_IMPREGNABLE)}get maximizeInterior(){return!!(this.flags&_t.BP_MAXIMIZE_INTERIOR)}get openInterior(){return!!(this.flags&_t.BP_OPEN_INTERIOR)}get noInteriorFlag(){return!!(this.flags&_t.BP_NO_INTERIOR_FLAG)}qualifies(t,i){return!(this.frequency(i)<=0||~this.flags&t||this.flags&_t.BP_ADOPT_ITEM&~t||this.flags&_t.BP_VESTIBULE&~t)}pickLocation(t){if(this.isRoom){t.analyze();const i=o.random.matchingLoc(t.width,t.height,((i,e)=>t.hasCellFlag(i,e,o.map.flags.Cell.IS_GATE_SITE)&&this.size.contains(t.getChokeCount(i,e))));return!i||i[0]<0||i[1]<0?(console.log("Failed to build a machine; there was no eligible door candidate for the chosen room machine from blueprint."),!1):i}if(this.isVestiblue)return console.log("ERROR: Attempted to build a vestiblue without a location being provided."),!1;const i=o.random.matchingLoc(t.width,t.height,((i,e)=>t.isPassable(i,e)));return!(!i||i[0]<0||i[1]<0)&&i}computeInterior(t){let i,e=this.isRoom?10:20;const s=t.interior,r=t.site;do{if(i=!1,--e<=0)return console.log("Failed to build a machine; failed repeatedly to find a suitable blueprint location."),!1;if(s.fill(0),this.isRoom)i=!this.addTileToInteriorAndIterate(t,t.originX,t.originY);else if(this.isVestiblue){if(!this.computeInteriorForVestibuleMachine(t))return console.error("ERROR: Attempted to build a door machine from blueprint: not enough room."),!1}else{let e=o.grid.alloc(s.width,s.height);M(r,e,t.originX,t.originY,this.size.hi);const n=o.random.sequence(r.width*r.height);let l=0,h=this.size.value();for(let t=0;t<1e3&&l<h;t++)for(let a=0;a<n.length&&l<h;a++){const c=Math.floor(n[a]/r.height),g=n[a]%r.height;e[c][g]==t&&(s[c][g]=1,l++,(r.isOccupied(c,g)||r.hasCellFlag(c,g,o.map.flags.Cell.IS_IN_MACHINE))&&(i=!0,l=h))}l<h?(i=!0,console.log("too small")):this.treatAsBlocking&&N(r,s)?(console.log("disconnected"),i=!0):this.requireBlocking&&S(r,s)<100&&(console.log("not disconnected enough"),i=!0),o.grid.free(e)}}while(i);return!0}addTileToInteriorAndIterate(t,i,e){let s=!0;const r=t.interior,n=t.site;r[i][e]=1;const l=n.getChokeCount(i,e);for(let h=0;h<4&&s;h++){const a=i+o.utils.DIRS[h][0],c=e+o.utils.DIRS[h][1];if(n.hasXY(a,c)&&!r[a][c]){if(n.isOccupied(a,c)||n.hasCellFlag(a,c,o.map.flags.Cell.IS_IN_MACHINE)&&!n.hasCellFlag(a,c,o.map.flags.Cell.IS_GATE_SITE))return!1;n.getChokeCount(a,c)<=l&&!n.hasCellFlag(a,c,o.map.flags.Cell.IS_IN_MACHINE)&&(s=this.addTileToInteriorAndIterate(t,a,c))}}return s}computeInteriorForVestibuleMachine(t){let i=!0;const e=t.interior,s=t.site;e.fill(0);let r=0;const n=this.size.value(),l=o.grid.alloc(s.width,s.height);M(s,l,t.originX,t.originY,this.size.hi);const h=o.random.sequence(s.width*s.height);for(let t=0;t<1e3&&r<n;t++)for(let o=0;o<h.length&&r<n;++o){const a=Math.floor(h[o]/s.height),c=h[o]%s.height;l[a][c]==t&&(s.isOccupied(a,c)&&(i=!1,r=n),e[a][c]=1,r+=1)}return(this.treatAsBlocking&&N(s,e)||this.requireBlocking&&S(s,e)<100)&&(i=!1),o.grid.free(l),i}prepareInteriorWithMachineFlags(t){const i=t.interior,e=t.site;this.maximizeInterior?this.expandMachineInterior(t,1):this.openInterior&&this.expandMachineInterior(t,4),this.purgeInterior&&i.forEach(((t,i,s)=>{t&&e.setTile(i,s,l)})),this.purgeBlockers&&i.forEach(((t,i,s)=>{t&&e.blocksPathing(i,s)&&e.setTile(i,s,l)})),this.purgeLiquids&&i.forEach(((t,i,s)=>{t&&e.isAnyLiquid(i,s)&&e.setTile(i,s,l)})),this.surroundWithWalls&&i.forEach(((t,s,r)=>{t&&!e.hasCellFlag(s,r,o.map.flags.Cell.IS_GATE_SITE)&&o.utils.eachNeighbor(s,r,((t,s)=>{i.hasXY(t,s)&&(i[t][s]||e.isWall(t,s)||e.hasCellFlag(t,s,o.map.flags.Cell.IS_GATE_SITE)||e.hasCellFlag(t,s,o.map.flags.Cell.IS_IN_MACHINE)||e.blocksPathing(t,s)&&e.setTile(t,s,c))}),!1)})),this.makeImpregnable&&i.forEach(((t,s,r)=>{t&&!e.hasCellFlag(s,r,o.map.flags.Cell.IS_GATE_SITE)&&(e.setCellFlag(s,r,o.map.flags.Cell.IMPREGNABLE),o.utils.eachNeighbor(s,r,((t,s)=>{i.hasXY(t,s)&&(i[t][s]||e.hasCellFlag(t,s,o.map.flags.Cell.IS_GATE_SITE)||e.setCellFlag(t,s,o.map.flags.Cell.IMPREGNABLE))}),!1))}));const s=t.machineNumber;i.forEach(((t,i,r)=>{t&&(e.setMachine(i,r,s,this.isRoom),e.isSecretDoor(i,r)&&e.setTile(i,r,h))}))}expandMachineInterior(t,i=1){let e;const s=t.interior,r=t.site;do{e=!1,s.forEach(((t,n,h)=>{if(r.hasCellFlag(n,h,o.map.flags.Cell.IS_IN_MACHINE))return;if(!r.blocksPathing(n,h))return;let a=0;o.utils.eachNeighbor(n,h,((t,i)=>{s.hasXY(t,i)&&s[t][i]&&!r.blocksPathing(t,i)&&++a}),!1),a<i||(a=0,o.utils.eachNeighbor(n,h,((t,i)=>{s.hasXY(t,i)&&(s[t][i]||r.isWall(t,i)&&!r.hasCellFlag(t,i,o.map.flags.Cell.IS_IN_MACHINE)||++a)}),!1),a||(e=!0,s[n][h]=1,r.blocksPathing(n,h)&&r.setTile(n,h,l),o.utils.eachNeighbor(n,h,((t,i)=>{s.hasXY(t,i)&&(r.isSet(t,i)||r.setTile(t,i,c))}))))}))}while(e)}calcDistances(t){t.distanceMap.fill(0),M(t.site,t.distanceMap,t.originX,t.originY,this.size.hi);let i=0;const e=new Array(100).fill(0);t.interior.forEach(((s,r,o)=>{if(!s)return;const n=t.distanceMap[r][o];n<100&&(e[n]++,i++)}));let s=Math.round(i/4),r=Math.round(3*i/4);for(let t=0;t<100;t++){if(s<=e[t]){s=t;break}s-=e[t]}for(let t=0;t<100;t++){if(r<=e[t]){r=t;break}r-=e[t]}t.distance25=s,t.distance75=r}pickComponents(){const t=[ut.BF_ALTERNATIVE,ut.BF_ALTERNATIVE_2],i=new Array(this.steps.length).fill(!0);for(let e=0;e<=1;e++){let s=0;for(let r=0;r<i.length;r++)this.steps[r].flags&t[e]&&(i[r]=!1,s++);if(s>0){let r=o.random.range(1,s);for(let s=0;s<i.length;s++)if(this.steps[s].flags&t[e]){if(1==r){i[s]=!0;break}r--}}}return this.steps.filter(((t,e)=>i[e]))}clearInteriorFlag(t){t.interior.forEach(((i,e,s)=>{i&&(t.site.hasCellFlag(e,s,o.map.flags.Cell.IS_WIRED|o.map.flags.Cell.IS_CIRCUIT_BREAKER)||t.site.setMachine(e,s,0))}))}}const It={};function mt(t,i){const e=Object.values(It).filter((e=>e.qualifies(t,i)));return o.random.item(e)}var Et=Object.freeze({__proto__:null,get StepFlags(){return ut},BuildStep:ft,Builder:class{constructor(t,i){this.map=t,this.depth=i,this.spawnedItems=[],this.spawnedHordes=[],this.originX=-1,this.originY=-1,this.distance25=-1,this.distance75=-1,this.machineNumber=0,this.site=new R(t),this.interior=o.grid.alloc(t.width,t.height),this.occupied=o.grid.alloc(t.width,t.height),this.viewMap=o.grid.alloc(t.width,t.height),this.distanceMap=o.grid.alloc(t.width,t.height)}free(){o.grid.free(this.interior),o.grid.free(this.occupied),o.grid.free(this.viewMap),o.grid.free(this.distanceMap)}buildRandom(t=_t.BP_ROOM){let i=10;for(;i--;){const i=mt(t,this.depth);if(i&&this.buildBlueprint(i))return!0}return console.log("Failed to find blueprint matching flags: "+o.flag.toString(_t,t)),!1}buildBlueprint(t){let i=10;for(;i--;){const i=t.pickLocation(this.site);if(i&&this.build(t,i[0],i[1]))return!0}return console.log("Failed to build blueprint."),!1}build(t,i,e){if(this.interior.fill(0),this.occupied.fill(0),this.viewMap.fill(0),this.distanceMap.fill(0),this.originX=i,this.originY=e,!t.computeInterior(this))return!1;const s=this.site.backup();this.machineNumber=this.site.nextMachineId(),t.prepareInteriorWithMachineFlags(this),t.calcDistances(this);const r=t.pickComponents();for(let i=0;i<r.length;i++){const e=r[i];if(e.build(this,t)<e.count.lo&&!(e.flags&ut.BF_REPEAT_UNTIL_NO_PROGRESS))return console.log("Failed to place blueprint because of feature; needed more instances."),this.site.restore(s),!1}return t.noInteriorFlag&&t.clearInteriorFlag(this),!0}},get Flags(){return _t},Blueprint:pt,blueprints:It,install:function(t,i){return i instanceof pt||(i=new pt(i)),It[t]=i,i.id=t,i},random:mt});t.Dungeon=class{constructor(t={}){this.config={levels:1,width:80,height:34,rooms:{count:20,digger:"DEFAULT"},halls:{},loops:{},lakes:{},bridges:{},stairs:{},boundary:!0},this.seeds=[],this.stairLocs=[],o.utils.setOptions(this.config,t),this.config.seed&&o.random.seed(this.config.seed),this.initSeeds(),this.initStairLocs()}get levels(){return this.config.levels}initSeeds(){for(let t=0;t<this.config.levels;++t)this.seeds[t]=o.random.number(2**32)}initStairLocs(){let t=this.config.startLoc||[Math.floor(this.config.width/2),this.config.height-2];const i=this.config.stairDistance||Math.floor(Math.max(this.config.width/2,this.config.height/2));for(let e=0;e<this.config.levels;++e){const e=o.random.matchingLoc(this.config.width,this.config.height,((e,s)=>o.utils.distanceBetween(t[0],t[1],e,s)>i));this.stairLocs.push([[t[0],t[1]],[e[0],e[1]]]),t=e}}getLevel(t,i){if(t<0||t>this.config.levels)throw new Error("Invalid level id: "+t);o.random.seed(this.seeds[t]);const[e,s]=this.stairLocs[t],r=Object.assign({},this.config.stairs);this.config.goesUp?(r.down=e,r.up=s,0==t&&this.config.startTile&&(r.downTile=this.config.startTile),t==this.config.levels-1&&this.config.endTile&&(r.upTile=this.config.endTile)):(r.down=s,r.up=e,0==t&&this.config.startTile&&(r.upTile=this.config.startTile),t==this.config.levels-1&&this.config.endTile&&(r.downTile=this.config.endTile));const n=Object.assign({},this.config.rooms);0===t&&n.entrance&&(n.first=n.entrance);const l={loops:this.config.loops,lakes:this.config.lakes,bridges:this.config.bridges,rooms:n,stairs:r,boundary:this.config.boundary,width:this.config.width,height:this.config.height};return this.makeLevel(t,l,i)}makeLevel(t,i,e){const s=new ct(i),r=s.create(this.config.width,this.config.height,e);return o.utils.equalsXY(s.endLoc,i.endLoc)&&o.utils.equalsXY(s.startLoc,i.startLoc)||(this.stairLocs[t]=[s.startLoc,s.endLoc]),r}},t.Hall=A,t.Level=ct,t.Room=F,t.blueprint=Et,t.bridge=ot,t.hall=it,t.lake=st,t.loop=at,t.room=H,t.site=b,t.stairs=lt,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=gw-dig.min.js.map
