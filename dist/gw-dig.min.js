!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("gw-utils")):"function"==typeof define&&define.amd?define(["exports","gw-utils"],i):i((t="undefined"!=typeof globalThis?globalThis:t||self).GW=t.GW||{},t.GW)}(this,(function(t,i){"use strict";var e,s;const o=i.tile.get("NULL").index,r=i.tile.get("FLOOR").index,n=i.tile.get("DOOR").index,h=null!==(s=null===(e=i.tile.get("DOOR_SECRET"))||void 0===e?void 0:e.index)&&void 0!==s?s:-1,l=i.tile.get("WALL").index,a=i.tile.get("LAKE").index,c=i.tile.get("SHALLOW").index,g=i.tile.get("BRIDGE").index,u=i.tile.get("UP_STAIRS").index,f=i.tile.get("DOWN_STAIRS").index,d=i.tile.get("IMPREGNABLE").index,_={[o]:"NULL",[r]:"FLOOR",[n]:"DOOR",[l]:"WALL",[d]:"IMPREGNABLE",[a]:"LAKE",[c]:"SHALLOW",[g]:"BRIDGE",[u]:"UP_STAIRS",[f]:"DOWN_STAIRS"};class I{constructor(t,e){this.tiles=i.grid.alloc(t,e)}free(){i.grid.free(this.tiles)}get width(){return this.tiles.width}get height(){return this.tiles.height}hasXY(t,i){return this.tiles.hasXY(t,i)}isBoundaryXY(t,i){return this.tiles.isBoundaryXY(t,i)}isPassable(t,i){return this.isFloor(t,i)||this.isDoor(t,i)||this.isBridge(t,i)||this.isStairs(t,i)||this.isShallow(t,i)}isNothing(t,i){return this.tiles.get(t,i)===o}isDiggable(t,i){return this.tiles.get(t,i)===o}isFloor(t,i){return this.tiles.get(t,i)==r}isDoor(t,i){return this.tiles.get(t,i)===n}isSecretDoor(t,i){return this.tiles.get(t,i)===h}isBridge(t,i){return this.tiles.get(t,i)===g}isWall(t,i){const e=this.tiles.get(t,i);return e===l||e===d}blocksMove(t,i){return this.isNothing(t,i)||this.isWall(t,i)||this.isDeep(t,i)}blocksDiagonal(t,i){return this.isNothing(t,i)||this.isWall(t,i)}blocksPathing(t,i){return this.isNothing(t,i)||this.isWall(t,i)||this.isDeep(t,i)||this.isStairs(t,i)}blocksVision(t,i){return this.isNothing(t,i)||this.isWall(t,i)}blocksItems(t,i){return this.blocksPathing(t,i)||this.blocksPathing(t,i)}blocksEffects(t,i){return this.isWall(t,i)}isStairs(t,i){const e=this.tiles.get(t,i);return e===u||e===f}isDeep(t,i){return this.tiles.get(t,i)===a}isShallow(t,i){return this.tiles.get(t,i)===c}isAnyLiquid(t,i){return this.isDeep(t,i)||this.isShallow(t,i)}isSet(t,i){return(this.tiles.get(t,i)||0)>0}getTileIndex(t,i){return this.tiles.get(t,i)||0}setTile(t,e,s){if("string"==typeof s){const t=i.tile.tiles[s];if(!t)throw new Error("Failed to find tie: "+s);s=t.index}return!!this.tiles.hasXY(t,e)&&(this.tiles[t][e]=s,!0)}hasTile(t,e,s){if("string"==typeof s){const t=i.tile.tiles[s];if(!t)throw new Error("Failed to find tie: "+s);s=t.index}return this.tiles.hasXY(t,e)&&this.tiles[t][e]==s}tileBlocksMove(t){return t===l||t===a||t===d||t===o}}var E={__proto__:null,NOTHING:o,FLOOR:r,DOOR:n,SECRET_DOOR:h,WALL:l,DEEP:a,SHALLOW:c,BRIDGE:g,UP_STAIRS:u,DOWN_STAIRS:f,IMPREGNABLE:d,TILEMAP:_,GridSite:I};class p{constructor(t,e,s,o=1){this.width=1,this.doors=[],this.x=t[0],this.y=t[1];const r=i.utils.DIRS[e];this.length=s,this.width=o,e===i.utils.UP||e===i.utils.DOWN?(this.x2=this.x+(o-1),this.y2=this.y+(s-1)*r[1]):(this.x2=this.x+(s-1)*r[0],this.y2=this.y+(o-1)),this.dir=e}translate(t,i){this.x+=t,this.y+=i,this.x2+=t,this.y2+=i,this.doors&&this.doors.forEach((e=>{e&&(e[0]<0||e[1]<0||(e[0]+=t,e[1]+=i))}))}}class R extends i.utils.Bounds{constructor(t,i,e,s){super(t,i,e,s),this.doors=[],this.hall=null}get cx(){return this.x+Math.floor(this.width/2)}get cy(){return this.y+Math.floor(this.height/2)}translate(t,i){this.x+=t,this.y+=i,this.doors&&this.doors.forEach((e=>{e&&(e[0]<0||e[1]<0||(e[0]+=t,e[1]+=i))})),this.hall&&this.hall.translate(t,i)}}const S=i.utils.DIRS;function O(t,e,s){let o,r,n,h,l,a;for(r=i.utils.NO_DIRECTION,o=0;o<4;o++)if(n=e+S[o][0],h=s+S[o][1],l=e-S[o][0],a=s-S[o][1],t.hasXY(l,a)&&t.hasXY(n,h)&&t.isFloor(l,a)){if(r!=i.utils.NO_DIRECTION)return i.utils.NO_DIRECTION;r=o}return r}function m(t){let e,s,o,r,n,h,l;const a=[[],[],[],[]],c=t.height,g=t.width;for(e=0;e<g;e++)for(s=0;s<c;s++)if(t.isDiggable(e,s)&&(h=O(t,e,s),h!=i.utils.NO_DIRECTION)){for(r=e+i.utils.DIRS[h][0],n=s+i.utils.DIRS[h][1],l=!1,o=0;o<10&&t.hasXY(r,n)&&!l;o++)t.isSet(r,n)&&(l=!0),r+=i.utils.DIRS[h][0],n+=i.utils.DIRS[h][1];l||a[h].push([e,s])}let u=[];for(h=0;h<4;h++){const t=i.random.item(a[h])||[-1,-1];u[h]=[t[0],t[1]]}return u}function N(t,e,s=0,o=0){i.utils.forRect(t.width,t.height,((i,r)=>{const n=i-s,h=r-o,l=e.getTileIndex(n,h);l&&t.setTile(i,r,l)}))}function T(t,e){e.update(((e,s,o)=>t.isPassable(s,o)?1:i.path.OBSTRUCTION))}function L(t,e,s=0,o=0){const r=i.grid.alloc(t.width,t.height);let n=!1;i.utils.forRect(t.width,t.height,((i,h)=>{const l=i+s,a=h+o;e.get(l,a)?t.isStairs(i,h)&&(n=!0):t.isPassable(i,h)&&(r[i][h]=1)}));let h=!0;for(let t=0;t<r.width&&!n;++t)for(let i=0;i<r.height&&!n;++i)1==r[t][i]&&(h?(r.floodFill(t,i,1,2),h=!1):n=!0);return i.grid.free(r),n}function w(t,e,s=0,o=0){const r=i.grid.alloc(t.width,t.height);let n=0;if(i.utils.forRect(t.width,t.height,((i,h)=>{const l=i+s,a=h+o;e.get(l,a)?t.isStairs(i,h)&&(n=t.width*t.height):t.isPassable(i,h)&&(r[i][h]=1)})),n)return n;let h=!0,l=2,a=t.width*t.height;for(let t=0;t<r.width;++t)for(let i=0;i<r.height;++i)if(1==r[t][i]){const e=r.floodFill(t,i,1,l++);a=Math.min(a,e),h?h=!1:n=a}return i.grid.free(r),n}function B(t,e,s,o,r){const n=i.grid.alloc(t.width,t.height);T(t,n),i.path.calculateDistances(e,s,o,n,!1,r+1),i.grid.free(n)}var A={__proto__:null,directionOfDoorSite:O,chooseRandomDoorSites:m,copySite:N,fillCostGrid:T,siteDisruptedBy:L,siteDisruptedSize:w,computeDistanceMap:B};function M(t,e={}){return t=t||{},e=e||{},Object.entries(e).forEach((([e,s])=>{let o=t[e];if("tile"===e)return void(void 0===o&&(t[e]=s));if(!0===s){if(!o)throw new Error("Missing required config for room digger: "+e)}else o=("number"==typeof s||Array.isArray(s),o||s);const r=i.range.make(o);t[e]=r})),t}class F{constructor(t,i={}){this.options={},this.doors=[],this._setOptions(t,i)}_setOptions(t,i={}){this.options=M(t,i)}create(t){const i=this.carve(t);return i&&(i.doors&&0!=i.doors.length&&!i.doors.every((t=>!t||-1==t[0]))||(i.doors=m(t))),i}}var P={};class D extends F{constructor(t={}){super(t,{choices:["DEFAULT"]})}_setOptions(t,e={}){const s=t.choices||e.choices;if(Array.isArray(s))this.randomRoom=i.random.item.bind(i.random,s);else{if("object"!=typeof s)throw new Error("Expected choices to be either array of room ids or weighted map - ex: { ROOM_ID: weight }");this.randomRoom=i.random.weighted.bind(i.random,s)}}carve(t){let e=this.randomRoom();const s=P[e];return s||i.utils.ERROR("Missing room digger choice: "+e),s.create(t)}}class b extends F{constructor(t={}){super(t,{width:12,height:8})}carve(t){const e=this.options.width.value(),s=this.options.height.value(),o=this.options.tile||r,n=i.grid.alloc(t.width,t.height,0),h=Math.floor(.5*e),l=e,a=Math.floor(.5*s),c=s,g=new i.blob.Blob({rounds:5,minWidth:h,minHeight:a,maxWidth:l,maxHeight:c,percentSeeded:55,birthParameters:"ffffftttt",survivalParameters:"ffffttttt"}).carve(n.width,n.height,((t,i)=>n[t][i]=1)),u=Math.floor((t.width-g.width)/2),f=u-g.x,d=Math.floor((t.height-g.height)/2),_=d-g.y;return n.forEach(((i,e,s)=>{i&&t.setTile(e+f,s+_,o)})),i.grid.free(n),new R(u,d,g.width,g.height)}}class C extends F{constructor(t={}){super(t,{width:20,height:10})}carve(t){const e=this.options.width.value(),s=this.options.height.value(),o=this.options.tile||r,n=Math.floor(.4*e),h=s,l=e,a=Math.floor(.5*s),c=Math.floor(t.width/2-n/2-1),g=t.height-h-2,u=Math.floor(t.width/2-l/2-1),f=t.height-a-2;i.utils.forRect(c,g,n,h,((i,e)=>t.setTile(i,e,o))),i.utils.forRect(u,f,l,a,((i,e)=>t.setTile(i,e,o)));const d=new R(Math.min(c,u),Math.min(g,f),Math.max(n,l),Math.max(h,a));return d.doors[i.utils.DOWN]=[Math.floor(t.width/2),t.height-2],d}}class k extends F{constructor(t={}){super(t,{width:12,height:20})}carve(t){const e=this.options.width.value(),s=this.options.height.value(),o=this.options.tile||r,n=e,h=Math.max(3,Math.floor(e*i.random.range(25,75)/100)),l=Math.max(3,Math.floor(s*i.random.range(25,75)/100)),a=s,c=Math.floor((t.width-n)/2),g=c+i.random.range(2,Math.max(2,n-h-2)),u=Math.floor((t.height-a)/2),f=u+i.random.range(2,Math.max(2,a-l-2));return i.utils.forRect(c,f,n,l,((i,e)=>t.setTile(i,e,o))),i.utils.forRect(g,u,h,a,((i,e)=>t.setTile(i,e,o))),new R(c,u,Math.max(n,h),Math.max(l,a))}}class y extends F{constructor(t={}){super(t,{width:7,height:7})}carve(t){const e=this.options.width.value(),s=this.options.height.value(),o=this.options.tile||r;let n=Math.max(3,Math.floor(e*i.random.range(25,50)/100)),h=Math.max(3,Math.floor(s*i.random.range(25,50)/100));const l=Math.floor((t.width-e)/2),a=Math.floor((t.height-h)/2);i.utils.forRect(l,a,e,h,((i,e)=>t.setTile(i,e,o)));const c=Math.floor((t.width-n)/2),g=Math.floor((t.height-s)/2);return i.utils.forRect(c,g,n,s,((i,e)=>t.setTile(i,e,o))),new R(Math.min(l,c),Math.min(a,g),Math.max(e,n),Math.max(s,h))}}class v extends F{constructor(t={}){super(t,{width:[3,6],height:[3,6]})}carve(t){const e=this.options.width.value(),s=this.options.height.value(),o=this.options.tile||r,n=Math.floor((t.width-e)/2),h=Math.floor((t.height-s)/2);return i.utils.forRect(n,h,e,s,((i,e)=>t.setTile(i,e,o))),new R(n,h,e,s)}}class G extends F{constructor(t={}){super(t,{radius:[3,4]})}carve(t){const e=this.options.radius.value(),s=this.options.tile||r,o=Math.floor(t.width/2),n=Math.floor(t.height/2);return e>1&&i.utils.forCircle(o,n,e,((i,e)=>t.setTile(i,e,s))),new R(o-e,n-e,2*e+1,2*e+1)}}class Y extends F{constructor(t={}){super(t,{radius:[5,10],ringMinWidth:3,holeMinSize:3,holeChance:50})}carve(t){const e=this.options.radius.value(),s=this.options.ringMinWidth.value(),o=this.options.holeMinSize.value(),n=this.options.tile||r,h=Math.floor(t.width/2),l=Math.floor(t.height/2);return i.utils.forCircle(h,l,e,((i,e)=>t.setTile(i,e,n))),e>s+o&&i.random.chance(this.options.holeChance.value())&&i.utils.forCircle(h,l,i.random.range(o,e-o),((i,e)=>t.setTile(i,e,0))),new R(h-e,l-e,2*e+1,2*e+1)}}class x extends F{constructor(t={}){super(t,{count:[2,12],width:[5,20],height:[5,20]})}carve(t){let e,s,o,n=this.options.count.value();const h=this.options.width.value(),l=this.options.height.value(),a=this.options.tile||r,c=Math.floor(t.width/2)-Math.floor(h/2),g=Math.floor(t.width/2)+Math.floor(h/2),u=Math.floor(t.height/2)-Math.floor(l/2),f=Math.floor(t.height/2)+Math.floor(l/2);let d=Math.floor(t.width/2),_=d,I=Math.floor(t.height/2),E=I;for(i.utils.forCircle(d,I,2,((i,e)=>t.setTile(i,e,a))),d-=2,_+=2,I-=2,E+=2,e=0;e<n;)if(s=i.random.range(c,g),o=i.random.range(u,f),t.isSet(s,o)){if(s-2<c)continue;if(s+2>g)continue;if(o-2<u)continue;if(o+2>f)continue;d=Math.min(s-2,d),_=Math.max(s+2,_),I=Math.min(o-2,I),E=Math.max(o+2,E),i.utils.forCircle(s,o,2,((i,e)=>t.setTile(i,e,a))),e++}return new R(d,I,_-d+1,E-I+1)}}function W(t,i){return P[t]=i,i}W("DEFAULT",new v);var U={__proto__:null,checkConfig:M,RoomDigger:F,rooms:P,ChoiceRoom:D,choiceRoom:function(t,i){return new D(t).create(i)},Cavern:b,cavern:function(t,i){return new b(t).create(i)},BrogueEntrance:C,brogueEntrance:function(t,i){return new C(t).create(i)},Cross:k,cross:function(t,i){return new k(t).create(i)},SymmetricalCross:y,symmetricalCross:function(t,i){return new y(t).create(i)},Rectangular:v,rectangular:function(t,i){return new v(t).create(i)},Circular:G,circular:function(t,i){return new G(t).create(i)},BrogueDonut:Y,brogueDonut:function(t,i){return new Y(t).create(i)},ChunkyRoom:x,chunkyRoom:function(t,i){return new x(t).create(i)},install:W};const X=i.utils.DIRS;function H(t,i,e){if(!t.hasXY(i[0],i[1]))return!1;if(!t.isDiggable(i[0],i[1]))return!1;const s=[i[0]-e[0],i[1]-e[1]];return!!t.hasXY(s[0],s[1])&&!!t.isFloor(s[0],s[1])}function K(t,e){return t==i.utils.UP||t==i.utils.DOWN?e[1].value():e[0].value()}function V(t,e,s){let o=i.utils.NO_DIRECTION;if(o==i.utils.NO_DIRECTION){const r=i.random.sequence(4);for(let n=0;n<4;n++){o=r[n];const h=s[(n+1)%2].hi,l=e[o];if(l&&-1!=l[0]&&-1!=l[1]){const i=l[0]+Math.floor(X[o][0]*h),e=l[1]+Math.floor(X[o][1]*h);if(t.hasXY(i,e))break}o=i.utils.NO_DIRECTION}}return o}function q(t,e,s,o,r){let n,h;const l=i.random.chance(r),a=[];for(let i=0;i<4;i++)n=e+X[i][0],h=s+X[i][1],i!=o&&!l||!t.hasXY(n,h)||t.isSet(n,h)||(a[i]=[n,h]);return a}class z{constructor(t={}){this.config={width:i.range.make(1),length:[i.range.make("2-15"),i.range.make("2-9")],tile:r,obliqueChance:15,chance:100},this._setOptions(t)}_setOptions(t={}){if(t.width&&(this.config.width=i.range.make(t.width)),t.length&&"number"==typeof t.length){const e=i.range.make(t.length);this.config.length=[e,e]}t.tile&&(this.config.tile=t.tile),t.chance&&(this.config.chance=t.chance)}create(t,e=[]){if(e=e||m(t),!i.random.chance(this.config.chance))return null;const s=V(t,e,this.config.length);if(s===i.utils.NO_DIRECTION)return null;if(!e[s])return null;const o=this.config.width.value(),r=K(s,this.config.length),n=e[s];return 1==o?this.dig(t,s,n,r):this.digWide(t,s,n,r,o)}_digLine(t,i,e,s){let o=i[0],r=i[1];const n=this.config.tile;for(let i=0;i<s;i++)t.setTile(o,r,n),o+=e[0],r+=e[1];return o-=e[0],r-=e[1],[o,r]}dig(t,i,e,s){const o=X[i],[r,n]=this._digLine(t,e,o,s),h=new p(e,i,s);return h.doors=q(t,r,n,i,this.config.obliqueChance),h}digWide(t,e,s,o,r){const n=i.utils.DIRS[e],h=[s[0]-n[1],s[1]-n[0]],l=[s[0]+n[1],s[1]+n[0]];this._digLine(t,s,n,o);let a=1,c=s[0],g=s[1];a<r&&H(t,h,n)&&(this._digLine(t,h,n,o),c=Math.min(h[0],c),g=Math.min(h[1],g),++a),a<r&&H(t,l,n)&&(this._digLine(t,l,n,o),c=Math.min(l[0],c),g=Math.min(l[1],g),++a);const u=new p([c,g],e,o,r);return u.doors=[],u.doors[e]=[s[0]+o*n[0],s[1]+o*n[1]],u.width=r,u}}function j(t,i,e){return new z(t).create(i,e)}var Q={};function Z(t,i){return Q[t]=i,i}Z("DEFAULT",new z({chance:15}));var $={__proto__:null,isDoorLoc:H,pickWidth:function(t={}){return i.utils.clamp(function(t){if(!t)return 1;if("number"==typeof t)return t;if(void 0===t.width)return 1;let e=t.width;if("number"==typeof e)return e;e=Array.isArray(e)?i.random.weighted(e)+1:"string"==typeof e?i.range.make(e).value():Number.parseInt(i.random.weighted(e));return e}(t),1,3)},pickLength:K,pickHallDirection:V,pickHallExits:q,HallDigger:z,dig:j,halls:Q,install:Z};class J{constructor(t={}){this.options={height:15,width:30,minSize:5,tries:20,count:1,canDisrupt:!1,wreathTile:c,wreathChance:50,wreathSize:1,tile:a},Object.assign(this.options,t)}create(t){let e,s,o,r,n,h,l,g,u,f,d,_=0;h=this.options.height||15,l=this.options.width||30,g=this.options.minSize||5,u=this.options.tries||20,f=this.options.count||1,d=this.options.canDisrupt||!1;const I=!!i.random.chance(this.options.wreathChance),E=this.options.wreathTile||c,p=this.options.wreathSize||1,R=this.options.tile||a,S=i.grid.alloc(t.width,t.height,0);let O=0;for(;O<f&&_<f;){const a=Math.round((l-g)*(f-O)/f)+g,c=Math.round((h-g)*(f-O)/f)+g,m=new i.blob.Blob({rounds:5,minWidth:4,minHeight:4,maxWidth:a,maxHeight:c,percentSeeded:55,birthParameters:"ffffftttt",survivalParameters:"ffffttttt"}).carve(S.width,S.height,((t,i)=>S[t][i]=1));let N=!1;for(o=0;o<u&&!N;o++)if(r=i.random.range(1-m.x,S.width-m.width-m.x-2),n=i.random.range(1-m.y,S.height-m.height-m.y-2),d||!this.isDisruptedBy(t,S,-r,-n)){for(N=!0,e=0;e<m.width;e++)for(s=0;s<m.height;s++)if(S[e+m.x][s+m.y]){const o=e+m.x+r,h=s+m.y+n;t.setTile(o,h,R),I&&i.utils.forCircle(o,h,p,((i,e)=>{t.isPassable(i,e)&&t.setTile(i,e,E)}))}break}N?++_:++O}return i.grid.free(S),_}isDisruptedBy(t,e,s=0,o=0){const r=i.grid.alloc(t.width,t.height);let n=!1;i.utils.forRect(t.width,t.height,((i,h)=>{const l=i+s,a=h+o;e.get(l,a)?t.isStairs(i,h)&&(n=!0):t.isPassable(i,h)&&(r[i][h]=1)}));let h=!0;for(let t=0;t<r.width&&!n;++t)for(let i=0;i<r.height&&!n;++i)1==r[t][i]&&(h?(r.floodFill(t,i,1,2),h=!1):n=!0);return i.grid.free(r),n}}var tt={__proto__:null,Lakes:J};class it{constructor(t={}){this.options={minDistance:20,maxLength:5},Object.assign(this.options,t)}create(t){let e,s,o,n,h,l,a,c=0;const u=this.options.maxLength,f=this.options.minDistance,d=i.grid.alloc(t.width,t.height),_=i.grid.alloc(t.width,t.height),I=[[1,0],[0,1]];_.update(((e,s,o)=>t.isPassable(s,o)?1:i.path.OBSTRUCTION));const E=i.random.sequence(t.width*t.height);for(o=0;o<E.length;o++)if(l=Math.floor(E[o]/t.height),a=E[o]%t.height,t.isPassable(l,a)&&!t.isAnyLiquid(l,a))for(h=0;h<=1;h++){const o=I[h];if(e=l+o[0],s=a+o[1],n=u,t.isAnyLiquid(e,s))for(n=0;n<u&&(e+=o[0],s+=o[1],t.isAnyLiquid(e,s));++n);if(t.isPassable(e,s)&&n<u&&(i.path.calculateDistances(d,e,s,_,!1),d[l][a]>f&&d[l][a]<i.path.NO_PATH)){for(;l!==e||a!==s;)this.isBridgeCandidate(t,l,a,o)?(t.setTile(l,a,g),_[l][a]=1):(t.setTile(l,a,r),_[l][a]=1),l+=o[0],a+=o[1];++c;break}}return i.grid.free(d),i.grid.free(_),c}isBridgeCandidate(t,i,e,s){return!!t.isBridge(i,e)||!!t.isAnyLiquid(i,e)&&(!!t.isAnyLiquid(i+s[1],e+s[0])&&!!t.isAnyLiquid(i-s[1],e-s[0]))}}var et={__proto__:null,Bridges:it};class st{constructor(t={}){this.options={up:!0,down:!0,minDistance:10,start:!1,upTile:u,downTile:f,wall:d},Object.assign(this.options,t)}create(t){let e=!1!==this.options.up,s=!1!==this.options.down;const o=this.options.minDistance||Math.floor(Math.max(t.width,t.height)/2),r={};let n,h;const l=this.isStairXY.bind(this,t);if(this.options.start&&"string"!=typeof this.options.start){let e=this.options.start;e=!0===e?i.random.matchingLoc(t.width,t.height,l):i.random.matchingLocNear(i.utils.x(e),i.utils.y(e),l),r.start=e}if(Array.isArray(this.options.up)&&Array.isArray(this.options.down)){const t=this.options.up;n=i.random.matchingLocNear(i.utils.x(t),i.utils.y(t),l);const e=this.options.down;h=i.random.matchingLocNear(i.utils.x(e),i.utils.y(e),l)}else if(Array.isArray(this.options.up)&&!Array.isArray(this.options.down)){const e=this.options.up;n=i.random.matchingLocNear(i.utils.x(e),i.utils.y(e),l),s&&(h=i.random.matchingLoc(t.width,t.height,((t,e)=>!(i.utils.distanceBetween(t,e,n[0],n[1])<o)&&l(t,e))))}else if(Array.isArray(this.options.down)&&!Array.isArray(this.options.up)){const s=this.options.down;h=i.random.matchingLocNear(i.utils.x(s),i.utils.y(s),l),e&&(n=i.random.matchingLoc(t.width,t.height,((t,e)=>!(i.utils.distanceBetween(t,e,h[0],h[1])<o)&&l(t,e))))}else e?(n=i.random.matchingLoc(t.width,t.height,l),s&&(h=i.random.matchingLoc(t.width,t.height,((t,e)=>!(i.utils.distanceBetween(t,e,n[0],n[1])<o)&&l(t,e))))):s&&(h=i.random.matchingLoc(t.width,t.height,l));return n&&(r.up=n.slice(),this.setupStairs(t,n[0],n[1],this.options.upTile),"up"===this.options.start&&(r.start=r.up)),void 0!==h&&(r.down=h.slice(),this.setupStairs(t,h[0],h[1],this.options.downTile),"down"===this.options.start&&(r.start=r.down)),n||h?r:null}hasXY(t,i,e){return!(i<0||e<0)&&!(i>=t.width||e>=t.height)}isStairXY(t,e,s){let o=0;if(!this.hasXY(t,e,s)||!t.isDiggable(e,s))return!1;for(let r=0;r<4;++r){const n=i.utils.DIRS[r];if(!this.hasXY(t,e+n[0],s+n[1]))return!1;if(!this.hasXY(t,e-n[0],s-n[1]))return!1;if(t.isFloor(e+n[0],s+n[1])){if(o+=1,!t.isDiggable(e-n[0]+n[1],s-n[1]+n[0]))return!1;if(!t.isDiggable(e-n[0]-n[1],s-n[1]-n[0]))return!1}else if(!t.isDiggable(e+n[0],s+n[1]))return!1}return 1==o}setupStairs(t,e,s,o){const r=i.random.sequence(4);let n=null;for(let o=0;o<r.length;++o){n=i.utils.DIRS[o];const r=e+n[0],h=s+n[1];if(t.isFloor(r,h)&&t.isDiggable(e-n[0],s-n[1]))break;n=null}n||i.utils.ERROR("No stair direction found!"),t.setTile(e,s,o);const h=i.utils.CLOCK_DIRS.findIndex((t=>t[0]==n[0]&&t[1]==n[1])),l=this.options.wall;for(let o=0;o<i.utils.CLOCK_DIRS.length;++o){const r=o?o-1:7,n=(o+1)%8;if(o==h||r==h||n==h)continue;const a=i.utils.CLOCK_DIRS[o];t.setTile(e+a[0],s+a[1],l)}return!0}}var ot={__proto__:null,Stairs:st};class rt{constructor(t={}){this.options={minDistance:100,maxLength:1},Object.assign(this.options,t)}create(t){let e,s,o,h,l,a,c,g,u;const f=Math.min(this.options.minDistance,Math.floor(Math.max(t.width,t.height)/2)),d=this.options.maxLength,_=i.grid.alloc(t.width,t.height),I=i.grid.alloc(t.width,t.height),E=[[1,0],[0,1]];function p(i,e,s){return!!t.hasXY(i,e)&&(!!t.hasXY(i+s[1],e+s[0])&&(!!t.hasXY(i-s[1],e-s[0])&&(!t.isSet(i,e)&&(!t.isSet(i+s[1],e+s[0])&&!t.isSet(i-s[1],e-s[0])))))}function R(i,e,s){return!!t.hasXY(i,e)&&(!!t.hasXY(i+s[1],e+s[0])&&(!!t.hasXY(i-s[1],e-s[0])&&(!!t.isSet(i,e)||(!!t.isSet(i+s[1],e+s[0])||!!t.isSet(i-s[1],e-s[0])))))}T(t,I);let S=0;const O=i.random.sequence(t.width*t.height);for(l=0;l<O.length;l++)if(g=Math.floor(O[l]/t.height),u=O[l]%t.height,!t.isSet(g,u))for(c=0;c<=1;c++){let l=E[c];if(p(g,u,l)){if(a=d,t.hasXY(g+l[0],u+l[1])&&t.isPassable(g+l[0],u+l[1])){if(!t.hasXY(g-l[0],u-l[1])||t.isDoor(g-l[0],u-l[1]))continue}else{if(!t.hasXY(g-l[0],u-l[1])||!t.isPassable(g-l[0],u-l[1]))continue;if(!t.hasXY(g+l[0],u+l[1])||t.isDoor(g+l[0],u+l[1]))continue;l=l.map((t=>-1*t))}for(e=g+l[0],s=u+l[1],o=g,h=u,a=0;a<d&&(o-=l[0],h-=l[1],!R(o,h,l));++a);if(a<d&&(i.path.calculateDistances(_,e,s,I,!1),_[o][h]>f&&_[o][h]<3e4)){for(;o!==e||h!==s;)t.isNothing(o,h)&&(t.setTile(o,h,r),I[o][h]=1),o+=l[0],h+=l[1];t.setTile(g,u,n),++S;break}}}return i.grid.free(_),i.grid.free(I),S}}var nt={__proto__:null,LoopDigger:rt,digLoops:function(t,i={}){return new rt(i).create(t)}};class ht{constructor(t,e,s={}){this.rooms={},this.doors={chance:15},this.halls={chance:15},this.loops={},this.lakes={},this.bridges={},this.stairs={},this.boundary=!0,this.startLoc=[-1,-1],this.endLoc=[-1,-1],this.height=e,this.width=t,this.seq=i.random.sequence(t*e),s.seed&&i.random.seed(s.seed),i.utils.setOptions(this.rooms,s.rooms),i.utils.setOptions(this.halls,s.halls),i.utils.setOptions(this.loops,s.loops),i.utils.setOptions(this.lakes,s.lakes),i.utils.setOptions(this.bridges,s.bridges),i.utils.setOptions(this.stairs,s.stairs),i.utils.setOptions(this.doors,s.doors),this.startLoc=s.startLoc||[Math.floor(t/2),e-2],this.endLoc=s.endLoc||[-1,-1]}makeSite(t,i){return new I(t,i)}create(t){const e=this.makeSite(this.width,this.height);this.start(e);let s=20;for(;--s&&!this.addFirstRoom(e););if(!s)throw new Error("Failed to place first room!");let o=0;for(;o<20;)this.addRoom(e)?o=0:++o;return this.addLoops(e,this.loops),this.addLakes(e,this.lakes),this.addBridges(e,this.bridges),this.addStairs(e,this.stairs),this.finish(e),i.utils.forRect(this.width,this.height,((i,s)=>{const o=e.getTileIndex(i,s);o&&t(i,s,o)})),e.free(),!0}start(t){}getDigger(t){if(!t)throw new Error("Missing digger!");if(t instanceof F)return t;if("string"==typeof t){const i=P[t];if(!i)throw new Error("Failed to find digger - "+t);return i}return new D(t)}addFirstRoom(t){const i=this.makeSite(this.width,this.height);let e=this.getDigger(this.rooms.first||this.rooms.digger||"DEFAULT").create(i);return e&&!this._attachRoomAtLoc(t,i,e,this.startLoc)&&(e=null),i.free(),e}addRoom(t){const i=this.makeSite(this.width,this.height);let e=this.getDigger(this.rooms.digger||"DEFAULT").create(i);if(this.halls.chance){let t=j(this.halls,i,e.doors);t&&(e.hall=t)}return e&&!this._attachRoom(t,i,e)&&(e=null),i.free(),e}_attachRoom(t,e,s){const o=s.hall?s.hall.doors:s.doors;for(let r=0;r<this.seq.length;r++){const n=Math.floor(this.seq[r]/this.height),h=this.seq[r]%this.height;if(!t.isNothing(n,h))continue;const l=O(t,n,h);if(l!=i.utils.NO_DIRECTION){const i=(l+2)%4,r=o[i];if(!r)continue;const a=n-r[0],c=h-r[1];if(-1!=r[0]&&this._roomFitsAt(t,e,a,c))return N(t,e,a,c),this._attachDoor(t,s,n,h,i),s.translate(a,c),!0}}return!1}_attachRoomAtLoc(t,e,s,o){const[r,n]=o,h=s.hall?s.hall.doors:s.doors,l=i.random.sequence(4);for(let i of l){const o=h[(i+2)%4];if(!o||-1==o[0])continue;const l=r-o[0],a=n-o[1];if(this._roomFitsAt(t,e,l,a))return N(t,e,l,a),s.translate(l,a),!0}return!1}_roomFitsAt(t,i,e,s){let o,r,n,h,l,a;for(o=0;o<i.width;o++)for(r=0;r<i.height;r++)if(i.isSet(o,r))for(n=o+e,h=r+s,l=n-1;l<=n+1;l++)for(a=h-1;a<=h+1;a++)if(!t.hasXY(l,a)||t.isBoundaryXY(l,a)||!t.isNothing(l,a))return!1;return!0}_attachDoor(t,e,s,o,h){const l=this.doors;if(0===l.chance)return;const a=l.chance&&i.random.chance(l.chance)?l.tile||n:r;if(t.setTile(s,o,a),e.hall&&e.hall.width>1&&e.hall.dir===h)if(h===i.utils.UP||h===i.utils.DOWN){let i=!0,e=1;for(;i;)i=!1,t.isNothing(s-e,o)&&t.isSet(s-e,o-1)&&t.isSet(s-e,o+1)&&(t.setTile(s-e,o,a),i=!0),t.isNothing(s+e,o)&&t.isSet(s+e,o-1)&&t.isSet(s+e,o+1)&&(t.setTile(s+e,o,a),i=!0),++e}else{let i=!0,e=1;for(;i;)i=!1,t.isNothing(s,o-e)&&t.isSet(s-1,o-e)&&t.isSet(s+1,o-e)&&(t.setTile(s,o-e,a),i=!0),t.isNothing(s,o+e)&&t.isSet(s-1,o+e)&&t.isSet(s+1,o+e)&&(t.setTile(s,o+e,a),i=!0),++e}}addLoops(t,i){return new rt(i).create(t)}addLakes(t,i){return new J(i).create(t)}addBridges(t,i){return new it(i).create(t)}addStairs(t,i){return new st(i).create(t)}finish(t){this._removeDiagonalOpenings(t),this._finishWalls(t),this._finishDoors(t)}_removeDiagonalOpenings(t){let e,s,o,n,h,l;do{for(l=!1,e=0;e<this.width-1;e++)for(s=0;s<this.height-1;s++)for(o=0;o<=1;o++)!t.blocksMove(e+o,s)&&t.blocksMove(e+(1-o),s)&&t.blocksDiagonal(e+(1-o),s)&&t.blocksMove(e+o,s+1)&&t.blocksDiagonal(e+o,s+1)&&!t.blocksMove(e+(1-o),s+1)&&(i.random.chance(50)?(n=e+(1-o),h=s):(n=e+o,h=s+1),l=!0,t.setTile(n,h,r))}while(1==l)}_finishDoors(t){i.utils.forRect(this.width,this.height,((i,e)=>{t.isBoundaryXY(i,e)||t.isDoor(i,e)&&((t.isFloor(i+1,e)||t.isFloor(i-1,e))&&(t.isFloor(i,e+1)||t.isFloor(i,e-1))||(t.blocksPathing(i+1,e)?1:0)+(t.blocksPathing(i-1,e)?1:0)+(t.blocksPathing(i,e+1)?1:0)+(t.blocksPathing(i,e-1)?1:0)>=3)&&t.setTile(i,e,r)}))}_finishWalls(t){const e=this.boundary?d:l;i.utils.forRect(this.width,this.height,((i,s)=>{t.isNothing(i,s)&&(t.isBoundaryXY(i,s)?t.setTile(i,s,e):t.setTile(i,s,l))}))}}var lt={__proto__:null,site:E,room:U,hall:$,lake:tt,bridge:et,stairs:ot,utils:A,loop:nt,Hall:p,Room:R,Level:ht,Dungeon:class{constructor(t={}){this.config={levels:1,width:80,height:34,rooms:{count:20,digger:"DEFAULT"},halls:{},loops:{},lakes:{},bridges:{},stairs:{},boundary:!0},this.seeds=[],this.stairLocs=[],i.utils.setOptions(this.config,t),this.config.seed&&i.random.seed(this.config.seed),this.initSeeds(),this.initStairLocs()}get levels(){return this.config.levels}initSeeds(){for(let t=0;t<this.config.levels;++t)this.seeds[t]=i.random.number(2**32)}initStairLocs(){let t=this.config.startLoc||[Math.floor(this.config.width/2),this.config.height-2];const e=this.config.stairDistance||Math.floor(Math.max(this.config.width/2,this.config.height/2));for(let s=0;s<this.config.levels;++s){const s=i.random.matchingLoc(this.config.width,this.config.height,((s,o)=>i.utils.distanceBetween(t[0],t[1],s,o)>e));this.stairLocs.push([[t[0],t[1]],[s[0],s[1]]]),t=s}}getLevel(t,e){if(t<0||t>this.config.levels)throw new Error("Invalid level id: "+t);i.random.seed(this.seeds[t]);const[s,o]=this.stairLocs[t],r=Object.assign({},this.config.stairs);this.config.goesUp?(r.down=s,r.up=o,0==t&&this.config.startTile&&(r.downTile=this.config.startTile),t==this.config.levels-1&&this.config.endTile&&(r.upTile=this.config.endTile)):(r.down=o,r.up=s,0==t&&this.config.startTile&&(r.upTile=this.config.startTile),t==this.config.levels-1&&this.config.endTile&&(r.downTile=this.config.endTile));const n=Object.assign({},this.config.rooms);0===t&&n.entrance&&(n.first=n.entrance);const h={loops:this.config.loops,lakes:this.config.lakes,bridges:this.config.bridges,rooms:n,stairs:r,boundary:this.config.boundary,width:this.config.width,height:this.config.height};return this.makeLevel(t,h,e)}makeLevel(t,e,s){const o=new ht(this.config.width,this.config.height,e),r=o.create(s);return i.utils.equalsXY(o.endLoc,e.endLoc)&&i.utils.equalsXY(o.startLoc,e.startLoc)||(this.stairLocs[t]=[o.startLoc,o.endLoc]),r}}};const at=i.flag.fl;var ct;!function(t){t[t.IS_IN_LOOP=at(0)]="IS_IN_LOOP",t[t.IS_CHOKEPOINT=at(1)]="IS_CHOKEPOINT",t[t.IS_GATE_SITE=at(2)]="IS_GATE_SITE",t[t.IS_IN_ROOM_MACHINE=at(3)]="IS_IN_ROOM_MACHINE",t[t.IS_IN_AREA_MACHINE=at(4)]="IS_IN_AREA_MACHINE",t[t.IMPREGNABLE=at(5)]="IMPREGNABLE",t[t.IS_WIRED=at(6)]="IS_WIRED",t[t.IS_CIRCUIT_BREAKER=at(7)]="IS_CIRCUIT_BREAKER",t[t.IS_IN_MACHINE=t.IS_IN_ROOM_MACHINE|t.IS_IN_AREA_MACHINE]="IS_IN_MACHINE"}(ct||(ct={}));class gt extends I{constructor(t,e){super(t,e),this.machineCount=0,this.flags=i.grid.alloc(t,e),this.choke=i.grid.alloc(t,e),this.machine=i.grid.alloc(t,e)}free(){i.grid.free(this.flags),i.grid.free(this.choke),i.grid.free(this.machine),super.free()}backup(){const t=new gt(this.width,this.height);return t.tiles.copy(this.tiles),t.flags.copy(this.flags),t.choke.copy(this.choke),t}restore(t){this.tiles.copy(t.tiles),this.flags.copy(t.flags),this.choke.copy(t.choke),t.free()}deleteBackup(t){t.free()}hasSiteFlag(t,i,e){return!!((this.flags.get(t,i)||0)&e)}setSiteFlag(t,i,e){const s=(this.flags.get(t,i)||0)|e;this.flags.set(t,i,s)}clearSiteFlag(t,i,e){const s=(this.flags.get(t,i)||0)&~e;this.flags.set(t,i,s)}getChokeCount(t,i){return this.choke.get(t,i)||0}setChokeCount(t,i,e){this.choke.set(t,i,e)}isOccupied(t,i){return!1}hasItem(t,i){return!1}hasActor(t,i){return!1}placeTile(t,i,e,s){return this.setTile(t,i,e)}nextMachineId(){return++this.machineCount}getMachine(t,i){return this.machine[t][i]}setMachine(t,i,e,s=!0){this.machine[t][i]=e,0==e?this.clearSiteFlag(t,i,ct.IS_IN_MACHINE):this.setSiteFlag(t,i,s?ct.IS_IN_ROOM_MACHINE:ct.IS_IN_AREA_MACHINE)}}var ut={__proto__:null,get Flags(){return ct},GridSite:gt};class ft{constructor(t){if(this.info=t,!t.tile)throw new Error('Invalid effect - requires "tile".')}get abortIfBlocks(){return!!(this.info.flags&i.effect.Flags.E_ABORT_IF_BLOCKS_MAP)}spawn(t,e,s){const o=i.grid.alloc(s.width,s.height),r=this.fill(t,e,s,o);return(!this.abortIfBlocks||!L(s,o))&&(this.spawnTiles(s,o),i.grid.free(o),r)}compute(t,e,s){const o=this.info.tile;let r=o.grow,n=o.decrement;if(!s(t,e))return 0;let h=[[t+1,e],[t-1,e],[t,e+1],[t,e-1]],l=[];const a=new Set([`${t},${e}`]);let c=1;for(;h.length&&r>0;){for([l,h]=[h,l];l.length;){let[t,e]=l.pop();i.random.chance(r)&&s(t,e)&&(c++,i.utils.eachNeighbor(t,e,((t,i)=>{const e=t+","+i;a.has(e)||(a.add(e),h.push([t,i]))}),!0))}r-=n}return c}fill(t,i,e,s){return this.compute(t,i,((o,r)=>!!this.cellIsOk(e,o,r,o==t&&r==i)&&(s[o][r]=1,!0)))}cellIsOk(t,e,s,o){if(!t.hasXY(e,s))return!1;if(t.blocksEffects(e,s)&&!this.info.tile.matchTile&&!o)return!1;if(this.info.flags&i.effect.Flags.E_BUILD_IN_WALLS){if(!t.isWall(e,s))return!1}else if(this.info.flags&i.effect.Flags.E_MUST_TOUCH_WALLS){let o=!1;if(i.utils.eachNeighbor(e,s,((i,e)=>{t.isWall(i,e)&&(o=!0)}),!0),!o)return!1}else if(this.info.flags&i.effect.Flags.E_NO_TOUCH_WALLS){let o=!0;if(t.isWall(e,s))return!1;if(i.utils.eachNeighbor(e,s,((i,e)=>{t.isWall(i,e)&&(o=!1)}),!0),!o)return!1}return!(this.info.tile.matchTile&&!o&&!t.hasTile(e,s,this.info.tile.matchTile))}spawnTiles(t,e){let s=!1;const o={superpriority:!!(this.info.flags&i.effect.Flags.E_SUPERPRIORITY),blockedByOtherLayers:!!(this.info.flags&i.effect.Flags.E_BLOCKED_BY_OTHER_LAYERS),blockedByActors:!!(this.info.flags&i.effect.Flags.E_BLOCKED_BY_ACTORS),blockedByItems:!!(this.info.flags&i.effect.Flags.E_BLOCKED_BY_ITEMS),volume:this.info.tile.volume};return e.forEach(((i,r,n)=>{i&&(e[r][n]=0,t.placeTile(r,n,this.info.tile,o)&&(e[r][n]=1,s=!0))})),s}}const dt=i.flag.fl;var _t;!function(t){t[t.BF_OUTSOURCE_ITEM_TO_MACHINE=dt(1)]="BF_OUTSOURCE_ITEM_TO_MACHINE",t[t.BF_BUILD_VESTIBULE=dt(2)]="BF_BUILD_VESTIBULE",t[t.BF_ADOPT_ITEM=dt(3)]="BF_ADOPT_ITEM",t[t.BF_BUILD_AT_ORIGIN=dt(6)]="BF_BUILD_AT_ORIGIN",t[t.BF_PERMIT_BLOCKING=dt(8)]="BF_PERMIT_BLOCKING",t[t.BF_TREAT_AS_BLOCKING=dt(9)]="BF_TREAT_AS_BLOCKING",t[t.BF_NEAR_ORIGIN=dt(10)]="BF_NEAR_ORIGIN",t[t.BF_FAR_FROM_ORIGIN=dt(11)]="BF_FAR_FROM_ORIGIN",t[t.BF_IN_VIEW_OF_ORIGIN=dt(25)]="BF_IN_VIEW_OF_ORIGIN",t[t.BF_IN_PASSABLE_VIEW_OF_ORIGIN=dt(26)]="BF_IN_PASSABLE_VIEW_OF_ORIGIN",t[t.BF_MONSTER_TAKE_ITEM=dt(12)]="BF_MONSTER_TAKE_ITEM",t[t.BF_MONSTER_SLEEPING=dt(13)]="BF_MONSTER_SLEEPING",t[t.BF_MONSTER_FLEEING=dt(14)]="BF_MONSTER_FLEEING",t[t.BF_MONSTERS_DORMANT=dt(19)]="BF_MONSTERS_DORMANT",t[t.BF_ITEM_IS_KEY=dt(0)]="BF_ITEM_IS_KEY",t[t.BF_ITEM_IDENTIFIED=dt(5)]="BF_ITEM_IDENTIFIED",t[t.BF_ITEM_PLAYER_AVOIDS=dt(4)]="BF_ITEM_PLAYER_AVOIDS",t[t.BF_EVERYWHERE=dt(15)]="BF_EVERYWHERE",t[t.BF_ALTERNATIVE=dt(16)]="BF_ALTERNATIVE",t[t.BF_ALTERNATIVE_2=dt(17)]="BF_ALTERNATIVE_2",t[t.BF_BUILD_IN_WALLS=dt(21)]="BF_BUILD_IN_WALLS",t[t.BF_BUILD_ANYWHERE_ON_LEVEL=dt(22)]="BF_BUILD_ANYWHERE_ON_LEVEL",t[t.BF_REPEAT_UNTIL_NO_PROGRESS=dt(23)]="BF_REPEAT_UNTIL_NO_PROGRESS",t[t.BF_IMPREGNABLE=dt(24)]="BF_IMPREGNABLE",t[t.BF_NOT_IN_HALLWAY=dt(27)]="BF_NOT_IN_HALLWAY",t[t.BF_NOT_ON_LEVEL_PERIMETER=dt(28)]="BF_NOT_ON_LEVEL_PERIMETER",t[t.BF_SKELETON_KEY=dt(29)]="BF_SKELETON_KEY",t[t.BF_KEY_DISPOSABLE=dt(30)]="BF_KEY_DISPOSABLE"}(_t||(_t={}));class It{constructor(t={}){if(this.tile=0,this.flags=0,this.pad=0,this.item=null,this.horde=null,this.spawn=null,t.tile)if("string"==typeof t.tile){const e=i.tile.tiles[t.tile];if(!e)throw new Error("Failed to find tile: "+t.tile);this.tile=e.index}else this.tile=t.tile;t.flags&&(this.flags=i.flag.from(_t,t.flags)),t.pad&&(this.pad=t.pad),this.count=i.range.make(t.count||1),this.item=t.item||null,this.horde=t.horde||null,t.spawn&&(this.spawn=i.effect.from(t.spawn))}cellIsCandidate(t,e,s,o,r){const n=t.site;if(this.flags&_t.BF_NOT_IN_HALLWAY&&i.utils.arcCount(s,o,((t,i)=>n.hasXY(t,i)&&n.isPassable(t,i)))>1)return!1;if(this.flags&_t.BF_NOT_ON_LEVEL_PERIMETER&&(0==s||s==n.width-1||0==o||o==n.height-1))return!1;if(this.flags&_t.BF_BUILD_AT_ORIGIN)return s==t.originX&&o==t.originY;if(e.isRoom&&s==t.originX&&o==t.originY)return!1;if(t.occupied[s][o])return!1;if(this.flags&(_t.BF_IN_VIEW_OF_ORIGIN|_t.BF_IN_PASSABLE_VIEW_OF_ORIGIN)&&!t.viewMap[s][o])return!1;let h=1e4;if(n.isWall(s,o)?i.utils.eachNeighbor(s,o,((i,e)=>{t.distanceMap.hasXY(i,e)&&!n.blocksPathing(i,e)&&h>t.distanceMap[i][e]+1&&(h=t.distanceMap[i][e]+1)}),!0):h=t.distanceMap[s][o],h>r[1]||h<r[0])return!1;if(this.flags&_t.BF_BUILD_IN_WALLS){const e=n.getMachine(s,o);if(!t.interior[s][o]&&(!e||e==t.machineNumber)&&n.isWall(s,o)){let e=!1;return i.utils.eachNeighbor(s,o,((i,s)=>{n.hasXY(i,s)&&(t.interior[i][s]&&(i!=t.originX||s!=t.originY)||this.flags&_t.BF_BUILD_ANYWHERE_ON_LEVEL&&!n.blocksPathing(i,s)&&!n.getMachine(i,s))&&(e=!0)})),e}return!1}return!n.isWall(s,o)&&(this.flags&_t.BF_BUILD_ANYWHERE_ON_LEVEL?!(this.item&&n.blocksItems(s,o)||n.hasSiteFlag(s,o,ct.IS_CHOKEPOINT|ct.IS_IN_LOOP|ct.IS_IN_MACHINE)):!!t.interior[s][o])}makePersonalSpace(t,i,e,s){const o=this.pad;let r=0;for(let n=i-o+1;n<=i+o-1;n++)for(let i=e-o+1;i<=e+o-1;i++)t.site.hasXY(n,i)&&(s[n][i]&&(s[n][i]=0,++r),t.occupied[n][i]=1);return r}build(t,e){let s=!1,o=0,r=0;const n=t.site,h=i.grid.alloc(n.width,n.height),l=[0,1e4];if(this.flags&_t.BF_NEAR_ORIGIN&&(l[1]=t.distance25),this.flags&_t.BF_FAR_FROM_ORIGIN&&(l[0]=t.distance75),this.flags&(_t.BF_IN_VIEW_OF_ORIGIN|_t.BF_IN_PASSABLE_VIEW_OF_ORIGIN)){if(this.flags&_t.BF_IN_PASSABLE_VIEW_OF_ORIGIN){new i.fov.FOV({isBlocked:(t,i)=>n.blocksPathing(t,i),hasXY:(t,i)=>n.hasXY(t,i)}).calculate(t.originX,t.originY,50,((i,e)=>{t.viewMap[i][e]=1}))}else{new i.fov.FOV({isBlocked:(t,i)=>n.blocksPathing(t,i)||n.blocksVision(t,i),hasXY:(t,i)=>n.hasXY(t,i)}).calculate(t.originX,t.originY,50,((i,e)=>{t.viewMap[i][e]=1}))}t.viewMap[t.originX][t.originY]=1}do{let a=0;h.update(((i,s,o)=>this.cellIsCandidate(t,e,s,o,l)?(a++,1):0)),this.flags&_t.BF_EVERYWHERE&~_t.BF_BUILD_AT_ORIGIN?s=!0:(s=!1,o=this.count.value()),(!a||a<this.count.lo)&&console.warn("Only %s qualifying tiles - want at least %s.",a,this.count.lo);let c=0,g=0;for(r=0;(s||r<o)&&a>0;){if(this.flags&_t.BF_BUILD_AT_ORIGIN)c=t.originX,g=t.originY;else{c=-1;let t=i.random.range(1,a);h.forEach(((i,e,s)=>{if(i)return 1==t?(c=e,g=s,!1):void t--}))}h[c][g]=0,a--;let s=!0;if(this.spawn){new ft(this.spawn).spawn(c,g,n)}if(this.tile){let t=this.tile;if("string"==typeof t&&(t=i.tile.tiles[t].index),t){if(!(this.flags&_t.BF_PERMIT_BLOCKING)&&(n.tileBlocksMove(t)||this.flags&_t.BF_TREAT_AS_BLOCKING)){const t=i.grid.alloc(n.width,n.height);t[c][g]=1,s=!L(n,t),i.grid.free(t)}}else s=!1,console.error("placing invalid tile",this.tile,c,g);s&&n.setTile(c,g,t)}s&&(a-=this.makePersonalSpace(t,c,g,h),r++),s&&(e.flags&pt.BP_NO_INTERIOR_FLAG||n.setMachine(c,g,t.machineNumber,e.isRoom),this.flags&_t.BF_IMPREGNABLE&&n.setSiteFlag(c,g,ct.IMPREGNABLE))}}while(this.flags&_t.BF_REPEAT_UNTIL_NO_PROGRESS&&r<=this.count.lo);return i.grid.free(h),r}}const Et=i.flag.fl;var pt;!function(t){t[t.BP_ROOM=Et(10)]="BP_ROOM",t[t.BP_VESTIBULE=Et(1)]="BP_VESTIBULE",t[t.BP_REWARD=Et(7)]="BP_REWARD",t[t.BP_ADOPT_ITEM=Et(0)]="BP_ADOPT_ITEM",t[t.BP_PURGE_PATHING_BLOCKERS=Et(2)]="BP_PURGE_PATHING_BLOCKERS",t[t.BP_PURGE_INTERIOR=Et(3)]="BP_PURGE_INTERIOR",t[t.BP_PURGE_LIQUIDS=Et(4)]="BP_PURGE_LIQUIDS",t[t.BP_SURROUND_WITH_WALLS=Et(5)]="BP_SURROUND_WITH_WALLS",t[t.BP_IMPREGNABLE=Et(6)]="BP_IMPREGNABLE",t[t.BP_OPEN_INTERIOR=Et(8)]="BP_OPEN_INTERIOR",t[t.BP_MAXIMIZE_INTERIOR=Et(9)]="BP_MAXIMIZE_INTERIOR",t[t.BP_REDESIGN_INTERIOR=Et(14)]="BP_REDESIGN_INTERIOR",t[t.BP_TREAT_AS_BLOCKING=Et(11)]="BP_TREAT_AS_BLOCKING",t[t.BP_REQUIRE_BLOCKING=Et(12)]="BP_REQUIRE_BLOCKING",t[t.BP_NO_INTERIOR_FLAG=Et(13)]="BP_NO_INTERIOR_FLAG"}(pt||(pt={}));class Rt{constructor(t={}){if(this.tags=[],this.size=[-1,-1],this.flags=0,this.steps=[],this.id="n/a",t.tags&&("string"==typeof t.tags&&(t.tags=t.tags.split(/[,|]/).map((t=>t.trim()))),this.tags=t.tags),this.frequency=i.frequency.make(t.frequency||100),t.size){if("string"==typeof t.size){const i=t.size.split(/-/).map((t=>t.trim())).map((t=>Number.parseInt(t)));if(2!==i.length)throw new Error("Blueprint size must be of format: #-#");this.size=[i[0],i[1]]}else{if(!Array.isArray(t.size))throw new Error("size must be string or array.");if(2!==t.size.length)throw new Error("Blueprint size must be [min, max]");this.size=[t.size[0],t.size[1]]}if(this.size[0]>this.size[1])throw new Error("Blueprint size must be small to large.")}t.flags&&(this.flags=i.flag.from(pt,t.flags)),t.steps&&(this.steps=t.steps.map((t=>new It(t))))}getChance(t,i){return i&&i.length&&("string"==typeof i&&(i=i.split(/[,|]/).map((t=>t.trim()))),!i.every((t=>this.tags.includes(t))))?0:this.frequency(t)}get isRoom(){return!!(this.flags&pt.BP_ROOM)}get isReward(){return!!(this.flags&pt.BP_REWARD)}get isVestiblue(){return!!(this.flags&pt.BP_VESTIBULE)}get adoptsItem(){return!!(this.flags&pt.BP_ADOPT_ITEM)}get treatAsBlocking(){return!!(this.flags&pt.BP_TREAT_AS_BLOCKING)}get requireBlocking(){return!!(this.flags&pt.BP_REQUIRE_BLOCKING)}get purgeInterior(){return!!(this.flags&pt.BP_PURGE_INTERIOR)}get purgeBlockers(){return!!(this.flags&pt.BP_PURGE_PATHING_BLOCKERS)}get purgeLiquids(){return!!(this.flags&pt.BP_PURGE_LIQUIDS)}get surroundWithWalls(){return!!(this.flags&pt.BP_SURROUND_WITH_WALLS)}get makeImpregnable(){return!!(this.flags&pt.BP_IMPREGNABLE)}get maximizeInterior(){return!!(this.flags&pt.BP_MAXIMIZE_INTERIOR)}get openInterior(){return!!(this.flags&pt.BP_OPEN_INTERIOR)}get noInteriorFlag(){return!!(this.flags&pt.BP_NO_INTERIOR_FLAG)}qualifies(t,i){return!(this.frequency(i)<=0||~this.flags&t||this.flags&pt.BP_ADOPT_ITEM&~t||this.flags&pt.BP_VESTIBULE&~t)}pickLocation(t){if(this.isRoom){const e=i.random.matchingLoc(t.width,t.height,((i,e)=>t.hasSiteFlag(i,e,ct.IS_GATE_SITE)));return!e||e[0]<0||e[1]<0?(console.log("Failed to build a machine; there was no eligible door candidate for the chosen room machine from blueprint."),!1):e}if(this.isVestiblue)return console.log("ERROR: Attempted to build a vestiblue without a location being provided."),!1;const e=i.random.matchingLoc(t.width,t.height,((i,e)=>t.isPassable(i,e)));return!(!e||e[0]<0||e[1]<0)&&e}computeInterior(t){let e,s=this.isRoom?10:20;const o=t.interior,r=t.site;do{if(e=!1,--s<=0)return console.log("Failed to build a machine; failed repeatedly to find a suitable blueprint location."),!1;if(o.fill(0),this.isRoom)e=!this.addTileToInteriorAndIterate(t,t.originX,t.originY);else if(this.isVestiblue){if(!this.computeInteriorForVestibuleMachine(t))return console.error("ERROR: Attempted to build a door machine from blueprint: not enough room."),!1}else{let s=i.grid.alloc(o.width,o.height);B(r,s,t.originX,t.originY,this.size[1]);const n=i.random.sequence(r.width*r.height);let h=0,l=i.random.range(this.size[0],this.size[1]);for(let t=0;t<1e3&&h<l;t++)for(let i=0;i<n.length&&h<l;i++){const a=Math.floor(n[i]/r.height),c=n[i]%r.height;s[a][c]==t&&(o[a][c]=1,h++,(r.isOccupied(a,c)||r.hasSiteFlag(a,c,ct.IS_IN_MACHINE))&&(e=!0,h=l))}h<l?(e=!0,console.log("too small")):this.treatAsBlocking&&L(r,o)?(console.log("disconnected"),e=!0):this.requireBlocking&&w(r,o)<100&&(console.log("not disconnected enough"),e=!0),i.grid.free(s)}}while(e);return console.log(e,s),!0}addTileToInteriorAndIterate(t,e,s){let o=!0;const r=t.interior,n=t.site;r[e][s]=1;const h=n.getChokeCount(e,s);for(let l=0;l<4&&o;l++){const a=e+i.utils.DIRS[l][0],c=s+i.utils.DIRS[l][1];if(n.hasXY(a,c)&&!r[a][c]){if(n.isOccupied(a,c)||n.hasSiteFlag(a,c,ct.IS_IN_MACHINE)&&!n.hasSiteFlag(a,c,ct.IS_GATE_SITE))return!1;n.getChokeCount(a,c)<=h&&!n.hasSiteFlag(a,c,ct.IS_IN_MACHINE)&&(o=this.addTileToInteriorAndIterate(t,a,c))}}return o}computeInteriorForVestibuleMachine(t){let e=!0;const s=t.interior,o=t.site;s.fill(0);let r=0;const n=i.random.range(this.size[0],this.size[1]),h=i.grid.alloc(o.width,o.height);B(o,h,t.originX,t.originY,this.size[1]);const l=i.random.sequence(o.width*o.height);for(let t=0;t<1e3&&r<n;t++)for(let i=0;i<l.length&&r<n;++i){const a=Math.floor(l[i]/o.height),c=l[i]%o.height;h[a][c]==t&&(o.isOccupied(a,c)&&(e=!1,r=n),s[a][c]=1,r+=1)}return(this.treatAsBlocking&&L(o,s)||this.requireBlocking&&w(o,s)<100)&&(e=!1),i.grid.free(h),e}prepareInteriorWithMachineFlags(t){const e=t.interior,s=t.site;this.maximizeInterior?this.expandMachineInterior(t,1):this.openInterior&&this.expandMachineInterior(t,4),this.purgeInterior&&e.forEach(((t,i,e)=>{t&&s.setTile(i,e,r)})),this.purgeBlockers&&e.forEach(((t,i,e)=>{t&&s.blocksPathing(i,e)&&s.setTile(i,e,r)})),this.purgeLiquids&&e.forEach(((t,i,e)=>{t&&s.isAnyLiquid(i,e)&&s.setTile(i,e,r)})),this.surroundWithWalls&&e.forEach(((t,o,r)=>{t&&!s.hasSiteFlag(o,r,ct.IS_GATE_SITE)&&i.utils.eachNeighbor(o,r,((t,i)=>{e.hasXY(t,i)&&(e[t][i]||s.isWall(t,i)||s.hasSiteFlag(t,i,ct.IS_GATE_SITE)||s.hasSiteFlag(t,i,ct.IS_IN_MACHINE)||s.blocksPathing(t,i)&&s.setTile(t,i,l))}),!1)})),this.makeImpregnable&&e.forEach(((t,o,r)=>{t&&!s.hasSiteFlag(o,r,ct.IS_GATE_SITE)&&(s.setSiteFlag(o,r,ct.IMPREGNABLE),i.utils.eachNeighbor(o,r,((t,i)=>{e.hasXY(t,i)&&(e[t][i]||s.hasSiteFlag(t,i,ct.IS_GATE_SITE)||s.setSiteFlag(t,i,ct.IMPREGNABLE))}),!1))}));const o=t.machineNumber;e.forEach(((t,i,e)=>{t&&(s.setMachine(i,e,o,this.isRoom),s.isSecretDoor(i,e)&&s.setTile(i,e,n))}))}expandMachineInterior(t,e=1){let s;const o=t.interior,n=t.site;do{s=!1,o.forEach(((t,h,a)=>{if(n.hasSiteFlag(h,a,ct.IS_IN_MACHINE))return;if(!n.blocksPathing(h,a))return;let c=0;i.utils.eachNeighbor(h,a,((t,i)=>{o.hasXY(t,i)&&o[t][i]&&!n.blocksPathing(t,i)&&++c}),!1),c<e||(c=0,i.utils.eachNeighbor(h,a,((t,i)=>{o.hasXY(t,i)&&(o[t][i]||n.isWall(t,i)&&!n.hasSiteFlag(t,i,ct.IS_IN_MACHINE)||++c)}),!1),c||(s=!0,o[h][a]=1,n.blocksPathing(h,a)&&n.setTile(h,a,r),i.utils.eachNeighbor(h,a,((t,i)=>{o.hasXY(t,i)&&(n.isSet(t,i)||n.setTile(t,i,l))}))))}))}while(s)}calcDistances(t){t.distanceMap.fill(0),B(t.site,t.distanceMap,t.originX,t.originY,this.size[1]);let i=0;const e=new Array(100).fill(0);t.interior.forEach(((s,o,r)=>{if(!s)return;const n=t.distanceMap[o][r];n<100&&(e[n]++,i++)}));let s=Math.round(i/4),o=Math.round(3*i/4);for(let t=0;t<100;t++){if(s<=e[t]){s=t;break}s-=e[t]}for(let t=0;t<100;t++){if(o<=e[t]){o=t;break}o-=e[t]}t.distance25=s,t.distance75=o}pickComponents(){const t=[_t.BF_ALTERNATIVE,_t.BF_ALTERNATIVE_2],e=new Array(this.steps.length).fill(!0);for(let s=0;s<=1;s++){let o=0;for(let i=0;i<e.length;i++)this.steps[i].flags&t[s]&&(e[i]=!1,o++);if(o>0){let r=i.random.range(1,o);for(let i=0;i<e.length;i++)if(this.steps[i].flags&t[s]){if(1==r){e[i]=!0;break}r--}}}return this.steps.filter(((t,i)=>e[i]))}clearInteriorFlag(t){t.interior.forEach(((i,e,s)=>{i&&(t.site.hasSiteFlag(e,s,ct.IS_WIRED|ct.IS_CIRCUIT_BREAKER)||t.site.setMachine(e,s,0))}))}}const St={};function Ot(t,i){return i instanceof Rt||(i=new Rt(i)),St[t]=i,i.id=t,i}function mt(t,e){const s=Object.values(St).filter((i=>i.qualifies(t,e)));return i.random.item(s)}var Nt={__proto__:null,get Flags(){return pt},Blueprint:Rt,blueprints:St,install:Ot,random:mt};class Tt{constructor(t=!1){this.withCounts=t}compute(t){const e=i.grid.alloc(t.width,t.height),s=i.grid.alloc(t.width,t.height);let o;s.update(((i,e,s)=>t.isPassable(e,s)?1:0));for(let e=1;e<s.width-1;e++)for(let r=1;r<s.height-1;r++)if(t.clearSiteFlag(e,r,ct.IS_CHOKEPOINT),t.setChokeCount(e,r,3e4),s[e][r]&&!t.hasSiteFlag(e,r,ct.IS_IN_LOOP)){o=0;for(let n=0;n<8;n++){const h=e+i.utils.CLOCK_DIRS[(n+7)%8][0],l=r+i.utils.CLOCK_DIRS[(n+7)%8][1],a=e+i.utils.CLOCK_DIRS[n][0],c=r+i.utils.CLOCK_DIRS[n][1];if(s.hasXY(a,c)&&s.hasXY(h,l)&&s[a][c]!=s[h][l]&&++o>2){(s[e-1][r]||s[e+1][r])&&(s[e][r-1]||s[e][r+1])||t.setSiteFlag(e,r,ct.IS_CHOKEPOINT);break}}}if(this.withCounts){s.update(((i,e,s)=>i&&t.hasSiteFlag(e,s,ct.IS_IN_ROOM_MACHINE)?0:i));for(let o=0;o<t.width;o++)for(let r=0;r<t.height;r++)if(s[o][r]&&t.hasSiteFlag(o,r,ct.IS_CHOKEPOINT))for(let n=0;n<4;n++){const h=o+i.utils.DIRS[n][0],l=r+i.utils.DIRS[n][1];if(s.hasXY(h,l)&&s[h][l]&&!t.hasSiteFlag(h,l,ct.IS_CHOKEPOINT)){e.fill(0),s[o][r]=0;let i=Lt(t,e,s,h,l);if(s[o][r]=1,i>=4){for(let s=0;s<e.width;s++)for(let o=0;o<e.height;o++)e[s][o]&&i<t.getChokeCount(s,o)&&(t.setChokeCount(s,o,i),t.clearSiteFlag(s,o,ct.IS_GATE_SITE));i<t.getChokeCount(o,r)&&(t.setChokeCount(o,r,i),t.setSiteFlag(o,r,ct.IS_GATE_SITE))}}}}i.grid.free(s),i.grid.free(e)}}function Lt(t,e,s,o,r){let n=2==s[o][r]?5e3:1;t.isDeep(o,r)&&(n=1e4),e[o][r]=1;for(let h=0;h<4;h++){const l=o+i.utils.DIRS[h][0],a=r+i.utils.DIRS[h][1];t.hasXY(l,a)&&s[l][a]&&!e[l][a]&&(n+=Lt(t,e,s,l,a))}return Math.min(n,1e4)}class wt{constructor(){}compute(t){this._initGrid(t),i.utils.forRect(t.width,t.height,((i,e)=>this._checkCell(t,i,e)))}_initGrid(t){i.utils.forRect(t.width,t.height,((i,e)=>{t.isPassable(i,e)?t.setSiteFlag(i,e,ct.IS_IN_LOOP):t.clearSiteFlag(i,e,ct.IS_IN_LOOP)}))}_checkCell(t,e,s){let o,r,n,h,l,a,c,g;if(t.hasSiteFlag(e,s,ct.IS_IN_LOOP)){for(l=0;l<8&&(r=e+i.utils.CLOCK_DIRS[l][0],n=s+i.utils.CLOCK_DIRS[l][1],!t.hasXY(r,n)||t.hasSiteFlag(r,n,ct.IS_IN_LOOP));l++);if(8!=l){for(a=c=g=0,o=!1,h=l;h<l+8;h++){if(r=e+i.utils.CLOCK_DIRS[h%8][0],n=s+i.utils.CLOCK_DIRS[h%8][1],!t.hasXY(r,n))continue;if(t.hasSiteFlag(r,n,ct.IS_IN_LOOP)){if(g++,!o){if(a>0)return!1;a++,o=!0}}else o&&(g>c&&(c=g),g=0,o=!1)}if(o&&g>c&&(c=g),1==a&&c<=4)for(t.clearSiteFlag(e,s,ct.IS_IN_LOOP),h=0;h<8;h++){const o=e+i.utils.CLOCK_DIRS[h][0],r=s+i.utils.CLOCK_DIRS[h][1];t.hasXY(o,r)&&this._checkCell(t,o,r)}}}}_fillInnerLoopGrid(t,i){for(let e=0;e<t.width;++e)for(let s=0;s<t.height;++s)if(t.hasSiteFlag(e,s,ct.IS_IN_LOOP))i[e][s]=1;else if(e>0&&s>0){const o=t.hasSiteFlag(e,s-1,ct.IS_IN_LOOP),r=t.hasSiteFlag(e-1,s,ct.IS_IN_LOOP);o&&r&&(i[e][s]=1)}}_update(t){const e=i.grid.alloc(t.width,t.height);let s;this._fillInnerLoopGrid(t,e);for(let o=0;o<t.width;o++)for(let r=0;r<t.height;r++)if(t.hasSiteFlag(o,r,ct.IS_IN_LOOP)){s=!1;for(let n=0;n<8;n++){let h=o+i.utils.CLOCK_DIRS[n][0],l=r+i.utils.CLOCK_DIRS[n][1];if(t.hasXY(h,l)&&!e[h][l]&&!t.hasSiteFlag(h,l,ct.IS_IN_LOOP)){s=!0;break}}s||(e[o][r]=1,t.clearSiteFlag(o,r,ct.IS_IN_LOOP))}i.grid.free(e)}}var Bt={__proto__:null,blueprint:Nt,site:ut,analyze:{ChokeFinder:Tt,LoopFinder:wt},analyzeSite:function(t){(new wt).compute(t),new Tt(!0).compute(t)},get Flags(){return pt},Blueprint:Rt,blueprints:St,install:Ot,random:mt,get StepFlags(){return _t},BuildStep:It};t.build=Bt,t.dig=lt,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=gw-dig.min.js.map
