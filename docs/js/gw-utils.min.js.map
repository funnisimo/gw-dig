{"version":3,"file":"gw-utils.min.js","sources":["../js/utils/chain.js","../js/utils/index.js","../js/random.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/canvas.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/effect/flags.js","../js/effect/effect.js","../js/effect/message.js","../js/effect/emit.js","../js/effect/fn.js","../js/blob.js","../js/gameObject/flags.js","../js/gameObject/gameObject.js","../js/light/light.js","../js/light/system.js","../js/tile/flags.js","../js/tile/tile.js","../js/tile/tiles.js","../js/tile/index.js","../js/map/flags.js","../js/actor/flags.js","../js/map/cell.js","../js/actor/index.js","../js/item/index.js","../js/map/layers.js","../js/map/objects.js","../js/map/map.js","../js/map/analyze.js","../js/map/effect.js","../js/map/index.js"],"sourcesContent":["// CHAIN\nexport function chainLength(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function chainIncludes(chain, entry) {\n    while (chain && chain !== entry) {\n        chain = chain.next;\n    }\n    return chain === entry;\n}\nexport function eachChain(item, fn) {\n    let index = 0;\n    while (item) {\n        const next = item.next;\n        fn(item, index++);\n        item = next;\n    }\n    return index; // really count\n}\nexport function addToChain(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function removeFromChain(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function findInChain(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport class Chain {\n    constructor(sort, onchange) {\n        this.data = null;\n        this.sort = sort || (() => -1);\n        this.onchange = onchange || (() => { });\n    }\n    add(obj) {\n        if (!this.data || this.sort(this.data, obj) < 0) {\n            obj.next = this.data;\n            this.data = obj;\n            return true;\n        }\n        let prev = this.data;\n        let current = this.data.next;\n        while (current && this.sort(current, obj) < 0) {\n            prev = current;\n            current = current.next;\n        }\n        obj.next = current;\n        prev.next = obj;\n        this.onchange();\n        return true;\n    }\n    has(obj) {\n        return this.find((o) => o === obj) !== null;\n    }\n    remove(obj) {\n        if (!removeFromChain(this, 'data', obj)) {\n            return false;\n        }\n        this.onchange();\n        return true;\n    }\n    find(cb) {\n        return findInChain(this.data, cb);\n    }\n    forEach(cb) {\n        return eachChain(this.data, cb);\n    }\n}\n//# sourceMappingURL=chain.js.map","/**\n * GW.utils\n * @module utils\n */\nexport * from './chain';\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    get top() {\n        return this.y;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    contains(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (typeof x !== 'number') {\n            y = y(x);\n            x = x(x);\n        }\n        return (this.x <= x &&\n            this.y <= y &&\n            this.x + this.width > x &&\n            this.y + this.height > y);\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothHiliteGradient(currentXValue, maxXValue) {\n    return Math.floor(100 * Math.sin((Math.PI * currentXValue) / maxXValue));\n}\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\n// LINES\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLine(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc)) {\n            break;\n        }\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n        return x == toX && y == toY;\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return true;\n        line.push([x, y]);\n        return false;\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n// ALGOS\nexport async function asyncForEach(iterable, fn) {\n    for (let t of iterable) {\n        await fn(t);\n    }\n}\n//# sourceMappingURL=index.js.map","import * as Utils from './utils';\nimport * as ROT from 'rot-js';\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor() {\n        this._fn = ROT.RNG.clone();\n    }\n    seed(val) {\n        this._fn.setSeed(val);\n    }\n    value() {\n        return this._fn.getUniform();\n    }\n    float() {\n        return this.value();\n    }\n    number(max) {\n        // @ts-ignore\n        if (max <= 0)\n            return 0;\n        max = max || Number.MAX_SAFE_INTEGER;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        Utils.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\n//# sourceMappingURL=random.js.map","import { random } from './random';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1, rng) {\n        this._rng = rng || null;\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value() {\n        const rng = this._rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        this._rng = other._rng;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config, rng) {\n    if (!config)\n        return new Range(0, 0, 0, rng);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0, rng);\n    if (typeof config == 'number')\n        return new Range(config, config, 1, rng);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2], rng);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0, rng);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count, rng);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps, rng);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3, rng);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1, rng);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config, rng) {\n    const range = make(config, rng);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './random';\nimport * as Utils from './utils';\nconst DIRS = Utils.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        Utils.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        Utils.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        Utils.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    dump(fmtFn) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn);\n    }\n    dumpRect(left, top, width, height, fmtFn) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        console.log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * Utils.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return Utils.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\n// @ts-ignore\nlet GRID_ACTIVE_COUNT = 0;\n// @ts-ignore\nlet GRID_ALLOC_COUNT = 0;\n// @ts-ignore\nlet GRID_CREATE_COUNT = 0;\n// @ts-ignore\nlet GRID_FREE_COUNT = 0;\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++GRID_ACTIVE_COUNT;\n        ++GRID_ALLOC_COUNT;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++GRID_CREATE_COUNT;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++GRID_FREE_COUNT;\n            --GRID_ACTIVE_COUNT;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new Utils.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        let dir;\n        let newX, newY, numberOfCells = 1;\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        // Iterate through the four cardinal neighbors.\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (!this.hasXY(newX, newY)) {\n                continue;\n            }\n            if (matchFn(this[newX][newY], newX, newY, this)) {\n                // If the neighbor is an unmarked region cell,\n                numberOfCells += this.floodFill(newX, newY, matchFn, fillFn); // then recurse.\n            }\n        }\n        return numberOfCells;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\nexport function onkeydown(e) {\n    if (ignoreKeyEvent(e))\n        return;\n    if (e.code === 'Escape') {\n        loop.clearEvents(); // clear all current events, then push on the escape\n    }\n    const ev = makeKeyEvent(e);\n    loop.pushEvent(ev);\n    e.preventDefault();\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = false;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            console.warn('OVERWRITE HANDLER - nextEvent');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        const interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n        this.running = true;\n        while (this.running) {\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                this.running = false;\n            }\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                // @ts-ignore\n                keymap.draw();\n            }\n        }\n        clearInterval(interval);\n    }\n    stop() {\n        this.running = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"MONSTER_DETECTED\"] = Fl(8)] = \"MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"WAS_MONSTER_DETECTED\"] = Fl(9)] = \"WAS_MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.MONSTER_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || Utils.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius = 10, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = Utils.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GW from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        this.site = site;\n        this.flags = Grid.make(site.width, site.height, FovFlags.VISIBLE);\n        this._changed = true;\n        this.viewportChanged = false;\n        this.fov = new FOV.FOV({\n            isBlocked(x, y) {\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return x >= 0 && y >= 0 && x < site.width && y < site.height;\n            },\n        });\n        // we want fov, so do not reveal the map initially\n        if (opts.fov === true) {\n            this.flags.fill(0);\n        }\n        if (opts.visible) {\n            this.makeAlwaysVisible();\n        }\n        else if (opts.visible === false) {\n            this.flags.fill(0);\n        }\n        else if (opts.revealed) {\n            this.revealAll();\n        }\n    }\n    get changed() {\n        return this._changed;\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |= FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED;\n    }\n    revealAll() {\n        this.flags.update((v) => v | FovFlags.REVEALED);\n    }\n    revealCell(x, y) {\n        const flag = FovFlags.REVEALED;\n        this.flags[x][y] |= flag;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED | FovFlags.REVEALED);\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n    }\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            if (!(flag & FovFlags.REVEALED) /* && DATA.automationActive */) {\n                this.site.cellRevealed(x, y);\n                // if (cell.item) {\n                //     const theItem: GW.types.ItemType = cell.item;\n                //     if (\n                //         theItem.hasLayerFlag(ObjectFlags.L_INTERRUPT_WHEN_SEEN)\n                //     ) {\n                //         GW.message.add(\n                //             '§you§ §see§ ΩitemMessageColorΩ§item§∆.',\n                //             {\n                //                 item: theItem,\n                //                 actor: DATA.player,\n                //             }\n                //         );\n                //     }\n                // }\n                // if (\n                //     !(flag & FovFlags.MAGIC_MAPPED) &&\n                //     this.site.hasObjectFlag(\n                //         x,\n                //         y,\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     )\n                // ) {\n                //     const tile = cell.tileWithLayerFlag(\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     );\n                //     if (tile) {\n                //         GW.message.add(\n                //             '§you§ §see§ ΩbackgroundMessageColorΩ§item§∆.',\n                //             {\n                //                 actor: DATA.player,\n                //                 item: tile.name,\n                //             }\n                //         );\n                //     }\n                // }\n                this.flags[x][y] |= FovFlags.REVEALED;\n            }\n            // this.site.redrawCell(x, y);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            // this.site.storeMemory(x, y);\n            // this.site.redrawCell(x, y);\n        }\n        return isVisible;\n    }\n    updateCellClairyvoyance(flag, x, y) {\n        const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n        const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n        if (isClairy && wasClairy) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isClairy && wasClairy) {\n            // ceased being clairvoyantly visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasClairy && isClairy) {\n            // became clairvoyantly visible\n            this.site.redrawCell(x, y, true);\n        }\n        return isClairy;\n    }\n    updateCellTelepathy(flag, x, y) {\n        const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n        const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n        if (isTele && wasTele) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isTele && wasTele) {\n            // ceased being telepathically visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasTele && isTele) {\n            // became telepathically visible\n            // if (\n            //     !(flag & FovFlags.REVEALED) &&\n            //     !cell.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER)\n            // ) {\n            //     DATA.xpxpThisTurn++;\n            // }\n            this.site.redrawCell(x, y, true);\n        }\n        return isTele;\n    }\n    updateCellDetect(flag, x, y) {\n        const isMonst = !!(flag & FovFlags.MONSTER_DETECTED);\n        const wasMonst = !!(flag & FovFlags.WAS_MONSTER_DETECTED);\n        if (isMonst && wasMonst) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isMonst && wasMonst) {\n            // ceased being detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        else if (!wasMonst && isMonst) {\n            // became detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        return isMonst;\n    }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        if (this.updateCellClairyvoyance(flag, x, y))\n            return;\n        if (this.updateCellTelepathy(flag, x, y))\n            return;\n        if (this.updateCellDetect(flag, x, y))\n            return;\n    }\n    update(cx, cy, cr) {\n        // if (!this.site.usesFov()) return false;\n        if (!this.viewportChanged &&\n            cx === undefined &&\n            !this.site.lightingChanged()) {\n            return false;\n        }\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            const flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                throw new Error('Received invalid viewport type: ' + type);\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as Utils from './utils';\n// var PATH = {};\n// export { PATH as path };\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = Utils.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\n// function pdsGetDistance(map, x, y) {\n// \tupdate(map);\n// \treturn getLink(map, x, y).distance;\n// }\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\n// function pdsSetCosts(map: DijkstraMap, costMap: Grid.NumGrid) {\n// \tlet i, j;\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n// \t\t\tif (i != 0 && j != 0 && i < map.width - 1 && j < map.height - 1) {\n// \t\t\t\tgetLink(map, i, j).cost = costMap[i][j];\n// \t\t\t} else {\n// \t\t\t\tgetLink(map, i, j).cost = FORBIDDEN;\n// \t\t\t}\n// \t\t}\n// \t}\n// }\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\n// function pdsBatchInput(\n//   map: DijkstraMap,\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   maxDistance: number,\n//   eightWays: boolean\n// ) {\n//   let i, j;\n//   map.eightWays = eightWays;\n//   let left: CostLink | null = map.front;\n//   let right: CostLink | null = map.front.right;\n//   map.front.right = null;\n//   for (i = 0; i < map.width; i++) {\n//     for (j = 0; j < map.height; j++) {\n//       let link = getLink(map, i, j);\n//       if (distanceMap != null) {\n//         link.distance = distanceMap[i][j];\n//       } else {\n//         if (costMap != null) {\n//           // totally hackish; refactor\n//           link.distance = maxDistance;\n//         }\n//       }\n//       let cost;\n//       if (isBoundaryXY(costMap, i, j)) {\n//         cost = OBSTRUCTION;\n//       } else {\n//         cost = costMap[i][j];\n//       }\n//       link.cost = cost;\n//       if (cost > 0) {\n//         if (link.distance < maxDistance) {\n//           if (right === null || right.distance > link.distance) {\n//             // left and right are used to traverse the list; if many cells have similar values,\n//             // some time can be saved by not clearing them with each insertion.  this time,\n//             // sadly, we have to start from the front.\n//             left = map.front;\n//             right = map.front.right;\n//           }\n//           while (right !== null && right.distance < link.distance) {\n//             left = right;\n//             right = right.right;\n//           }\n//           link.right = right;\n//           link.left = left;\n//           left.right = link;\n//           if (right != null) right.left = link;\n//           left = link;\n//         } else {\n//           link.right = null;\n//           link.left = null;\n//         }\n//       } else {\n//         link.right = null;\n//         link.left = null;\n//       }\n//     }\n//   }\n// }\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\n// function dijkstraScan(\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   useDiagonals = false\n// ) {\n//   // static makeDijkstraMap map;\n//   const width = distanceMap.length;\n//   const height = distanceMap[0].length;\n//   if (\n//     !DIJKSTRA_MAP ||\n//     DIJKSTRA_MAP.width < width ||\n//     DIJKSTRA_MAP.height < height\n//   ) {\n//     DIJKSTRA_MAP = makeDijkstraMap(width, height);\n//   }\n//   DIJKSTRA_MAP.width = width;\n//   DIJKSTRA_MAP.height = height;\n//   pdsBatchInput(DIJKSTRA_MAP, distanceMap, costMap, NO_PATH, useDiagonals);\n//   batchOutput(DIJKSTRA_MAP, distanceMap);\n// }\n//\n// function populateGenericCostMap(costMap, map) {\n//   let i, j;\n//\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n//       if (map.hasTileFlag(i, j, def.T_OBSTRUCTS_PASSABILITY)\n//           && (!map.hasTileMechFlag(i, j, def.TM_IS_SECRET) || (map.discoveredTileFlags(i, j) & def.T_OBSTRUCTS_PASSABILITY)))\n// \t\t\t{\n// \t\t\t\tcostMap[i][j] = map.hasTileFlag(i, j, def.T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n//       } else if (map.hasTileFlag(i, j, def.T_PATHING_BLOCKER & ~def.T_OBSTRUCTS_PASSABILITY)) {\n// \t\t\t\tcostMap[i][j] = FORBIDDEN;\n//       } else {\n//         costMap[i][j] = 1;\n//       }\n//     }\n//   }\n// }\n//\n// GW.path.populateGenericCostMap = populateGenericCostMap;\n//\n//\n// function baseCostFunction(blockingTerrainFlags, traveler, canUseSecretDoors, i, j) {\n// \tlet cost = 1;\n// \tmonst = GW.MAP.actorAt(i, j);\n// \tconst monstFlags = (monst ? (monst.info ? monst.info.flags : monst.flags) : 0) || 0;\n// \tif ((monstFlags & (def.MONST_IMMUNE_TO_WEAPONS | def.MONST_INVULNERABLE))\n// \t\t\t&& (monstFlags & (def.MONST_IMMOBILE | def.MONST_GETS_TURN_ON_ACTIVATION)))\n// \t{\n// \t\t\t// Always avoid damage-immune stationary monsters.\n// \t\tcost = FORBIDDEN;\n// \t} else if (canUseSecretDoors\n// \t\t\t&& GW.MAP.hasTileMechFlag(i, j, TM_IS_SECRET)\n// \t\t\t&& GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t&& !(GW.MAP.hasDiscoveredFlag(i, j) & T_OBSTRUCTS_PASSABILITY))\n// \t{\n// \t\tcost = 1;\n// \t} else if (GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t\t || (traveler && traveler === GW.PLAYER && !(GW.MAP.hasCellFlag(i, j, (REVEALED | MAGIC_MAPPED)))))\n// \t{\n// \t\tcost = GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n// \t} else if ((traveler && GW.actor.avoidsCell(traveler, i, j)) || GW.MAP.hasTileFlag(i, j, blockingTerrainFlags)) {\n// \t\tcost = FORBIDDEN;\n// \t}\n//\n// \treturn cost;\n// }\n//\n// GW.path.costFn = baseCostFunction;\n// GW.path.simpleCost = baseCostFunction.bind(undefined, 0, null, false);\n// GW.path.costForActor = ((actor) => baseCostFunction.bind(undefined, GW.actor.forbiddenFlags(actor), actor, actor !== GW.PLAYER));\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// function pathingDistance(x1, y1, x2, y2, blockingTerrainFlags, actor) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tconst costFn = baseCostFunction.bind(undefined, blockingTerrainFlags, actor, true);\n// \tcalculateDistances(distanceMap, x2, y2, costFn, true);\n// \tretval = distanceMap[x1][y1];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.path.distanceFromTo = pathingDistance;\n// function monstTravelDistance(monst, x2, y2, blockingTerrainFlags) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tcalculateDistances(distanceMap, x2, y2, blockingTerrainFlags, monst, true, true);\n// \tretval = distanceMap[monst.x][monst.y];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.actor.travelDistance = monstTravelDistance;\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + Utils.DIRS[dir][0];\n        newY = y + Utils.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return Utils.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, true);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//\n// GW.path.from = getMonsterPathOnMap;\n//# sourceMappingURL=path.js.map","import * as Utils from './utils';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {Function} fn The listener function.\n     * @param {Object} [context=null] The context to invoke the listener with.\n     * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {Function} fn - The function\n     * @param {Object} [context] - The context Object.\n     * @param {Boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    Utils.addToChain(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    Utils.eachChain(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            Utils.removeFromChain(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            Utils.removeFromChain(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { cosmetic } from './random';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.from(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.from(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg.scale(multiplier);\n        if (bg)\n            this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    while (count > 0) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1);\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this.toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        const mixer = new Mixer();\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const data = this.get(x, y);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(x, y, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport function makeDataBuffer(width, height) {\n    return new DataBuffer(width, height);\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\nexport function makeBuffer(...args) {\n    if (args.length == 1) {\n        return new Buffer(args[0]);\n    }\n    return new DataBuffer(args[0], args[1]);\n}\n//# sourceMappingURL=buffer.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    // draw(x: number, y: number, glyph: number, fg: number, bg: number) {\n    //     glyph = glyph & 0xff;\n    //     bg = bg & 0xfff;\n    //     fg = fg & 0xfff;\n    //     const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n    //     this._set(x, y, style);\n    //     return this;\n    // }\n    // fill(bg: number): this;\n    // fill(glyph: number, fg: number, bg: number): this;\n    // fill(...args: number[]): this {\n    //     let g = 0,\n    //         fg = 0,\n    //         bg = 0;\n    //     if (args.length == 1) {\n    //         bg = args[0];\n    //     } else if (args.length == 3) {\n    //         [g, fg, bg] = args;\n    //     }\n    //     for (let x = 0; x < this._width; ++x) {\n    //         for (let y = 0; y < this._height; ++y) {\n    //             this.draw(x, y, g, fg, bg);\n    //         }\n    //     }\n    //     return this;\n    // }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     const current = this._data[index];\n    //     if (current !== style) {\n    //         this._data[index] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n    }\n    return canvas;\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import * as Color from '../color';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = opacity >= 0 ? opacity : 100;\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\n// messages\nconst ARCHIVE = [];\nconst CONFIRMED = [];\nvar ARCHIVE_LINES = 30;\nvar MSG_WIDTH = 80;\nvar NEXT_WRITE_INDEX = 0;\nvar NEEDS_UPDATE = false;\nlet COMBAT_MESSAGE = null;\nexport function needsUpdate(needs) {\n    if (needs) {\n        NEEDS_UPDATE = true;\n    }\n    return NEEDS_UPDATE;\n}\nexport function configure(opts) {\n    if (!opts)\n        opts = {};\n    ARCHIVE_LINES = opts.length || 30;\n    MSG_WIDTH = opts.width || 80;\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        ARCHIVE[i] = null;\n        CONFIRMED[i] = false;\n    }\n}\n////////////////////////////////////\n// Messages\nexport function add(msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    commitCombatMessage();\n    addMessage(msg);\n}\nexport function fromActor(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        add(msg, args);\n    }\n}\nexport function forPlayer(actor, msg, args) {\n    if (!actor.isPlayer())\n        return;\n    add(msg, args);\n}\nexport function addCombat(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        const template = templates[msg];\n        if (template) {\n            msg = template(args);\n        }\n        else if (args) {\n            msg = Text.apply(msg, args);\n        }\n        addCombatMessage(msg);\n    }\n}\n// function messageWithoutCaps(msg, requireAcknowledgment) {\nfunction addMessageLine(msg) {\n    if (!Text.length(msg)) {\n        return;\n    }\n    // Add the message to the archive.\n    ARCHIVE[NEXT_WRITE_INDEX] = msg;\n    CONFIRMED[NEXT_WRITE_INDEX] = false;\n    NEXT_WRITE_INDEX = (NEXT_WRITE_INDEX + 1) % ARCHIVE_LINES;\n}\nfunction addMessage(msg) {\n    var _a;\n    msg = Text.capitalize(msg);\n    // // Implement the American quotation mark/period/comma ordering rule.\n    // for (i=0; text.text[i] && text.text[i+1]; i++) {\n    //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n    //         i += 4;\n    //     } else if (text.text[i] === '\"'\n    //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n    // \t\t{\n    // \t\t\tconst replace = text.text[i+1] + '\"';\n    // \t\t\ttext.spliceRaw(i, 2, replace);\n    //     }\n    // }\n    const lines = Text.splitIntoLines(msg, MSG_WIDTH);\n    if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n        lines.reverse();\n    }\n    lines.forEach((l) => addMessageLine(l));\n    // display the message:\n    NEEDS_UPDATE = true;\n    // if (GAME.playbackMode) {\n    // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n    // }\n}\nfunction addCombatMessage(msg) {\n    if (!COMBAT_MESSAGE) {\n        COMBAT_MESSAGE = msg;\n    }\n    else {\n        COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n    }\n    NEEDS_UPDATE = true;\n}\nfunction commitCombatMessage() {\n    if (!COMBAT_MESSAGE)\n        return false;\n    addMessage(COMBAT_MESSAGE + '.');\n    COMBAT_MESSAGE = null;\n    return true;\n}\nexport function confirmAll() {\n    for (let i = 0; i < CONFIRMED.length; i++) {\n        CONFIRMED[i] = true;\n    }\n    NEEDS_UPDATE = true;\n}\nexport function forEach(fn) {\n    commitCombatMessage();\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        const n = (ARCHIVE_LINES - i + NEXT_WRITE_INDEX - 1) % ARCHIVE_LINES;\n        const msg = ARCHIVE[n];\n        if (!msg)\n            return;\n        if (fn(msg, CONFIRMED[n], i) === false)\n            return;\n    }\n}\n//# sourceMappingURL=message.js.map","import { fl as Fl } from '../flag';\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Effect;\n(function (Effect) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    Effect[Effect[\"E_NEXT_ALWAYS\"] = Fl(0)] = \"E_NEXT_ALWAYS\";\n    Effect[Effect[\"E_NEXT_EVERYWHERE\"] = Fl(1)] = \"E_NEXT_EVERYWHERE\";\n    // E_NO_REDRAW_CELL = Fl(2),\n    Effect[Effect[\"E_TREAT_AS_BLOCKING\"] = Fl(3)] = \"E_TREAT_AS_BLOCKING\";\n    Effect[Effect[\"E_PERMIT_BLOCKING\"] = Fl(4)] = \"E_PERMIT_BLOCKING\";\n    Effect[Effect[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(5)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Effect[Effect[\"E_BLOCKED_BY_ITEMS\"] = Fl(6)] = \"E_BLOCKED_BY_ITEMS\";\n    Effect[Effect[\"E_BLOCKED_BY_ACTORS\"] = Fl(7)] = \"E_BLOCKED_BY_ACTORS\";\n    Effect[Effect[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(8)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Effect[Effect[\"E_SUPERPRIORITY\"] = Fl(9)] = \"E_SUPERPRIORITY\";\n    Effect[Effect[\"E_NO_MARK_FIRED\"] = Fl(11)] = \"E_NO_MARK_FIRED\";\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    Effect[Effect[\"E_PROTECTED\"] = Fl(12)] = \"E_PROTECTED\";\n    Effect[Effect[\"E_SPREAD_CIRCLE\"] = Fl(13)] = \"E_SPREAD_CIRCLE\";\n    Effect[Effect[\"E_SPREAD_LINE\"] = Fl(14)] = \"E_SPREAD_LINE\";\n    // E_NULL_SURFACE = Fl(15), // Clear the surface layer\n    // E_NULL_LIQUID = Fl(16), // Clear liquid layer\n    // E_NULL_GAS = Fl(17), // Clear gas layer\n    Effect[Effect[\"E_EVACUATE_CREATURES\"] = Fl(18)] = \"E_EVACUATE_CREATURES\";\n    Effect[Effect[\"E_EVACUATE_ITEMS\"] = Fl(19)] = \"E_EVACUATE_ITEMS\";\n    Effect[Effect[\"E_BUILD_IN_WALLS\"] = Fl(20)] = \"E_BUILD_IN_WALLS\";\n    Effect[Effect[\"E_MUST_TOUCH_WALLS\"] = Fl(21)] = \"E_MUST_TOUCH_WALLS\";\n    Effect[Effect[\"E_NO_TOUCH_WALLS\"] = Fl(22)] = \"E_NO_TOUCH_WALLS\";\n    Effect[Effect[\"E_FIRED\"] = Fl(23)] = \"E_FIRED\";\n    Effect[Effect[\"E_CLEAR_GROUND\"] = Fl(17)] = \"E_CLEAR_GROUND\";\n    Effect[Effect[\"E_CLEAR_SURFACE\"] = Fl(24)] = \"E_CLEAR_SURFACE\";\n    Effect[Effect[\"E_CLEAR_LIQUID\"] = Fl(25)] = \"E_CLEAR_LIQUID\";\n    Effect[Effect[\"E_CLEAR_GAS\"] = Fl(26)] = \"E_CLEAR_GAS\";\n    Effect[Effect[\"E_CLEAR_CELL\"] = Effect.E_CLEAR_GROUND |\n        Effect.E_CLEAR_SURFACE |\n        Effect.E_CLEAR_LIQUID |\n        Effect.E_CLEAR_GAS] = \"E_CLEAR_CELL\";\n    Effect[Effect[\"E_ONLY_IF_EMPTY\"] = Effect.E_BLOCKED_BY_ITEMS | Effect.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    Effect[Effect[\"E_ACTIVATE_DORMANT_MONSTER\"] = Fl(27)] = \"E_ACTIVATE_DORMANT_MONSTER\";\n    Effect[Effect[\"E_AGGRAVATES_MONSTERS\"] = Fl(28)] = \"E_AGGRAVATES_MONSTERS\";\n    Effect[Effect[\"E_RESURRECT_ALLY\"] = Fl(29)] = \"E_RESURRECT_ALLY\";\n    Effect[Effect[\"E_EMIT_EVENT\"] = Fl(30)] = \"E_EMIT_EVENT\";\n})(Effect || (Effect = {}));\n//# sourceMappingURL=flags.js.map","import { from as fromFlag } from '../flag';\nimport { data as DATA } from '../gw';\nimport * as Grid from '../grid';\nimport { random } from '../random';\nimport { Effect as Flags } from './flags';\nexport async function fire(effect, map, x, y, ctx_ = {}) {\n    if (!effect)\n        return false;\n    if (typeof effect === 'string') {\n        const name = effect;\n        effect = from(name);\n        if (!effect)\n            throw new Error('Failed to find effect: ' + name);\n    }\n    const ctx = ctx_;\n    if (!ctx.force && effect.chance && !random.chance(effect.chance, 10000))\n        return false;\n    const grid = (ctx.grid = Grid.alloc(map.width, map.height));\n    let didSomething = true;\n    const handlers = Object.values(effectTypes);\n    for (let h of handlers) {\n        if (await h.fire(effect, map, x, y, ctx)) {\n            didSomething = true;\n        }\n    }\n    // bookkeeping\n    if (didSomething &&\n        map.isVisible(x, y) &&\n        !(effect.flags & Flags.E_NO_MARK_FIRED)) {\n        effect.flags |= Flags.E_FIRED;\n    }\n    // do the next effect - if applicable\n    if (effect.next &&\n        (didSomething || effect.flags & Flags.E_NEXT_ALWAYS) &&\n        !DATA.gameHasEnded) {\n        const nextInfo = typeof effect.next === 'string' ? from(effect.next) : effect.next;\n        if (effect.flags & Flags.E_NEXT_EVERYWHERE) {\n            await grid.forEachAsync(async (v, i, j) => {\n                if (!v)\n                    return;\n                // @ts-ignore\n                await fire(nextInfo, map, i, j, ctx);\n            });\n        }\n        else {\n            await fire(nextInfo, map, x, y, ctx);\n        }\n    }\n    Grid.free(grid);\n    return didSomething;\n}\n// resetMessageDisplayed\nexport function reset(effect) {\n    effect.flags &= ~Flags.E_FIRED;\n}\nexport function resetAll() {\n    Object.values(effects).forEach((e) => reset(e));\n}\nexport const effects = {};\nexport function make(opts) {\n    var _a;\n    if (!opts)\n        throw new Error('opts required to make effect.');\n    if (typeof opts === 'string') {\n        throw new Error('Cannot make effect from string: ' + opts);\n    }\n    if (typeof opts === 'function') {\n        opts = { fn: opts };\n    }\n    // now make base effect stuff\n    const info = {\n        flags: fromFlag(Flags, opts.flags),\n        chance: (_a = opts.chance) !== null && _a !== void 0 ? _a : 0,\n        next: null,\n        id: opts.id || 'n/a',\n    };\n    if (opts.next) {\n        if (typeof opts.next === 'string') {\n            info.next = opts.next;\n        }\n        else {\n            info.next = make(opts.next);\n        }\n    }\n    // and all the handlers\n    Object.values(effectTypes).forEach((v) => v.make(opts, info));\n    return info;\n}\nexport function from(opts) {\n    if (!opts)\n        throw new Error('Cannot make effect from null | undefined');\n    if (typeof opts === 'string') {\n        const effect = effects[opts];\n        if (effect)\n            return effect;\n        throw new Error('Unknown effect - ' + opts);\n    }\n    return make(opts);\n}\nexport function install(id, config) {\n    const effect = make(config);\n    effects[id] = effect;\n    effect.id = id;\n    return effect;\n}\nexport function installAll(effects) {\n    Object.entries(effects).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport const effectTypes = {};\nexport function installType(id, effectType) {\n    effectTypes[id] = effectType;\n}\n//# sourceMappingURL=effect.js.map","import * as EFFECT from './effect';\nimport { Effect as Flags } from './flags';\nimport * as Msg from '../message';\n//////////////////////////////////////////////\n// MESSAGE\nexport class MessageEffect {\n    make(src, dest) {\n        if (!src.message)\n            return true;\n        if (typeof src.message !== 'string') {\n            throw new Error('Emit must be configured with name of event to emit');\n        }\n        dest.message = src.message;\n        return true;\n    }\n    async fire(config, map, x, y, ctx) {\n        if (!config.message)\n            return false;\n        const fired = config.flags & Flags.E_FIRED ? true : false;\n        if (config.message &&\n            config.message.length &&\n            !fired &&\n            map.isVisible(x, y)) {\n            Msg.add(config.message, ctx);\n            return true;\n        }\n        return false;\n    }\n}\nEFFECT.installType('message', new MessageEffect());\n//# sourceMappingURL=message.js.map","import * as EFFECT from './effect';\nimport * as Events from '../events';\n//////////////////////////////////////////////\n// EMIT\nexport class EmitEffect {\n    make(src, dest) {\n        if (!src.emit)\n            return true;\n        if (typeof src.emit !== 'string') {\n            throw new Error('emit effects must be string name to emit: { emit: \"EVENT\" }');\n        }\n        dest.emit = src.emit;\n        return true;\n    }\n    async fire(config, _map, x, y, ctx) {\n        if (config.emit) {\n            return await Events.emit(config.emit, x, y, ctx);\n        }\n        return false;\n    }\n}\nEFFECT.installType('emit', new EmitEffect());\n//# sourceMappingURL=emit.js.map","import * as EFFECT from './effect';\n//////////////////////////////////////////////\n// FN\nclass FnEffect {\n    make(src, dest) {\n        if (!src.fn)\n            return true;\n        if (typeof src.fn !== 'function') {\n            throw new Error('fn effects must be functions.');\n        }\n        dest.fn = src.fn;\n        return true;\n    }\n    async fire(config, map, x, y, ctx) {\n        if (config.fn) {\n            return await config.fn(config, map, x, y, ctx);\n        }\n        return false;\n    }\n}\nEFFECT.installType('fn', new FnEffect());\n//# sourceMappingURL=fn.js.map","import * as UTILS from './utils';\nimport * as GRID from './grid';\nimport { random } from './random';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new UTILS.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = random.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < UTILS.DIRS.length; dir++) {\n                    newX = i + UTILS.DIRS[dir][0];\n                    newY = j + UTILS.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import { fl as Fl } from '../flag';\nexport var GameObject;\n(function (GameObject) {\n    // L_DYNAMIC = Fl(0), // for movable things like actors or items\n    GameObject[GameObject[\"L_SUPERPRIORITY\"] = Fl(1)] = \"L_SUPERPRIORITY\";\n    GameObject[GameObject[\"L_SECRETLY_PASSABLE\"] = Fl(2)] = \"L_SECRETLY_PASSABLE\";\n    GameObject[GameObject[\"L_BLOCKS_MOVE\"] = Fl(3)] = \"L_BLOCKS_MOVE\";\n    GameObject[GameObject[\"L_BLOCKS_VISION\"] = Fl(4)] = \"L_BLOCKS_VISION\";\n    GameObject[GameObject[\"L_BLOCKS_SURFACE\"] = Fl(6)] = \"L_BLOCKS_SURFACE\";\n    GameObject[GameObject[\"L_BLOCKS_LIQUID\"] = Fl(8)] = \"L_BLOCKS_LIQUID\";\n    GameObject[GameObject[\"L_BLOCKS_GAS\"] = Fl(7)] = \"L_BLOCKS_GAS\";\n    GameObject[GameObject[\"L_BLOCKS_ITEMS\"] = Fl(5)] = \"L_BLOCKS_ITEMS\";\n    GameObject[GameObject[\"L_BLOCKS_ACTORS\"] = Fl(11)] = \"L_BLOCKS_ACTORS\";\n    GameObject[GameObject[\"L_BLOCKS_EFFECTS\"] = Fl(9)] = \"L_BLOCKS_EFFECTS\";\n    GameObject[GameObject[\"L_BLOCKS_DIAGONAL\"] = Fl(10)] = \"L_BLOCKS_DIAGONAL\";\n    GameObject[GameObject[\"L_INTERRUPT_WHEN_SEEN\"] = Fl(11)] = \"L_INTERRUPT_WHEN_SEEN\";\n    GameObject[GameObject[\"L_LIST_IN_SIDEBAR\"] = Fl(12)] = \"L_LIST_IN_SIDEBAR\";\n    GameObject[GameObject[\"L_VISUALLY_DISTINCT\"] = Fl(13)] = \"L_VISUALLY_DISTINCT\";\n    GameObject[GameObject[\"L_BRIGHT_MEMORY\"] = Fl(14)] = \"L_BRIGHT_MEMORY\";\n    GameObject[GameObject[\"L_INVERT_WHEN_HIGHLIGHTED\"] = Fl(15)] = \"L_INVERT_WHEN_HIGHLIGHTED\";\n    GameObject[GameObject[\"L_BLOCKED_BY_STAIRS\"] = GameObject.L_BLOCKS_ITEMS |\n        GameObject.L_BLOCKS_SURFACE |\n        GameObject.L_BLOCKS_GAS |\n        GameObject.L_BLOCKS_LIQUID |\n        GameObject.L_BLOCKS_EFFECTS |\n        GameObject.L_BLOCKS_ACTORS] = \"L_BLOCKED_BY_STAIRS\";\n    GameObject[GameObject[\"L_BLOCKS_SCENT\"] = GameObject.L_BLOCKS_MOVE | GameObject.L_BLOCKS_VISION] = \"L_BLOCKS_SCENT\";\n    GameObject[GameObject[\"L_DIVIDES_LEVEL\"] = GameObject.L_BLOCKS_MOVE] = \"L_DIVIDES_LEVEL\";\n    GameObject[GameObject[\"L_WAYPOINT_BLOCKER\"] = GameObject.L_BLOCKS_MOVE] = \"L_WAYPOINT_BLOCKER\";\n    GameObject[GameObject[\"L_IS_WALL\"] = GameObject.L_BLOCKS_MOVE |\n        GameObject.L_BLOCKS_VISION |\n        GameObject.L_BLOCKS_LIQUID |\n        GameObject.L_BLOCKS_GAS |\n        GameObject.L_BLOCKS_EFFECTS |\n        GameObject.L_BLOCKS_DIAGONAL] = \"L_IS_WALL\";\n    GameObject[GameObject[\"L_BLOCKS_EVERYTHING\"] = GameObject.L_IS_WALL |\n        GameObject.L_BLOCKS_ITEMS |\n        GameObject.L_BLOCKS_ACTORS |\n        GameObject.L_BLOCKS_SURFACE] = \"L_BLOCKS_EVERYTHING\";\n})(GameObject || (GameObject = {}));\nexport var Depth;\n(function (Depth) {\n    Depth[Depth[\"ALL_LAYERS\"] = -1] = \"ALL_LAYERS\";\n    Depth[Depth[\"GROUND\"] = 0] = \"GROUND\";\n    Depth[Depth[\"SURFACE\"] = 1] = \"SURFACE\";\n    Depth[Depth[\"ITEM\"] = 2] = \"ITEM\";\n    Depth[Depth[\"ACTOR\"] = 3] = \"ACTOR\";\n    Depth[Depth[\"LIQUID\"] = 4] = \"LIQUID\";\n    Depth[Depth[\"GAS\"] = 5] = \"GAS\";\n    Depth[Depth[\"FX\"] = 6] = \"FX\";\n    Depth[Depth[\"UI\"] = 7] = \"UI\";\n})(Depth || (Depth = {}));\n//# sourceMappingURL=flags.js.map","import { Sprite } from '../sprite';\nexport class GameObject {\n    constructor() {\n        this.sprite = new Sprite();\n        this.depth = 1; // default - TODO - enum/const\n        this.light = null;\n        this.flags = { object: 0 };\n        this.next = null;\n        this.x = -1;\n        this.y = -1;\n    }\n    hasObjectFlag(flag) {\n        return !!(this.flags.object & flag);\n    }\n    hasAllObjectFlags(flags) {\n        return (this.flags.object & flags) === flags;\n    }\n}\n//# sourceMappingURL=gameObject.js.map","import * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, range, fadeTo, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color) || null; /* color */\n        this.radius = Range.make(range || 1);\n        this.fadeTo = fadeTo || 0;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(map, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!map)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(map.width, map.height, 0);\n        map.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (Utils.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS[k] * lightMultiplier) / 100);\n            }\n            map.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    return Math.max(light[0], light[1], light[2]);\n}\nexport function isDarkLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_DARK;\n    return intensity(light) <= (threshold || 20);\n}\nexport function isShadowLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_SHADOW;\n    return intensity(light) <= (threshold || 20);\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    if (source)\n        source.id = id;\n    return source;\n}\nexport function installAll(config = {}) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as Utils from '../utils';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this._changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get anyLightChanged() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    get changed() {\n        return this._changed;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        Utils.eachChain(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this._changed = false;\n        if (!force && !this.anyLightChanged)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT && PLAYERS_LIGHT.radius) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this._changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        Utils.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const map = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && map.hasActor(x, y))\n                    return false;\n                return map.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return map.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map","import { fl as Fl } from '../flag';\n///////////////////////////////////////////////////////\n// TILE\nexport var Tile;\n(function (Tile) {\n    Tile[Tile[\"T_BRIDGE\"] = Fl(0)] = \"T_BRIDGE\";\n    Tile[Tile[\"T_AUTO_DESCENT\"] = Fl(1)] = \"T_AUTO_DESCENT\";\n    Tile[Tile[\"T_LAVA\"] = Fl(2)] = \"T_LAVA\";\n    Tile[Tile[\"T_DEEP_WATER\"] = Fl(3)] = \"T_DEEP_WATER\";\n    Tile[Tile[\"T_IS_FLAMMABLE\"] = Fl(4)] = \"T_IS_FLAMMABLE\";\n    Tile[Tile[\"T_SPONTANEOUSLY_IGNITES\"] = Fl(5)] = \"T_SPONTANEOUSLY_IGNITES\";\n    Tile[Tile[\"T_IS_FIRE\"] = Fl(6)] = \"T_IS_FIRE\";\n    Tile[Tile[\"T_EXTINGUISHES_FIRE\"] = Fl(7)] = \"T_EXTINGUISHES_FIRE\";\n    Tile[Tile[\"T_IS_SECRET\"] = Fl(8)] = \"T_IS_SECRET\";\n    Tile[Tile[\"T_IS_TRAP\"] = Fl(9)] = \"T_IS_TRAP\";\n    Tile[Tile[\"T_SACRED\"] = Fl(10)] = \"T_SACRED\";\n    Tile[Tile[\"T_UP_STAIRS\"] = Fl(11)] = \"T_UP_STAIRS\";\n    Tile[Tile[\"T_DOWN_STAIRS\"] = Fl(12)] = \"T_DOWN_STAIRS\";\n    Tile[Tile[\"T_PORTAL\"] = Fl(13)] = \"T_PORTAL\";\n    Tile[Tile[\"T_IS_DOOR\"] = Fl(14)] = \"T_IS_DOOR\";\n    Tile[Tile[\"T_ALLOWS_SUBMERGING\"] = Fl(15)] = \"T_ALLOWS_SUBMERGING\";\n    Tile[Tile[\"T_ENTANGLES\"] = Fl(16)] = \"T_ENTANGLES\";\n    Tile[Tile[\"T_REFLECTS\"] = Fl(17)] = \"T_REFLECTS\";\n    Tile[Tile[\"T_STAND_IN_TILE\"] = Fl(18)] = \"T_STAND_IN_TILE\";\n    Tile[Tile[\"T_CONNECTS_LEVEL\"] = Fl(19)] = \"T_CONNECTS_LEVEL\";\n    Tile[Tile[\"T_BLOCKS_OTHER_LAYERS\"] = Fl(20)] = \"T_BLOCKS_OTHER_LAYERS\";\n    Tile[Tile[\"T_HAS_STAIRS\"] = Tile.T_UP_STAIRS | Tile.T_DOWN_STAIRS | Tile.T_PORTAL] = \"T_HAS_STAIRS\";\n    Tile[Tile[\"T_OBSTRUCTS_SCENT\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_HAS_STAIRS] = \"T_OBSTRUCTS_SCENT\";\n    Tile[Tile[\"T_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_IS_FIRE |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_ENTANGLES] = \"T_PATHING_BLOCKER\";\n    Tile[Tile[\"T_DIVIDES_LEVEL\"] = Tile.T_AUTO_DESCENT | Tile.T_IS_TRAP | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_DIVIDES_LEVEL\";\n    Tile[Tile[\"T_LAKE_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_LAKE_PATHING_BLOCKER\";\n    Tile[Tile[\"T_WAYPOINT_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_WAYPOINT_BLOCKER\";\n    Tile[Tile[\"T_MOVES_ITEMS\"] = Tile.T_DEEP_WATER | Tile.T_LAVA] = \"T_MOVES_ITEMS\";\n    Tile[Tile[\"T_CAN_BE_BRIDGED\"] = Tile.T_AUTO_DESCENT | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_CAN_BE_BRIDGED\";\n    // T_HARMFUL_TERRAIN = T_CAUSES_POISON |\n    //   T_IS_FIRE |\n    //   T_CAUSES_DAMAGE |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_EXPLOSIVE_DAMAGE,\n    // T_RESPIRATION_IMMUNITIES = T_CAUSES_DAMAGE |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_NAUSEA,\n    Tile[Tile[\"T_IS_DEEP_LIQUID\"] = Tile.T_LAVA | Tile.T_AUTO_DESCENT | Tile.T_DEEP_WATER] = \"T_IS_DEEP_LIQUID\";\n})(Tile || (Tile = {}));\n///////////////////////////////////////////////////////\n// TILE MECH\nexport var TileMech;\n(function (TileMech) {\n    // TM_PROMOTES_WITH_KEY = Fl(1), // promotes if the key is present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_WITHOUT_KEY = Fl(2), // promotes if the key is NOT present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_ON_STEP = Fl(3), // promotes when a creature, player or item is on the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ITEM_REMOVE = Fl(4), // promotes when an item is lifted from the tile (primarily for altars)\n    // TM_PROMOTES_ON_PLAYER_ENTRY = Fl(5), // promotes when the player enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_SACRIFICE_ENTRY = Fl(6), // promotes when the sacrifice target enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ELECTRICITY = Fl(7), // promotes when hit by a lightning bolt\n    // T_CAUSES_POISON = Fl(18), // any non-levitating creature gets 10 poison\n    // T_CAUSES_DAMAGE = Fl(19), // anything on the tile takes max(1-2, 10%) damage per turn\n    // T_CAUSES_NAUSEA = Fl(20), // any creature on the tile becomes nauseous\n    // T_CAUSES_PARALYSIS = Fl(21), // anything caught on this tile is paralyzed\n    // T_CAUSES_CONFUSION = Fl(22), // causes creatures on this tile to become confused\n    // T_CAUSES_HEALING = Fl(23), // heals 20% max HP per turn for any player or non-inanimate monsters\n    // T_CAUSES_EXPLOSIVE_DAMAGE = Fl(25), // is an explosion; deals higher of 15-20 or 50% damage instantly, but not again for five turns\n    TileMech[TileMech[\"TM_IS_WIRED\"] = Fl(9)] = \"TM_IS_WIRED\";\n    TileMech[TileMech[\"TM_IS_CIRCUIT_BREAKER\"] = Fl(10)] = \"TM_IS_CIRCUIT_BREAKER\";\n    TileMech[TileMech[\"TM_VANISHES_UPON_PROMOTION\"] = Fl(15)] = \"TM_VANISHES_UPON_PROMOTION\";\n    TileMech[TileMech[\"TM_EXPLOSIVE_PROMOTE\"] = Fl(21)] = \"TM_EXPLOSIVE_PROMOTE\";\n    TileMech[TileMech[\"TM_SWAP_ENCHANTS_ACTIVATION\"] = Fl(25)] = \"TM_SWAP_ENCHANTS_ACTIVATION\";\n    // TM_PROMOTES = TM_PROMOTES_WITH_KEY |\n    //   TM_PROMOTES_WITHOUT_KEY |\n    //   TM_PROMOTES_ON_STEP |\n    //   TM_PROMOTES_ON_ITEM_REMOVE |\n    //   TM_PROMOTES_ON_SACRIFICE_ENTRY |\n    //   TM_PROMOTES_ON_ELECTRICITY |\n    //   TM_PROMOTES_ON_PLAYER_ENTRY,\n})(TileMech || (TileMech = {}));\n//# sourceMappingURL=flags.js.map","import { Depth, GameObject as ObjectFlags, } from '../gameObject/flags';\nimport * as Light from '../light';\nimport * as Sprite from '../sprite';\nimport * as Flag from '../flag';\nimport * as Effect from '../effect';\nimport * as Flags from './flags';\nimport * as Color from '../color';\nexport class Tile {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this.index = -1;\n        this.dissipate = 20 * 100; // 0%\n        this.effects = {};\n        this.priority = 50;\n        this.depth = 0;\n        this.light = null;\n        this.id = config.id || 'n/a';\n        this.dissipate = (_a = config.dissipate) !== null && _a !== void 0 ? _a : this.dissipate;\n        this.priority = (_b = config.priority) !== null && _b !== void 0 ? _b : this.priority;\n        this.depth = (_c = config.depth) !== null && _c !== void 0 ? _c : this.depth;\n        this.light = config.light || null;\n        // this.groundTile = config.groundTile || null; // Huh?\n        this.sprite = Sprite.make(config);\n        this.name = config.name || 'tile';\n        this.description = config.description || this.name;\n        this.flavor = config.flavor || this.name;\n        this.article = (_d = config.article) !== null && _d !== void 0 ? _d : null;\n        this.flags = config.flags || { object: 0, tile: 0, tileMech: 0 };\n        if (config.effects) {\n            Object.assign(this.effects, config.effects);\n        }\n    }\n    hasObjectFlag(flag) {\n        return !!(this.flags.object & flag);\n    }\n    hasTileFlag(flag) {\n        return !!(this.flags.tile & flag);\n    }\n    hasTileMechFlag(flag) {\n        return !!(this.flags.tileMech & flag);\n    }\n    hasAllObjectFlags(flag) {\n        return (this.flags.object & flag) === flag;\n    }\n    hasAllTileFlags(flag) {\n        return (this.flags.tile & flag) === flag;\n    }\n    hasAllTileMechFlags(flag) {\n        return (this.flags.tileMech & flag) === flag;\n    }\n    blocksVision() {\n        return !!(this.flags.object & ObjectFlags.L_BLOCKS_VISION);\n    }\n    blocksMove() {\n        return !!(this.flags.object & ObjectFlags.L_BLOCKS_MOVE);\n    }\n    blocksPathing() {\n        return (this.blocksMove() || this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    blocksEffects() {\n        return !!(this.flags.object & ObjectFlags.L_BLOCKS_EFFECTS);\n    }\n    hasEffect(name) {\n        return name in this.effects;\n    }\n    getName(arg) {\n        let opts = {};\n        if (arg === true || arg === false) {\n            opts.article = arg;\n        }\n        else if (typeof arg === 'string') {\n            opts.article = arg;\n        }\n        else if (arg) {\n            opts = arg;\n        }\n        if (!opts.article && !opts.color)\n            return this.name;\n        let result = this.name;\n        if (opts.color) {\n            let color = opts.color;\n            if (opts.color === true) {\n                color = this.sprite.fg || 'white';\n            }\n            if (typeof color !== 'string') {\n                color = Color.from(color).toString();\n            }\n            result = `Ω${color}Ω${this.name}∆`;\n        }\n        if (opts.article) {\n            let article = typeof opts.article === 'string'\n                ? opts.article\n                : this.article || 'a';\n            result = article + ' ' + result;\n        }\n        return result;\n    }\n    getDescription() {\n        return this.description || this.getName();\n    }\n    getFlavor() {\n        return this.flavor || this.getName();\n    }\n}\nexport function make(options) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    let base = { effects: {}, flags: {}, sprite: {} };\n    if (options.extends) {\n        base = tiles[options.extends];\n        if (!base)\n            throw new Error('Failed to find base tile: ' + options.extends);\n    }\n    const effects = {};\n    Object.assign(effects, base.effects);\n    if (options.effects) {\n        Object.entries(options.effects).forEach(([key, value]) => {\n            if (value === null) {\n                delete effects[key];\n                return;\n            }\n            if (typeof value === 'string') {\n                effects[key] = value;\n                return;\n            }\n            effects[key] = Effect.make(value);\n        });\n    }\n    const flags = {\n        object: Flag.from(ObjectFlags, base.flags.object, options.flags),\n        tile: Flag.from(Flags.Tile, base.flags.tile, options.flags),\n        tileMech: Flag.from(Flags.TileMech, base.flags.tileMech, options.flags),\n    };\n    let depth = base.depth || 0;\n    if (options.depth) {\n        if (typeof options.depth === 'string') {\n            depth = Depth[options.depth];\n        }\n        else {\n            depth = options.depth;\n        }\n    }\n    let light = base.light;\n    if (options.light) {\n        light = Light.make(options.light);\n    }\n    else if (options.light === null) {\n        light = null;\n    }\n    const config = {\n        id: options.id,\n        flags,\n        dissipate: (_a = options.dissipate) !== null && _a !== void 0 ? _a : base.dissipate,\n        effects,\n        priority: (_b = options.priority) !== null && _b !== void 0 ? _b : base.priority,\n        depth: depth,\n        light,\n        groundTile: null,\n        ch: (_c = options.ch) !== null && _c !== void 0 ? _c : base.sprite.ch,\n        fg: (_d = options.fg) !== null && _d !== void 0 ? _d : base.sprite.fg,\n        bg: (_e = options.bg) !== null && _e !== void 0 ? _e : base.sprite.bg,\n        opacity: (_f = options.opacity) !== null && _f !== void 0 ? _f : base.sprite.opacity,\n        name: options.name || base.name,\n        description: options.description || base.description,\n        flavor: options.flavor || base.flavor,\n        article: (_g = options.article) !== null && _g !== void 0 ? _g : base.article,\n    };\n    const tile = new Tile(config);\n    return tile;\n}\nexport const tiles = {};\nexport const all = [];\nexport function get(id) {\n    if (typeof id === 'string')\n        return tiles[id];\n    return all[id];\n}\nexport function install(id, ...args) {\n    let options = args[0];\n    if (args.length == 2) {\n        options = args[1];\n        options.extends = args[0];\n    }\n    options.id = id;\n    const tile = make(options);\n    tile.index = all.length;\n    all.push(tile);\n    tiles[id] = tile;\n    return tile;\n}\nexport function installAll(tiles) {\n    Object.entries(tiles).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\n//# sourceMappingURL=tile.js.map","import * as Tile from './tile';\n// These are the minimal set of tiles to make the diggers work\nTile.install('NULL', {\n    ch: '\\u2205',\n    fg: 'white',\n    bg: 'black',\n    flags: 'L_BLOCKS_MOVE',\n    name: 'eerie nothingness',\n    article: 'an',\n    priority: 0,\n});\nTile.install('FLOOR', {\n    ch: '\\u00b7',\n    fg: [30, 30, 30, 20, 0, 0, 0],\n    bg: [2, 2, 10, 0, 2, 2, 0],\n    priority: 10,\n    article: 'the',\n});\nTile.install('DOOR', {\n    ch: '+',\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 30,\n    flags: 'T_IS_DOOR, L_BLOCKS_EFFECTS, L_BLOCKS_ITEMS, L_BLOCKS_VISION, L_VISUALLY_DISTINCT',\n    article: 'a',\n    effects: {\n        enter: { tile: 'DOOR_OPEN' },\n        open: { tile: 'DOOR_OPEN_ALWAYS' },\n    },\n});\nTile.install('DOOR_OPEN', 'DOOR', {\n    ch: \"'\",\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 40,\n    flags: '!L_BLOCKS_ITEMS, !L_BLOCKS_VISION',\n    name: 'open door',\n    article: 'an',\n    effects: {\n        tick: {\n            chance: 100 * 100,\n            tile: 'DOOR',\n            flags: 'E_SUPERPRIORITY, E_ONLY_IF_EMPTY',\n        },\n        enter: null,\n        open: null,\n        close: { tile: 'DOOR', flags: 'E_SUPERPRIORITY, E_ONLY_IF_EMPTY' },\n    },\n});\nTile.install('DOOR_OPEN_ALWAYS', 'DOOR_OPEN', {\n    effects: {\n        tick: null,\n        close: { tile: 'DOOR', flags: 'E_SUPERPRIORITY, E_ONLY_IF_EMPTY' },\n    },\n});\nTile.install('UP_STAIRS', {\n    ch: '<',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_UP_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, L_LIST_IN_SIDEBAR',\n    name: 'upward staircase',\n    article: 'an',\n    effects: {\n        player: { emit: 'UP_STAIRS' },\n    },\n});\nTile.install('DOWN_STAIRS', {\n    ch: '>',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_DOWN_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, L_LIST_IN_SIDEBAR',\n    name: 'downward staircase',\n    article: 'a',\n    effects: {\n        player: { emit: 'DOWN_STAIRS' },\n    },\n});\nTile.install('WALL', {\n    ch: '#',\n    fg: [7, 7, 7, 0, 3, 3, 3],\n    bg: [40, 40, 40, 10, 10, 0, 5],\n    priority: 100,\n    flags: 'L_BLOCKS_EVERYTHING',\n    article: 'a',\n    name: 'stone wall',\n    description: 'A wall made from rough cut stone.',\n    flavor: 'a rough stone wall',\n});\nTile.install('IMPREGNABLE', {\n    ch: '#',\n    fg: [7, 7, 7, 0, 3, 3, 3],\n    bg: [40, 40, 40, 10, 10, 0, 5],\n    priority: 100,\n    flags: 'L_BLOCKS_EVERYTHING, IMPREGNABLE',\n    article: 'a',\n    name: 'impregnable wall',\n    description: 'A wall made from very hard stone.',\n    flavor: 'an impregnable wall',\n});\nTile.install('LAKE', {\n    ch: '~',\n    fg: [5, 8, 20, 10, 0, 4, 15, true],\n    bg: [10, 15, 41, 6, 5, 5, 5, true],\n    priority: 50,\n    flags: 'T_DEEP_WATER',\n    name: 'deep water',\n    article: 'the',\n});\nTile.install('SHALLOW', {\n    ch: '\\u00b7',\n    fg: [5, 8, 10, 10, 0, 4, 15, true],\n    bg: [10, 30, 30, 6, 0, 10, 10, true],\n    priority: 20,\n    name: 'shallow water',\n    article: 'the',\n    depth: 'SURFACE',\n});\nTile.install('BRIDGE', {\n    ch: '=',\n    fg: [100, 40, 40],\n    priority: 40,\n    depth: 'SURFACE',\n    flags: 'T_BRIDGE, L_VISUALLY_DISTINCT',\n    article: 'a',\n    groundTile: 'LAKE',\n});\n//# sourceMappingURL=tiles.js.map","import { Tile, TileMech } from './flags';\nexport const flags = { Tile, TileMech };\nexport * from './types';\nexport * from './tile';\nimport './tiles';\n//# sourceMappingURL=index.js.map","import { fl as Fl } from '../flag';\nexport { GameObject, Depth } from '../gameObject/flags';\nexport { Tile } from '../tile/flags';\n///////////////////////////////////////////////////////\n// CELL\nexport var Cell;\n(function (Cell) {\n    Cell[Cell[\"SEARCHED_FROM_HERE\"] = Fl(0)] = \"SEARCHED_FROM_HERE\";\n    Cell[Cell[\"PRESSURE_PLATE_DEPRESSED\"] = Fl(1)] = \"PRESSURE_PLATE_DEPRESSED\";\n    Cell[Cell[\"KNOWN_TO_BE_TRAP_FREE\"] = Fl(2)] = \"KNOWN_TO_BE_TRAP_FREE\";\n    Cell[Cell[\"CAUGHT_FIRE_THIS_TURN\"] = Fl(3)] = \"CAUGHT_FIRE_THIS_TURN\";\n    Cell[Cell[\"EVENT_FIRED_THIS_TURN\"] = Fl(4)] = \"EVENT_FIRED_THIS_TURN\";\n    Cell[Cell[\"EVENT_PROTECTED\"] = Fl(5)] = \"EVENT_PROTECTED\";\n    Cell[Cell[\"IS_IN_LOOP\"] = Fl(6)] = \"IS_IN_LOOP\";\n    Cell[Cell[\"IS_CHOKEPOINT\"] = Fl(7)] = \"IS_CHOKEPOINT\";\n    Cell[Cell[\"IS_GATE_SITE\"] = Fl(8)] = \"IS_GATE_SITE\";\n    Cell[Cell[\"IS_IN_ROOM_MACHINE\"] = Fl(9)] = \"IS_IN_ROOM_MACHINE\";\n    Cell[Cell[\"IS_IN_AREA_MACHINE\"] = Fl(10)] = \"IS_IN_AREA_MACHINE\";\n    Cell[Cell[\"IS_POWERED\"] = Fl(11)] = \"IS_POWERED\";\n    Cell[Cell[\"IMPREGNABLE\"] = Fl(12)] = \"IMPREGNABLE\";\n    // DARKENED = Fl(13), // magical blindness?\n    Cell[Cell[\"NEEDS_REDRAW\"] = Fl(14)] = \"NEEDS_REDRAW\";\n    Cell[Cell[\"CELL_CHANGED\"] = Fl(15)] = \"CELL_CHANGED\";\n    // These are to help memory\n    Cell[Cell[\"HAS_SURFACE\"] = Fl(16)] = \"HAS_SURFACE\";\n    Cell[Cell[\"HAS_LIQUID\"] = Fl(17)] = \"HAS_LIQUID\";\n    Cell[Cell[\"HAS_GAS\"] = Fl(18)] = \"HAS_GAS\";\n    Cell[Cell[\"HAS_PLAYER\"] = Fl(19)] = \"HAS_PLAYER\";\n    Cell[Cell[\"HAS_ACTOR\"] = Fl(20)] = \"HAS_ACTOR\";\n    Cell[Cell[\"HAS_DORMANT_MONSTER\"] = Fl(21)] = \"HAS_DORMANT_MONSTER\";\n    Cell[Cell[\"HAS_ITEM\"] = Fl(22)] = \"HAS_ITEM\";\n    Cell[Cell[\"IS_IN_PATH\"] = Fl(23)] = \"IS_IN_PATH\";\n    Cell[Cell[\"IS_CURSOR\"] = Fl(24)] = \"IS_CURSOR\";\n    Cell[Cell[\"STABLE_MEMORY\"] = Fl(25)] = \"STABLE_MEMORY\";\n    Cell[Cell[\"COLORS_DANCE\"] = Fl(30)] = \"COLORS_DANCE\";\n    Cell[Cell[\"IS_IN_MACHINE\"] = Cell.IS_IN_ROOM_MACHINE | Cell.IS_IN_AREA_MACHINE] = \"IS_IN_MACHINE\";\n    Cell[Cell[\"PERMANENT_CELL_FLAGS\"] = Cell.HAS_ITEM |\n        Cell.HAS_DORMANT_MONSTER |\n        Cell.STABLE_MEMORY |\n        Cell.SEARCHED_FROM_HERE |\n        Cell.PRESSURE_PLATE_DEPRESSED |\n        Cell.KNOWN_TO_BE_TRAP_FREE |\n        Cell.IS_IN_LOOP |\n        Cell.IS_CHOKEPOINT |\n        Cell.IS_GATE_SITE |\n        Cell.IS_IN_MACHINE |\n        Cell.IMPREGNABLE] = \"PERMANENT_CELL_FLAGS\";\n    Cell[Cell[\"HAS_ANY_ACTOR\"] = Cell.HAS_PLAYER | Cell.HAS_ACTOR] = \"HAS_ANY_ACTOR\";\n    Cell[Cell[\"HAS_ANY_OBJECT\"] = Cell.HAS_ITEM | Cell.HAS_ANY_ACTOR] = \"HAS_ANY_OBJECT\";\n    Cell[Cell[\"CELL_DEFAULT\"] = Cell.NEEDS_REDRAW | Cell.CELL_CHANGED] = \"CELL_DEFAULT\";\n})(Cell || (Cell = {}));\n///////////////////////////////////////////////////////\n// MAP\nexport var Map;\n(function (Map) {\n    Map[Map[\"MAP_CHANGED\"] = Fl(0)] = \"MAP_CHANGED\";\n    Map[Map[\"MAP_ALWAYS_LIT\"] = Fl(3)] = \"MAP_ALWAYS_LIT\";\n    Map[Map[\"MAP_SAW_WELCOME\"] = Fl(4)] = \"MAP_SAW_WELCOME\";\n    Map[Map[\"MAP_NO_LIQUID\"] = Fl(5)] = \"MAP_NO_LIQUID\";\n    Map[Map[\"MAP_NO_GAS\"] = Fl(6)] = \"MAP_NO_GAS\";\n    Map[Map[\"MAP_CALC_FOV\"] = Fl(7)] = \"MAP_CALC_FOV\";\n    Map[Map[\"MAP_FOV_CHANGED\"] = Fl(8)] = \"MAP_FOV_CHANGED\";\n    Map[Map[\"MAP_DANCES\"] = Fl(9)] = \"MAP_DANCES\";\n    Map[Map[\"MAP_DEFAULT\"] = 0] = \"MAP_DEFAULT\";\n})(Map || (Map = {}));\n//# sourceMappingURL=flags.js.map","import { fl as Fl } from '../flag';\nexport { GameObject, Depth } from '../gameObject/flags';\nexport var Actor;\n(function (Actor) {\n    Actor[Actor[\"IS_PLAYER\"] = Fl(0)] = \"IS_PLAYER\";\n})(Actor || (Actor = {}));\n//# sourceMappingURL=flags.js.map","import { Cell as Flags } from './flags';\nimport * as TILE from '../tile';\nimport * as Effect from '../effect';\nimport { Chain } from '../utils';\nimport { Mixer } from '../sprite';\nexport class CellMemory {\n    constructor() {\n        this.snapshot = new Mixer();\n        this.flags = {\n            cell: 0,\n            tile: 0,\n            actor: 0,\n            item: 0,\n            object: 0,\n            tileMech: 0,\n        };\n    }\n}\nexport class Cell {\n    constructor() {\n        this.chokeCount = 0;\n        this.gasVolume = 0;\n        this.liquidVolume = 0;\n        this.flags = { cell: 0 };\n        this.tiles = [TILE.tiles.NULL];\n        this.objects = new Chain((a, b) => a.depth - b.depth, () => {\n            this.needsRedraw = true;\n        });\n        this.memory = new CellMemory();\n    }\n    hasTileFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tile & flag);\n    }\n    hasObjectFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.object & flag);\n    }\n    tileFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tile : 0), 0);\n    }\n    tileMechFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tileMech : 0), 0);\n    }\n    get needsRedraw() {\n        return !!(this.flags.cell & Flags.NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v) {\n            this.flags.cell |= Flags.NEEDS_REDRAW;\n        }\n        else {\n            this.flags.cell &= ~Flags.NEEDS_REDRAW;\n        }\n    }\n    depthPriority(depth) {\n        const tile = this.tiles[depth];\n        return tile ? tile.priority : TILE.tiles.NULL.priority;\n    }\n    highestPriority() {\n        return this.tiles.reduce((out, t) => Math.max(out, t ? t.priority : 0), TILE.tiles.NULL.priority);\n    }\n    depthTile(depth) {\n        return this.tiles[depth] || TILE.tiles.NULL;\n    }\n    hasTile(tile) {\n        if (!tile)\n            return this.tiles.some((t) => t);\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n        }\n        return this.tiles.includes(tile);\n    }\n    blocksVision() {\n        return this.tiles.some((t) => t && t.blocksVision());\n    }\n    blocksPathing() {\n        return this.tiles.some((t) => t && t.blocksPathing());\n    }\n    blocksMove() {\n        return this.tiles.some((t) => t && t.blocksMove());\n    }\n    blocksEffects() {\n        return this.tiles.some((t) => t && t.blocksEffects());\n    }\n    blocksLayer(depth) {\n        return this.tiles.some((t) => t &&\n            !!(t.flags.tile & TILE.flags.Tile.T_BLOCKS_OTHER_LAYERS) &&\n            t.depth != depth);\n    }\n    hasCellFlag(flag) {\n        return !!(this.flags.cell & flag);\n    }\n    setCellFlag(flag) {\n        this.flags.cell |= flag;\n    }\n    clearCellFlag(flag) {\n        this.flags.cell &= ~flag;\n    }\n    // @returns - whether or not the change results in a change to the cell lighting.\n    setTile(tile) {\n        // if (!(tile instanceof TILE.Tile)) {\n        //     tile = TILE.get(tile);\n        //     if (!tile) return false;\n        // }\n        // const current = this.tiles[tile.depth] || TILE.tiles.NULL;\n        // if (current !== tile) {\n        //     this.gasVolume = 0;\n        //     this.liquidVolume = 0;\n        // }\n        // Check priority, etc...\n        this.tiles[tile.depth] = tile;\n        this.needsRedraw = true;\n        // if (volume) {\n        //     if (tile.depth === Depth.GAS) {\n        //         this.gasVolume = volume;\n        //     }\n        //     if (tile.depth === Depth.LIQUID) {\n        //         this.liquidVolume = volume;\n        //     }\n        // }\n        return true;\n    }\n    clear() {\n        this.tiles = [TILE.tiles.NULL];\n        this.needsRedraw = true;\n    }\n    clearLayer(depth) {\n        if (depth == 0) {\n            this.tiles[0] = TILE.tiles.NULL;\n            this.needsRedraw = true;\n            return true;\n        }\n        else if (this.tiles[depth] !== null) {\n            this.tiles[depth] = null;\n            this.needsRedraw = true;\n            return true;\n        }\n        return false;\n    }\n    // Lights\n    eachGlowLight(cb) {\n        this.tiles.forEach((tile) => {\n            if (tile && tile.light)\n                cb(tile.light);\n        });\n    }\n    // Effects\n    async activate(event, map, x, y, ctx = {}) {\n        ctx.cell = this;\n        let didSomething = false;\n        if (ctx.depth !== undefined) {\n            const tile = this.depthTile(ctx.depth);\n            if (tile && tile.effects) {\n                const ev = tile.effects[event];\n                let effect;\n                if (typeof ev === 'string') {\n                    effect = Effect.effects[ev];\n                }\n                else {\n                    effect = ev;\n                }\n                if (effect) {\n                    // console.log(' - has event');\n                    // if (\n                    //     ctx.force ||\n                    //     !effect.chance ||\n                    //     random.chance(effect.chance, 10000)\n                    // ) {\n                    ctx.tile = tile;\n                    // console.log(' - spawn event @%d,%d - %s', x, y, event);\n                    didSomething = await Effect.fire(effect, map, x, y, ctx);\n                    // cell.debug(\" - spawned\");\n                    // }\n                }\n            }\n        }\n        else {\n            // console.log('fire event - %s', event);\n            for (let tile of this.tiles) {\n                if (!tile || !tile.effects)\n                    continue;\n                const ev = tile.effects[event];\n                // console.log(' - ', ev);\n                let effect;\n                if (typeof ev === 'string') {\n                    effect = Effect.effects[ev];\n                }\n                else {\n                    effect = ev;\n                }\n                if (effect) {\n                    // cell.debug(\" - has event\");\n                    // if (\n                    //     ctx.force ||\n                    //     !effect.chance ||\n                    //     random.chance(effect.chance, 10000)\n                    // ) {\n                    ctx.tile = tile;\n                    // console.log(' - spawn event @%d,%d - %s', x, y, name);\n                    didSomething =\n                        (await Effect.fire(effect, map, x, y, ctx)) ||\n                            didSomething;\n                    // cell.debug(\" - spawned\");\n                    if (didSomething) {\n                        break;\n                    }\n                    // }\n                }\n            }\n        }\n        return didSomething;\n    }\n    hasEffect(name) {\n        for (let tile of this.tiles) {\n            if (tile && tile.hasEffect(name))\n                return true;\n        }\n        return false;\n    }\n    // // Items\n    hasItem() {\n        return this.hasCellFlag(Flags.HAS_ITEM);\n    }\n    // addItem(item: ItemType): boolean {\n    //     if (this.item) {\n    //         return false;\n    //     }\n    //     this.item = item;\n    //     return true;\n    // }\n    // removeItem(item: ItemType): boolean {\n    //     const current = this.item;\n    //     if (current !== item) return false;\n    //     this.item = null;\n    //     return true;\n    // }\n    // // Actors\n    hasActor() {\n        return this.hasCellFlag(Flags.HAS_ANY_ACTOR);\n    }\n    // addActor(actor: ActorType): boolean {\n    //     if (this.actor) {\n    //         return false;\n    //     }\n    //     this.actor = actor;\n    //     return true;\n    // }\n    // removeActor(actor: ActorType): boolean {\n    //     const current = this.actor;\n    //     if (current !== actor) return false;\n    //     this.actor = null;\n    //     return true;\n    // }\n    redraw() {\n        this.flags.cell |= Flags.NEEDS_REDRAW;\n    }\n    clearMemory() {\n        // TODO\n    }\n    storeMemory() {\n        // TODO\n    }\n    getSnapshot(dest) {\n        dest.copy(this.memory.snapshot);\n    }\n    putSnapshot(src) {\n        this.memory.snapshot.copy(src);\n    }\n    dump() {\n        // if (this.actor) return this.actor.sprite.ch as string;\n        // if (this.item) return this.item.sprite.ch as string;\n        // for (let i = this._tiles.length - 1; i >= 0; --i) {\n        //     if (!this._tiles[i]) continue;\n        //     const tile = this._tiles[i] || TILES.NULL;\n        //     if (tile.sprite.ch) return tile.sprite.ch as string;\n        // }\n        // return TILES.NULL.sprite.ch as string;\n        return this.tiles[0].sprite.ch || ' ';\n    }\n}\n//# sourceMappingURL=cell.js.map","import { GameObject } from '../gameObject';\nimport * as Flags from './flags';\nimport * as flags_1 from './flags';\nexport { flags_1 as flags };\nexport class Actor extends GameObject {\n    constructor() {\n        super();\n        // @ts-ignore\n        this.flags = this.flags || {};\n        this.flags.actor = 0;\n        this.depth = Flags.Depth.ACTOR;\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    hasAllActorFlags(flags) {\n        return (this.flags.actor & flags) === flags;\n    }\n    isPlayer() {\n        return this.hasActorFlag(Flags.Actor.IS_PLAYER);\n    }\n    isVisible() {\n        return true;\n    }\n    forbidsCell(_cell) {\n        return false;\n    }\n}\n//# sourceMappingURL=index.js.map","import { GameObject } from '../gameObject';\nimport { Depth } from '../gameObject/flags';\nexport class Item extends GameObject {\n    constructor() {\n        super();\n        this.quantity = 1;\n        // @ts-ignore\n        this.flags = this.flags || {};\n        this.flags.item = 0;\n        this.depth = Depth.ITEM;\n    }\n    hasItemFlag(flag) {\n        return !!(this.flags.item & flag);\n    }\n    hasAllItemFlags(flags) {\n        return (this.flags.item & flags) === flags;\n    }\n    forbidsCell(_cell) {\n        return false;\n    }\n}\n//# sourceMappingURL=index.js.map","import * as Tile from '../tile';\nimport * as Flags from './flags';\nimport { Actor } from '../actor';\nimport { Item } from '../item';\nexport class MapLayer {\n    constructor(map, name = 'layer') {\n        this.map = map;\n        this.depth = -1;\n        this.properties = {};\n        this.name = name;\n    }\n}\nexport class ObjectLayer extends MapLayer {\n    constructor(map, name = 'object') {\n        super(map, name);\n    }\n    putAppearance(dest, x, y) {\n        const cell = this.map.cell(x, y);\n        const obj = cell.objects.find((o) => o.depth == this.depth);\n        if (obj) {\n            dest.drawSprite(obj.sprite);\n        }\n    }\n    update(_dt) { }\n}\nexport class ActorLayer extends ObjectLayer {\n    constructor(map, name = 'actor') {\n        super(map, name);\n    }\n    add(x, y, obj, _opts) {\n        const cell = this.map.cell(x, y);\n        const actor = obj;\n        if (actor.forbidsCell(cell))\n            return false;\n        cell.objects.add(obj);\n        let flag = actor.isPlayer()\n            ? Flags.Cell.HAS_PLAYER\n            : Flags.Cell.HAS_ACTOR;\n        cell.setCellFlag(flag);\n        obj.x = x;\n        obj.y = y;\n        return true;\n    }\n    remove(obj) {\n        const cell = this.map.cell(obj.x, obj.y);\n        cell.objects.remove(obj);\n        let flag = 0;\n        cell.objects.forEach((o) => {\n            if (!o)\n                return;\n            if (o instanceof Actor) {\n                flag |= o.isPlayer()\n                    ? Flags.Cell.HAS_PLAYER\n                    : Flags.Cell.HAS_ACTOR;\n            }\n        });\n        cell.clearCellFlag(Flags.Cell.HAS_ANY_ACTOR);\n        cell.setCellFlag(flag);\n        return true;\n    }\n    putAppearance(dest, x, y) {\n        const cell = this.map.cell(x, y);\n        const obj = cell.objects.find((o) => o.depth == this.depth);\n        if (obj) {\n            dest.drawSprite(obj.sprite);\n        }\n    }\n    update(_dt) { }\n}\nexport class ItemLayer extends ObjectLayer {\n    constructor(map, name = 'item') {\n        super(map, name);\n    }\n    add(x, y, obj, _opts) {\n        const cell = this.map.cell(x, y);\n        const item = obj;\n        if (item.forbidsCell(cell))\n            return false;\n        cell.objects.add(obj);\n        let flag = Flags.Cell.HAS_ITEM;\n        cell.setCellFlag(flag);\n        obj.x = x;\n        obj.y = y;\n        return true;\n    }\n    remove(obj) {\n        const cell = this.map.cell(obj.x, obj.y);\n        cell.objects.remove(obj);\n        let flag = 0;\n        cell.objects.forEach((o) => {\n            if (!o)\n                return;\n            if (o instanceof Item) {\n                flag |= Flags.Cell.HAS_ITEM;\n            }\n        });\n        cell.clearCellFlag(Flags.Cell.HAS_ITEM);\n        cell.setCellFlag(flag);\n        return true;\n    }\n    putAppearance(dest, x, y) {\n        const cell = this.map.cell(x, y);\n        const obj = cell.objects.find((o) => o.depth == this.depth);\n        if (obj) {\n            dest.drawSprite(obj.sprite);\n        }\n    }\n    update(_dt) { }\n}\nexport class TileLayer extends MapLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    set(x, y, tile, opts = {}) {\n        const cell = this.map.cell(x, y);\n        const current = cell.tiles[tile.depth] || Tile.tiles.NULL;\n        if (!opts.force) {\n            // if (current !== tile) {\n            //     this.gasVolume = 0;\n            //     this.liquidVolume = 0;\n            // }\n            // Check priority, etc...\n            if (current.priority > tile.priority) {\n                return false;\n            }\n        }\n        if (!cell.setTile(tile))\n            return false;\n        if (current.light !== tile.light) {\n            this.map.light.glowLightChanged = true;\n        }\n        // if (volume) {\n        //     if (tile.depth === Depth.GAS) {\n        //         this.gasVolume = volume;\n        //     }\n        //     if (tile.depth === Depth.LIQUID) {\n        //         this.liquidVolume = volume;\n        //     }\n        // }\n        return true;\n    }\n    async update(_dt) {\n        // Run any tick effects\n    }\n    putAppearance(dest, x, y) {\n        const cell = this.map.cell(x, y);\n        const tile = cell.tiles[this.depth];\n        if (tile) {\n            dest.drawSprite(tile.sprite);\n        }\n    }\n}\n// class GasLayer extends TileLayer {\n//     constructor(map: TileMap) {\n//         super(map);\n//     }\n//     async update(dt: number) {\n//         // do dissipation...\n//     }\n// }\n// class LiquidLayer extends TileLayer {\n//     constructor(map: TileMap) {\n//         super(map);\n//     }\n//     async update(dt: number) {\n//         // do dissipation...\n//     }\n// }\n//# sourceMappingURL=layers.js.map","export class ObjectList {\n    constructor(map) {\n        this.map = map;\n    }\n    at(x, y, cb) {\n        return this.map.cell(x, y).objects.find((item) => !cb || cb(item));\n    }\n    has(obj) {\n        return this.map.cells.some((c) => c.objects.has(obj));\n    }\n    add(x, y, obj) {\n        const depth = obj.depth;\n        const layer = this.map.getLayer(depth);\n        return layer.add(x, y, obj);\n    }\n    remove(obj) {\n        const depth = obj.depth;\n        const layer = this.map.getLayer(depth);\n        return layer.remove(obj);\n    }\n    move(obj, x, y) {\n        this.remove(obj);\n        return this.add(x, y, obj);\n    }\n    forEach(cb) {\n        return this.map.cells.forEach((cell) => cell.objects.forEach(cb));\n    }\n    forEachAt(x, y, cb) {\n        return this.map.cell(x, y).objects.forEach(cb);\n    }\n}\n//# sourceMappingURL=objects.js.map","import * as Grid from '../grid';\nimport { LightSystem, } from '../light';\nimport * as Flags from './flags';\nimport { Cell } from './cell';\nimport * as FOV from '../fov';\nimport * as TILE from '../tile';\nimport { TileLayer, ActorLayer, ItemLayer } from './layers';\nimport { ObjectList } from './objects';\nimport { Mixer } from '../sprite';\nimport { asyncForEach } from '../utils';\nimport * as Canvas from '../canvas';\nimport { Depth } from '../gameObject/flags';\nexport class Map {\n    constructor(width, height, opts = {}) {\n        this.width = width;\n        this.height = height;\n        this.flags = { map: 0 };\n        this.layers = [];\n        this.cells = Grid.make(width, height, () => new Cell());\n        this._objects = new ObjectList(this);\n        this.light = new LightSystem(this, opts);\n        this.fov = new FOV.FovSystem(this, opts);\n        this.properties = {};\n        this.initLayers();\n    }\n    // LAYERS\n    initLayers() {\n        this.addLayer(Depth.GROUND, new TileLayer(this, 'ground'));\n        this.addLayer(Depth.SURFACE, new TileLayer(this, 'surface'));\n        this.addLayer(Depth.ITEM, new ItemLayer(this, 'item'));\n        this.addLayer(Depth.ACTOR, new ActorLayer(this, 'actor'));\n    }\n    addLayer(depth, layer) {\n        layer.depth = depth;\n        this.layers[depth] = layer;\n    }\n    removeLayer(depth) {\n        if (!depth)\n            throw new Error('Cannot remove layer with depth=0.');\n        delete this.layers[depth];\n    }\n    getLayer(depth) {\n        return this.layers[depth] || null;\n    }\n    hasXY(x, y) {\n        return this.cells.hasXY(x, y);\n    }\n    isBoundaryXY(x, y) {\n        return x == 0 || y == 0 || x == this.width - 1 || y == this.height - 1;\n    }\n    cell(x, y) {\n        return this.cells[x][y];\n    }\n    get(x, y) {\n        return this.cells.get(x, y);\n    }\n    eachCell(cb) {\n        this.cells.forEach((cell, x, y) => cb(cell, x, y, this));\n    }\n    // DRAW\n    drawInto(dest, opts = {}) {\n        const buffer = dest instanceof Canvas.Canvas ? dest.buffer : dest;\n        if (typeof opts === 'boolean')\n            opts = { force: opts };\n        const mixer = new Mixer();\n        for (let x = 0; x < buffer.width; ++x) {\n            for (let y = 0; y < buffer.height; ++y) {\n                const cell = this.cell(x, y);\n                this.getAppearanceAt(x, y, mixer);\n                const glyph = typeof mixer.ch === 'number'\n                    ? mixer.ch\n                    : buffer.toGlyph(mixer.ch);\n                buffer.draw(x, y, glyph, mixer.fg.toInt(), mixer.bg.toInt());\n                cell.needsRedraw = false;\n            }\n        }\n    }\n    // items\n    hasItem(x, y) {\n        return this.hasCellFlag(x, y, Flags.Cell.HAS_ITEM);\n    }\n    // addItem(x: number, y: number, item: TYPES.ItemType) {\n    //     if (!this.hasXY(x, y)) return false;\n    //     const cell = this.cell(x, y);\n    //     return cell.objects.add(item);\n    // }\n    // removeItem(item: TYPES.ItemType) {\n    //     const cell = this.cell(item.x, item.y);\n    //     cell.objects.remove(item);\n    // }\n    // moveItem(x: number, y: number, item: TYPES.ItemType) {\n    //     if (!this.hasXY(x, y)) return false;\n    //     const newCell = this.cell(x, y);\n    //     const oldCell = this.cell(item.x, item.y);\n    //     return oldCell.removeItem(item) && newCell.addItem(item);\n    // }\n    // Actors\n    hasActor(x, y) {\n        return this.hasCellFlag(x, y, Flags.Cell.HAS_ANY_ACTOR);\n    }\n    // addActor(x: number, y: number, actor: TYPES.ActorType): boolean {\n    //     if (!this.hasXY(x, y)) return false;\n    //     const cell = this.cell(x, y);\n    //     return cell.objects.add(actor);\n    // }\n    // removeActor(actor: TYPES.ActorType): boolean {\n    //     const cell = this.cell(actor.x, actor.y);\n    //     return cell.objects.remove(actor);\n    // }\n    // moveActor(x: number, y: number, actor: TYPES.ActorType): boolean {\n    //     if (!this.hasXY(x, y)) return false;\n    //     const newCell = this.cell(x, y);\n    //     const oldCell = this.cell(actor.x, actor.y);\n    //     return oldCell.removeActor(actor) && newCell.addActor(actor);\n    // }\n    // Information\n    isVisible(x, y) {\n        return this.fov.isAnyKindOfVisible(x, y);\n    }\n    blocksVision(x, y) {\n        return this.cell(x, y).blocksVision();\n    }\n    blocksMove(x, y) {\n        return this.cell(x, y).blocksMove();\n    }\n    isStairs(x, y) {\n        return this.cell(x, y).hasTileFlag(TILE.flags.Tile.T_HAS_STAIRS);\n    }\n    count(cb) {\n        return this.cells.count((cell, x, y) => cb(cell, x, y, this));\n    }\n    dump(fmt) {\n        this.cells.dump(fmt || ((c) => c.dump()));\n    }\n    // flags\n    hasMapFlag(flag) {\n        return !!(this.flags.map & flag);\n    }\n    setMapFlag(flag) {\n        this.flags.map |= flag;\n    }\n    clearMapFlag(flag) {\n        this.flags.map &= ~flag;\n    }\n    setCellFlag(x, y, flag) {\n        this.cell(x, y).setCellFlag(flag);\n    }\n    clearCellFlag(x, y, flag) {\n        this.cell(x, y).clearCellFlag(flag);\n    }\n    hasCellFlag(x, y, flag) {\n        return !!(this.cell(x, y).flags.cell & flag);\n    }\n    hasObjectFlag(x, y, flag) {\n        return this.cell(x, y).hasObjectFlag(flag);\n    }\n    hasTileFlag(x, y, flag) {\n        return this.cell(x, y).hasTileFlag(flag);\n    }\n    fill(tile, boundary) {\n        boundary = boundary || tile;\n        let i, j;\n        for (i = 0; i < this.width; ++i) {\n            for (j = 0; j < this.height; ++j) {\n                if (this.isBoundaryXY(i, j)) {\n                    this.setTile(i, j, boundary);\n                }\n                else {\n                    this.setTile(i, j, tile);\n                }\n            }\n        }\n    }\n    setTile(x, y, tile, opts) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n            if (!tile)\n                return false;\n        }\n        if (opts === true) {\n            opts = { force: true };\n        }\n        const depth = tile.depth || 0;\n        const layer = this.layers[depth] || this.layers[0];\n        if (!(layer instanceof TileLayer))\n            return false;\n        return layer.set(x, y, tile, opts);\n    }\n    hasTile(x, y, tile) {\n        var _a;\n        return (_a = this.cell(x, y)) === null || _a === void 0 ? void 0 : _a.hasTile(tile);\n    }\n    get objects() {\n        return this._objects;\n    }\n    async update(dt) {\n        await asyncForEach(this.layers, (l) => l.update(dt));\n    }\n    copy(_src) { }\n    clone() { }\n    getAppearanceAt(x, y, dest) {\n        dest.blackOut();\n        const cell = this.cell(x, y);\n        if (cell.needsRedraw) {\n            this.layers.forEach((layer) => layer.putAppearance(dest, x, y));\n            cell.putSnapshot(dest);\n        }\n        else {\n            cell.getSnapshot(dest);\n        }\n        if (this.fov.isAnyKindOfVisible(x, y)) {\n            const light = this.light.getLight(x, y);\n            dest.multiply(light);\n        }\n        else if (this.fov.isRevealed(x, y)) {\n            dest.scale(50);\n        }\n        else {\n            dest.blackOut();\n        }\n    }\n    // // LightSystemSite\n    // get anyLightChanged(): boolean {\n    //     return !(this.flags.map & Flags.Map.MAP_STABLE_LIGHTS);\n    // }\n    // set anyLightChanged(value: boolean) {\n    //     if (value) {\n    //         this.flags.map &= ~Flags.Map.MAP_STABLE_LIGHTS;\n    //     } else {\n    //         this.flags.map |= Flags.Map.MAP_STABLE_LIGHTS;\n    //     }\n    // }\n    // get glowLightChanged(): boolean {\n    //     return !(this.flags.map & Flags.Map.MAP_STABLE_GLOW_LIGHTS);\n    // }\n    // set glowLightChanged(value: boolean) {\n    //     if (value) {\n    //         this.flags.map &= ~(\n    //             Flags.Map.MAP_STABLE_GLOW_LIGHTS |\n    //             Flags.Map.MAP_STABLE_GLOW_LIGHTS\n    //         );\n    //     } else {\n    //         this.flags.map |= Flags.Map.MAP_STABLE_GLOW_LIGHTS;\n    //     }\n    // }\n    eachGlowLight(cb) {\n        this.cells.forEach((cell, x, y) => {\n            cell.eachGlowLight((light) => cb(x, y, light));\n        });\n    }\n    eachDynamicLight(_cb) { }\n    // FOV System Site\n    eachViewport(_cb) {\n        // TODO !!\n    }\n    lightingChanged() {\n        return this.light.changed;\n    }\n    hasVisibleLight(x, y) {\n        return !this.light.isDark(x, y);\n    }\n    cellRevealed(_x, _y) {\n        // if (DATA.automationActive) {\n        // if (cell.item) {\n        //     const theItem: GW.types.ItemType = cell.item;\n        //     if (\n        //         theItem.hasLayerFlag(ObjectFlags.L_INTERRUPT_WHEN_SEEN)\n        //     ) {\n        //         GW.message.add(\n        //             '§you§ §see§ ΩitemMessageColorΩ§item§∆.',\n        //             {\n        //                 item: theItem,\n        //                 actor: DATA.player,\n        //             }\n        //         );\n        //     }\n        // }\n        // if (\n        //     !(this.fov.isMagicMapped(x, y)) &&\n        //     this.site.hasObjectFlag(\n        //         x,\n        //         y,\n        //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n        //     )\n        // ) {\n        //     const tile = cell.tileWithLayerFlag(\n        //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n        //     );\n        //     if (tile) {\n        //         GW.message.add(\n        //             '§you§ §see§ ΩbackgroundMessageColorΩ§item§∆.',\n        //             {\n        //                 actor: DATA.player,\n        //                 item: tile.name,\n        //             }\n        //         );\n        //     }\n        // }\n    }\n    redrawCell(x, y, clearMemory) {\n        if (clearMemory) {\n            this.cells[x][y].clearMemory();\n        }\n        this.cells[x][y].redraw();\n    }\n    storeMemory(x, y) {\n        this.cells[x][y].storeMemory();\n    }\n    // DigSite\n    isWall(x, y) {\n        if (!this.hasXY(x, y))\n            return true;\n        const cell = this.cell(x, y);\n        return cell.blocksMove() && cell.blocksVision();\n    }\n}\nexport function make(w, h, opts = {}, boundary) {\n    if (typeof opts === 'string') {\n        opts = { tile: opts };\n    }\n    if (boundary) {\n        opts.boundary = boundary;\n    }\n    if (opts.tile === true) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === true) {\n        opts.boundary = 'WALL';\n    }\n    const map = new Map(w, h, opts);\n    if (opts.tile) {\n        map.fill(opts.tile, opts.boundary);\n    }\n    map.light.update();\n    // if (!DATA.map) {\n    //     DATA.map = map;\n    // }\n    return map;\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && typeof value[0] === 'string';\n}\nexport function from(prefab, charToTile, opts = {}) {\n    let height = 0;\n    let width = 0;\n    let map;\n    if (isString(prefab)) {\n        prefab = prefab.split('\\n');\n    }\n    if (isStringArray(prefab)) {\n        height = prefab.length;\n        width = prefab.reduce((len, line) => Math.max(len, line.length), 0);\n        map = make(width, height, opts);\n        prefab.forEach((line, y) => {\n            for (let x = 0; x < width; ++x) {\n                const ch = line[x] || '.';\n                const tile = charToTile[ch] || 'FLOOR';\n                map.setTile(x, y, tile);\n            }\n        });\n    }\n    else {\n        height = prefab.height;\n        width = prefab.width;\n        map = make(width, height, opts);\n        prefab.forEach((v, x, y) => {\n            const tile = charToTile[v] || 'FLOOR';\n            map.setTile(x, y, tile);\n        });\n    }\n    map.light.update();\n    return map;\n}\n//# sourceMappingURL=map.js.map","import * as Grid from '../grid';\nimport * as Utils from '../utils';\nimport { GameObject as ObjectFlags } from '../gameObject/flags';\nimport { Cell as CellFlags } from './flags';\nexport function analyze(map, updateChokeCounts = true) {\n    updateLoopiness(map);\n    updateChokepoints(map, updateChokeCounts);\n}\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n// TODO - Move to Map?\nexport function updateChokepoints(map, updateCounts) {\n    const passMap = Grid.alloc(map.width, map.height);\n    const grid = Grid.alloc(map.width, map.height);\n    for (let i = 0; i < map.width; i++) {\n        for (let j = 0; j < map.height; j++) {\n            const cell = map.cell(i, j);\n            if ((cell.blocksPathing() || cell.blocksMove()) &&\n                !cell.hasObjectFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n                // cell.flags &= ~CellFlags.IS_IN_LOOP;\n                passMap[i][j] = 0;\n            }\n            else {\n                // cell.flags |= CellFlags.IS_IN_LOOP;\n                passMap[i][j] = 1;\n            }\n        }\n    }\n    let passableArcCount;\n    // done finding loops; now flag chokepoints\n    for (let i = 1; i < passMap.width - 1; i++) {\n        for (let j = 1; j < passMap.height - 1; j++) {\n            map.cells[i][j].flags.cell &= ~CellFlags.IS_CHOKEPOINT;\n            if (passMap[i][j] &&\n                !(map.cells[i][j].flags.cell & CellFlags.IS_IN_LOOP)) {\n                passableArcCount = 0;\n                for (let dir = 0; dir < 8; dir++) {\n                    const oldX = i + Utils.CLOCK_DIRS[(dir + 7) % 8][0];\n                    const oldY = j + Utils.CLOCK_DIRS[(dir + 7) % 8][1];\n                    const newX = i + Utils.CLOCK_DIRS[dir][0];\n                    const newY = j + Utils.CLOCK_DIRS[dir][1];\n                    if ((map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                        passMap[newX][newY]) !=\n                        (map.hasXY(oldX, oldY) && // RUT.Map.makeValidXy(map, oldXy) &&\n                            passMap[oldX][oldY])) {\n                        if (++passableArcCount > 2) {\n                            if ((!passMap[i - 1][j] && !passMap[i + 1][j]) ||\n                                (!passMap[i][j - 1] && !passMap[i][j + 1])) {\n                                map.cells[i][j].flags.cell |=\n                                    CellFlags.IS_CHOKEPOINT;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (updateCounts) {\n        // Done finding chokepoints; now create a chokepoint map.\n        // The chokepoint map is a number for each passable tile. If the tile is a chokepoint,\n        // then the number indicates the number of tiles that would be rendered unreachable if the\n        // chokepoint were blocked. If the tile is not a chokepoint, then the number indicates\n        // the number of tiles that would be rendered unreachable if the nearest exit chokepoint\n        // were blocked.\n        // The cost of all of this is one depth-first flood-fill per open point that is adjacent to a chokepoint.\n        // Start by setting the chokepoint values really high, and roping off room machines.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                map.cells[i][j].chokeCount = 30000;\n                if (map.cells[i][j].flags.cell & CellFlags.IS_IN_ROOM_MACHINE) {\n                    passMap[i][j] = 0;\n                }\n            }\n        }\n        // Scan through and find a chokepoint next to an open point.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                const cell = map.cells[i][j];\n                if (passMap[i][j] &&\n                    cell.flags.cell & CellFlags.IS_CHOKEPOINT) {\n                    for (let dir = 0; dir < 4; dir++) {\n                        const newX = i + Utils.DIRS[dir][0];\n                        const newY = j + Utils.DIRS[dir][1];\n                        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                            passMap[newX][newY] &&\n                            !(map.cells[newX][newY].flags.cell &\n                                CellFlags.IS_CHOKEPOINT)) {\n                            // OK, (newX, newY) is an open point and (i, j) is a chokepoint.\n                            // Pretend (i, j) is blocked by changing passMap, and run a flood-fill cell count starting on (newX, newY).\n                            // Keep track of the flooded region in grid[][].\n                            grid.fill(0);\n                            passMap[i][j] = 0;\n                            let cellCount = floodFillCount(map, grid, passMap, newX, newY);\n                            passMap[i][j] = 1;\n                            // CellCount is the size of the region that would be obstructed if the chokepoint were blocked.\n                            // CellCounts less than 4 are not useful, so we skip those cases.\n                            if (cellCount >= 4) {\n                                // Now, on the chokemap, all of those flooded cells should take the lesser of their current value or this resultant number.\n                                for (let i2 = 0; i2 < grid.width; i2++) {\n                                    for (let j2 = 0; j2 < grid.height; j2++) {\n                                        if (grid[i2][j2] &&\n                                            cellCount <\n                                                map.cells[i2][j2].chokeCount) {\n                                            map.cells[i2][j2].chokeCount = cellCount;\n                                            map.cells[i2][j2].flags.cell &= ~CellFlags.IS_GATE_SITE;\n                                        }\n                                    }\n                                }\n                                // The chokepoint itself should also take the lesser of its current value or the flood count.\n                                if (cellCount < cell.chokeCount) {\n                                    cell.chokeCount = cellCount;\n                                    cell.flags.cell |= CellFlags.IS_GATE_SITE;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    Grid.free(passMap);\n    Grid.free(grid);\n}\n// Assumes it is called with respect to a passable (startX, startY), and that the same is not already included in results.\n// Returns 10000 if the area included an area machine.\nexport function floodFillCount(map, results, passMap, startX, startY) {\n    let count = passMap[startX][startY] == 2 ? 5000 : 1;\n    if (map.cells[startX][startY].flags.cell & CellFlags.IS_IN_AREA_MACHINE) {\n        count = 10000;\n    }\n    results[startX][startY] = 1;\n    for (let dir = 0; dir < 4; dir++) {\n        const newX = startX + Utils.DIRS[dir][0];\n        const newY = startY + Utils.DIRS[dir][1];\n        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n            passMap[newX][newY] &&\n            !results[newX][newY]) {\n            count += floodFillCount(map, results, passMap, newX, newY);\n        }\n    }\n    return Math.min(count, 10000);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n// TODO = Move loopiness to Map\nexport function updateLoopiness(map) {\n    map.eachCell(resetLoopiness);\n    map.eachCell(checkLoopiness);\n    cleanLoopiness(map);\n}\nexport function resetLoopiness(cell, _x, _y, _map) {\n    if ((cell.blocksPathing() || cell.blocksMove()) &&\n        !cell.hasObjectFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n        cell.flags.cell &= ~CellFlags.IS_IN_LOOP;\n        // passMap[i][j] = false;\n    }\n    else {\n        cell.flags.cell |= CellFlags.IS_IN_LOOP;\n        // passMap[i][j] = true;\n    }\n}\nexport function checkLoopiness(cell, x, y, map) {\n    let inString;\n    let newX, newY, dir, sdir;\n    let numStrings, maxStringLength, currentStringLength;\n    if (!cell || !(cell.flags.cell & CellFlags.IS_IN_LOOP)) {\n        return false;\n    }\n    // find an unloopy neighbor to start on\n    for (sdir = 0; sdir < 8; sdir++) {\n        newX = x + Utils.CLOCK_DIRS[sdir][0];\n        newY = y + Utils.CLOCK_DIRS[sdir][1];\n        if (!map.hasXY(newX, newY))\n            continue;\n        const cell = map.get(newX, newY);\n        if (!cell || !(cell.flags.cell & CellFlags.IS_IN_LOOP)) {\n            break;\n        }\n    }\n    if (sdir == 8) {\n        // no unloopy neighbors\n        return false; // leave cell loopy\n    }\n    // starting on this unloopy neighbor,\n    // work clockwise and count up:\n    // (a) the number of strings of loopy neighbors, and\n    // (b) the length of the longest such string.\n    numStrings = maxStringLength = currentStringLength = 0;\n    inString = false;\n    for (dir = sdir; dir < sdir + 8; dir++) {\n        newX = x + Utils.CLOCK_DIRS[dir % 8][0];\n        newY = y + Utils.CLOCK_DIRS[dir % 8][1];\n        if (!map.hasXY(newX, newY))\n            continue;\n        const newCell = map.get(newX, newY);\n        if (newCell && newCell.flags.cell & CellFlags.IS_IN_LOOP) {\n            currentStringLength++;\n            if (!inString) {\n                if (numStrings > 0) {\n                    return false; // more than one string here; leave loopy\n                }\n                numStrings++;\n                inString = true;\n            }\n        }\n        else if (inString) {\n            if (currentStringLength > maxStringLength) {\n                maxStringLength = currentStringLength;\n            }\n            currentStringLength = 0;\n            inString = false;\n        }\n    }\n    if (inString && currentStringLength > maxStringLength) {\n        maxStringLength = currentStringLength;\n    }\n    if (numStrings == 1 && maxStringLength <= 4) {\n        cell.flags.cell &= ~CellFlags.IS_IN_LOOP;\n        for (dir = 0; dir < 8; dir++) {\n            const newX = x + Utils.CLOCK_DIRS[dir][0];\n            const newY = y + Utils.CLOCK_DIRS[dir][1];\n            if (map.hasXY(newX, newY)) {\n                const newCell = map.cell(newX, newY);\n                checkLoopiness(newCell, newX, newY, map);\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function fillInnerLoopGrid(map, grid) {\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            const cell = map.cells[x][y];\n            if (cell.flags.cell & CellFlags.IS_IN_LOOP) {\n                grid[x][y] = 1;\n            }\n            else if (x > 0 && y > 0) {\n                const up = map.cells[x][y - 1];\n                const left = map.cells[x - 1][y];\n                if (up.flags.cell & CellFlags.IS_IN_LOOP &&\n                    left.flags.cell & CellFlags.IS_IN_LOOP) {\n                    grid[x][y] = 1;\n                }\n            }\n        }\n    }\n}\nexport function cleanLoopiness(map) {\n    // remove extraneous loop markings\n    const grid = Grid.alloc(map.width, map.height);\n    fillInnerLoopGrid(map, grid);\n    // const xy = { x: 0, y: 0 };\n    let designationSurvives;\n    for (let i = 0; i < grid.width; i++) {\n        for (let j = 0; j < grid.height; j++) {\n            const cell = map.cell(i, j);\n            if (cell.flags.cell & CellFlags.IS_IN_LOOP) {\n                designationSurvives = false;\n                for (let dir = 0; dir < 8; dir++) {\n                    let newX = i + Utils.CLOCK_DIRS[dir][0];\n                    let newY = j + Utils.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, xy, newX, newY) &&\n                        !grid[newX][newY] &&\n                        !(map.cells[newX][newY].flags.cell &\n                            CellFlags.IS_IN_LOOP)) {\n                        designationSurvives = true;\n                        break;\n                    }\n                }\n                if (!designationSurvives) {\n                    grid[i][j] = 1;\n                    map.cells[i][j].flags.cell &= ~CellFlags.IS_IN_LOOP;\n                }\n            }\n        }\n    }\n    Grid.free(grid);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n//# sourceMappingURL=analyze.js.map","import * as Flags from './flags';\nimport * as Tile from '../tile';\nimport * as Entity from '../gameObject';\nimport * as Effect from '../effect';\nimport * as Flag from '../flag';\nimport * as Grid from '../grid';\nimport * as Utils from '../utils';\nimport { random } from '../random';\nimport { Actor } from '../actor';\nimport { Item } from '../item';\nexport class SpawnEffect {\n    make(src, dest) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (!src.tile)\n            return true; // no error\n        let config = src.tile;\n        if (typeof config === 'string') {\n            const parts = config.split(/[,|]/).map((p) => p.trim());\n            config = {\n                tile: parts[0],\n                grow: Number.parseInt(parts[1] || '0'),\n                decrement: Number.parseInt(parts[2] || '0'),\n            };\n        }\n        const info = {\n            grow: (_b = (_a = config.grow) !== null && _a !== void 0 ? _a : config.spread) !== null && _b !== void 0 ? _b : 0,\n            decrement: (_c = config.decrement) !== null && _c !== void 0 ? _c : 0,\n            flags: Flag.from(Effect.Flags, config.flags),\n            volume: (_d = config.volume) !== null && _d !== void 0 ? _d : 0,\n            next: (_e = config.next) !== null && _e !== void 0 ? _e : null,\n        };\n        const id = (_f = config.tile) !== null && _f !== void 0 ? _f : config.id;\n        if (typeof id === 'string') {\n            info.tile = id;\n        }\n        else {\n            throw new Error('Invalid tile spawn config: ' + id);\n        }\n        if (!info.tile) {\n            throw new Error('Must have tile.');\n        }\n        const match = (_g = config.matchTile) !== null && _g !== void 0 ? _g : config.match;\n        if (typeof match === 'string') {\n            info.matchTile = match;\n        }\n        else if (match) {\n            throw new Error('Invalid tile spawn match tile: ' + config.matchTile);\n        }\n        dest.tile = info;\n        return true;\n    }\n    async fire(effect, map, x, y, ctx) {\n        if (!effect.tile)\n            return false; // did nothing\n        const id = effect.tile.tile;\n        const tile = Tile.tiles[id] || null;\n        if (!tile) {\n            throw new Error('Failed to find tile for effect: ' + id);\n        }\n        const abortIfBlocking = !!(effect.flags & Effect.Flags.E_ABORT_IF_BLOCKS_MAP);\n        const isBlocking = !!(abortIfBlocking &&\n            !(effect.flags & Effect.Flags.E_PERMIT_BLOCKING) &&\n            (tile.blocksPathing() ||\n                effect.flags & Effect.Flags.E_TREAT_AS_BLOCKING));\n        let didSomething = false;\n        didSomething = computeSpawnMap(effect, map, x, y, ctx);\n        if (!didSomething) {\n            return false;\n        }\n        if (abortIfBlocking &&\n            isBlocking &&\n            this.mapDisruptedBy(map, effect.grid)) {\n            // Grid.free(spawnMap);\n            return false;\n        }\n        if (effect.flags & Effect.Flags.E_EVACUATE_CREATURES) {\n            // first, evacuate creatures, so that they do not re-trigger the tile.\n            if (evacuateCreatures(map, ctx.grid)) {\n                didSomething = true;\n            }\n        }\n        if (effect.flags & Effect.Flags.E_EVACUATE_ITEMS) {\n            // first, evacuate items, so that they do not re-trigger the tile.\n            if (evacuateItems(map, ctx.grid)) {\n                didSomething = true;\n            }\n        }\n        if (effect.flags & Effect.Flags.E_CLEAR_CELL) {\n            // first, clear other tiles (not base/ground)\n            if (clearCells(map, ctx.grid, effect.flags)) {\n                didSomething = true;\n            }\n        }\n        const spawned = spawnTiles(effect.flags, ctx.grid, map, tile, effect.tile.volume);\n        if (spawned) {\n            didSomething = true;\n            // await spawnMap.forEachAsync( (v, x, y) => {\n            //     if (!v) return;\n            //     await map.applyInstantEffects(x, y);\n            // });\n            // if (applyEffects) {\n            // if (PLAYER.xLoc == i && PLAYER.yLoc == j && !PLAYER.status.levitating && refresh) {\n            // \tflavorMessage(tileFlavor(PLAYER.xLoc, PLAYER.yLoc));\n            // }\n            // if (cell.actor || cell.item) {\n            // \tfor(let t of cell.tiles()) {\n            // \t\tawait t.applyInstantEffects(map, i, j, cell);\n            // \t\tif (Data.gameHasEnded) {\n            // \t\t\treturn true;\n            // \t\t}\n            // \t}\n            // }\n            // if (tile.flags & TileFlags.T_IS_FIRE) {\n            // \tif (cell.flags & CellFlags.HAS_ITEM) {\n            // \t\ttheItem = map.itemAt(i, j);\n            // \t\tif (theItem.flags & Flags.Item.ITEM_FLAMMABLE) {\n            // \t\t\tawait burnItem(theItem);\n            // \t\t}\n            // \t}\n            // }\n            // }\n        }\n        // Grid.free(spawnMap);\n        return didSomething;\n    }\n    mapDisruptedBy(map, blockingGrid, blockingToMapX = 0, blockingToMapY = 0) {\n        const walkableGrid = Grid.alloc(map.width, map.height);\n        let disrupts = false;\n        // Get all walkable locations after lake added\n        Utils.forRect(map.width, map.height, (i, j) => {\n            const lakeX = i + blockingToMapX;\n            const lakeY = j + blockingToMapY;\n            if (blockingGrid.get(lakeX, lakeY)) {\n                if (map.isStairs(i, j)) {\n                    disrupts = true;\n                }\n            }\n            else if (!map.blocksMove(i, j)) {\n                walkableGrid[i][j] = 1;\n            }\n        });\n        let first = true;\n        for (let i = 0; i < walkableGrid.width && !disrupts; ++i) {\n            for (let j = 0; j < walkableGrid.height && !disrupts; ++j) {\n                if (walkableGrid[i][j] == 1) {\n                    if (first) {\n                        walkableGrid.floodFill(i, j, 1, 2);\n                        first = false;\n                    }\n                    else {\n                        disrupts = true;\n                    }\n                }\n            }\n        }\n        // console.log('WALKABLE GRID');\n        // walkableGrid.dump();\n        Grid.free(walkableGrid);\n        return disrupts;\n    }\n}\nEffect.installType('tile', new SpawnEffect());\n// tick\n// Spawn\nexport function spawnTiles(flags, spawnMap, map, tile, volume = 0) {\n    let i, j;\n    let accomplishedSomething;\n    accomplishedSomething = false;\n    const blockedByOtherLayers = flags & Effect.Flags.E_BLOCKED_BY_OTHER_LAYERS;\n    const superpriority = flags & Effect.Flags.E_SUPERPRIORITY;\n    // const applyEffects = ctx.refreshCell;\n    volume = volume || 0; // (tile ? tile.volume : 0);\n    for (i = 0; i < spawnMap.width; i++) {\n        for (j = 0; j < spawnMap.height; j++) {\n            if (!spawnMap[i][j])\n                continue; // If it's not flagged for building in the spawn map,\n            // const isRoot = spawnMap[i][j] === 1;\n            spawnMap[i][j] = 0; // so that the spawnmap reflects what actually got built\n            const cell = map.cell(i, j);\n            if (cell.hasTile(tile)) {\n                // If the new cell already contains the fill terrain,\n                if (tile.depth == Entity.flags.Depth.GAS) {\n                    spawnMap[i][j] = 1;\n                    cell.gasVolume += volume;\n                }\n                else if (tile.depth == Entity.flags.Depth.LIQUID) {\n                    spawnMap[i][j] = 1;\n                    cell.liquidVolume += volume;\n                }\n            }\n            else if ((superpriority ||\n                cell.depthPriority(tile.depth) < tile.priority) && // If the terrain in the layer to be overwritten has a higher priority number (unless superpriority),\n                !cell.blocksLayer(tile.depth) && // If we will be painting into the surface layer when that cell forbids it,\n                (!cell.hasItem() ||\n                    !(flags & Effect.Flags.E_BLOCKED_BY_ITEMS)) &&\n                (!cell.hasActor() ||\n                    !(flags & Effect.Flags.E_BLOCKED_BY_ACTORS)) &&\n                (!blockedByOtherLayers ||\n                    cell.highestPriority() < tile.priority) // TODO - highestPriorityTile()\n            ) {\n                if (map.setTile(i, j, tile, volume)) {\n                    // if the fill won't violate the priority of the most important terrain in this cell:\n                    spawnMap[i][j] = 1; // so that the spawnmap reflects what actually got built\n                    // map.redrawCell(cell);\n                    // if (volume && cell.gas) {\n                    //     cell.volume += (feat.volume || 0);\n                    // }\n                    cell.flags.cell |= Flags.Cell.EVENT_FIRED_THIS_TURN;\n                    if (flags & Effect.Flags.E_PROTECTED) {\n                        cell.flags.cell |= Flags.Cell.EVENT_PROTECTED;\n                    }\n                    accomplishedSomething = true;\n                    // debug('- tile', i, j, 'tile=', tile.id);\n                }\n            }\n        }\n    }\n    if (accomplishedSomething) {\n        map.setMapFlag(Flags.Map.MAP_CHANGED);\n    }\n    return accomplishedSomething;\n}\n// Spread\nfunction cellIsOk(effect, map, x, y, isStart) {\n    if (!map.hasXY(x, y))\n        return false;\n    const cell = map.cell(x, y);\n    if (cell.hasCellFlag(Flags.Cell.EVENT_PROTECTED))\n        return false;\n    if (cell.blocksEffects() && !effect.tile.matchTile && !isStart) {\n        return false;\n    }\n    if (effect.flags & Effect.Flags.E_BUILD_IN_WALLS) {\n        if (!map.isWall(x, y))\n            return false;\n    }\n    else if (effect.flags & Effect.Flags.E_MUST_TOUCH_WALLS) {\n        let ok = false;\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (map.isWall(i, j)) {\n                ok = true;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    else if (effect.flags & Effect.Flags.E_NO_TOUCH_WALLS) {\n        let ok = true;\n        if (map.isWall(x, y))\n            return false; // or on wall\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (map.isWall(i, j)) {\n                ok = false;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    // if (ctx.bounds && !ctx.bounds.containsXY(x, y)) return false;\n    if (effect.tile.matchTile &&\n        !isStart &&\n        !cell.hasTile(effect.tile.matchTile)) {\n        return false;\n    }\n    return true;\n}\nexport function computeSpawnMap(effect, map, x, y, ctx) {\n    let i, j, dir, t, x2, y2;\n    let madeChange;\n    // const bounds = ctx.bounds || null;\n    // if (bounds) {\n    //   // Activation.debug('- bounds', bounds);\n    // }\n    const config = effect.tile;\n    let startProb = config.grow || 0;\n    let probDec = config.decrement || 0;\n    const spawnMap = ctx.grid;\n    spawnMap.fill(0);\n    if (!cellIsOk(effect, map, x, y, true)) {\n        return false;\n    }\n    spawnMap[x][y] = t = 1; // incremented before anything else happens\n    let count = 1;\n    if (startProb) {\n        madeChange = true;\n        if (startProb >= 100) {\n            probDec = probDec || 100;\n        }\n        if (probDec <= 0) {\n            probDec = startProb;\n        }\n        while (madeChange && startProb > 0) {\n            madeChange = false;\n            t++;\n            for (i = 0; i < map.width; i++) {\n                for (j = 0; j < map.height; j++) {\n                    if (spawnMap[i][j] == t - 1) {\n                        for (dir = 0; dir < 4; dir++) {\n                            x2 = i + Utils.DIRS[dir][0];\n                            y2 = j + Utils.DIRS[dir][1];\n                            if (spawnMap.hasXY(x2, y2) &&\n                                !spawnMap[x2][y2] &&\n                                random.chance(startProb) &&\n                                cellIsOk(effect, map, x2, y2, false)) {\n                                spawnMap[x2][y2] = t;\n                                madeChange = true;\n                                ++count;\n                            }\n                        }\n                    }\n                }\n            }\n            startProb -= probDec;\n        }\n    }\n    return count > 0;\n}\n// export function spreadCircle(\n//     this: any,\n//     ctx: Effect.EffectCtx,\n//     spawnMap: Grid.NumGrid\n// ) {\n//     const x = ctx.x;\n//     const y = ctx.y;\n//     let startProb = this.spread || 0;\n//     let probDec = this.decrement || 0;\n//     spawnMap.fill(0);\n//     spawnMap[x][y] = 1; // incremented before anything else happens\n//     let radius = 0;\n//     startProb = startProb || 100;\n//     if (startProb >= 100) {\n//         probDec = probDec || 100;\n//     }\n//     while (GW.random.chance(startProb)) {\n//         startProb -= probDec;\n//         ++radius;\n//     }\n//     // startProb = 100;\n//     // probDec = 0;\n//     spawnMap.updateCircle(x, y, radius, (_v, i, j) => {\n//         if (!cellIsOk(this, i, j, ctx)) return 0;\n//         // const dist = Math.floor(Utils.distanceBetween(x, y, i, j));\n//         // const prob = startProb - dist * probDec;\n//         // if (!random.chance(prob)) return 0;\n//         return 1;\n//     });\n//     // spawnMap[x][y] = 1;\n//     // if (!isOk(flags, x, y, ctx)) {\n//     //     spawnMap[x][y] = 0;\n//     // }\n//     return true;\n// }\n// export function spreadLine(\n//     this: any,\n//     ctx: Effect.EffectCtx,\n//     spawnMap: Grid.NumGrid\n// ) {\n//     let x2, y2;\n//     let madeChange;\n//     const x = ctx.x;\n//     const y = ctx.y;\n//     let startProb = this.spread || 0;\n//     let probDec = this.decrement || 0;\n//     spawnMap.fill(0);\n//     spawnMap[x][y] = 1; // incremented before anything else happens\n//     if (startProb) {\n//         madeChange = true;\n//         if (startProb >= 100) {\n//             probDec = probDec || 100;\n//         }\n//         x2 = x;\n//         y2 = y;\n//         const dir = Utils.DIRS[GW.random.number(4)];\n//         while (madeChange) {\n//             madeChange = false;\n//             x2 = x2 + dir[0];\n//             y2 = y2 + dir[1];\n//             if (\n//                 spawnMap.hasXY(x2, y2) &&\n//                 !spawnMap[x2][y2] &&\n//                 cellIsOk(this, x2, y2, ctx) &&\n//                 GW.random.chance(startProb)\n//             ) {\n//                 spawnMap[x2][y2] = 1;\n//                 madeChange = true;\n//                 startProb -= probDec;\n//             }\n//         }\n//     }\n//     if (!cellIsOk(this, x, y, ctx)) {\n//         spawnMap[x][y] = 0;\n//     }\n//     return true;\n// }\nexport function clearCells(map, spawnMap, flags = 0) {\n    let didSomething = false;\n    const clearAll = (flags & Effect.Flags.E_CLEAR_CELL) === Effect.Flags.E_CLEAR_CELL;\n    spawnMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        const cell = map.cell(i, j);\n        if (clearAll) {\n            cell.clear();\n        }\n        else {\n            if (flags & Effect.Flags.E_CLEAR_GAS) {\n                cell.clearLayer(Entity.flags.Depth.GAS);\n            }\n            if (flags & Effect.Flags.E_CLEAR_LIQUID) {\n                cell.clearLayer(Entity.flags.Depth.LIQUID);\n            }\n            if (flags & Effect.Flags.E_CLEAR_SURFACE) {\n                cell.clearLayer(Entity.flags.Depth.SURFACE);\n            }\n            if (flags & Effect.Flags.E_CLEAR_GROUND) {\n                cell.clearLayer(Entity.flags.Depth.GROUND);\n            }\n        }\n        didSomething = true;\n    });\n    return didSomething;\n}\nexport function evacuateCreatures(map, blockingMap) {\n    let i = 0, j = 0;\n    let didSomething = false;\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            if (!blockingMap[i][j])\n                continue;\n            const cell = map.cell(i, j);\n            if (!cell.hasActor())\n                continue;\n            cell.objects.forEach((obj) => {\n                if (!(obj instanceof Actor))\n                    return;\n                const monst = obj;\n                const loc = random.matchingLocNear(i, j, (x, y) => {\n                    if (!map.hasXY(x, y))\n                        return false;\n                    if (blockingMap[x][y])\n                        return false;\n                    const c = map.cell(x, y);\n                    return !monst.forbidsCell(c);\n                });\n                if (loc && loc[0] >= 0 && loc[1] >= 0) {\n                    map.objects.move(monst, loc[0], loc[1]);\n                    // map.redrawXY(loc[0], loc[1]);\n                    didSomething = true;\n                }\n            });\n        }\n    }\n    return didSomething;\n}\nexport function evacuateItems(map, blockingMap) {\n    let didSomething = false;\n    blockingMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        const cell = map.cell(i, j);\n        if (!cell.hasItem())\n            return;\n        cell.objects.forEach((obj) => {\n            if (!(obj instanceof Item))\n                return;\n            const item = obj;\n            const loc = random.matchingLocNear(i, j, (x, y) => {\n                if (!map.hasXY(x, y))\n                    return false;\n                if (blockingMap[x][y])\n                    return false;\n                const dest = map.cell(x, y);\n                return !item.forbidsCell(dest);\n            });\n            if (loc && loc[0] >= 0 && loc[1] >= 0) {\n                map.objects.move(item, loc[0], loc[1]);\n                // map.redrawXY(loc[0], loc[1]);\n                didSomething = true;\n            }\n        });\n    });\n    return didSomething;\n}\nclass ClearTileEffect {\n    make(src, dest) {\n        if (!src.clear)\n            return true;\n        let config = src.clear;\n        let layers = 0;\n        if (typeof config === 'string') {\n            config = config.split(/[,|]/).map((t) => t.trim());\n        }\n        if (config === true) {\n            layers = Entity.flags.Depth.ALL_LAYERS;\n        }\n        else if (typeof config === 'number') {\n            layers = config;\n        }\n        else if (Array.isArray(config)) {\n            layers = config.reduce((out, v) => {\n                if (typeof v === 'number')\n                    return out | v;\n                const depth = Entity.flags.Depth[v] ||\n                    0;\n                return out | depth;\n            }, 0);\n        }\n        else {\n            throw new Error('clear effect must have number or string config.');\n        }\n        dest.clear = layers;\n        return layers > 0;\n    }\n    fire(config, map, x, y, _ctx) {\n        if (!config.clear)\n            return false;\n        if (!map)\n            return false;\n        const cell = map.cell(x, y);\n        return cell.clearLayer(config.clear);\n    }\n}\nEffect.installType('clear', new ClearTileEffect());\n//# sourceMappingURL=effect.js.map","import { Cell, Map, GameObject } from './flags';\nexport const flags = { Cell, Map, GameObject };\nexport * from './cell';\nexport * from './map';\nexport * from './analyze';\nexport * from './effect';\n//# sourceMappingURL=index.js.map"],"names":["eachChain","item","fn","index","next","addToChain","obj","name","entry","removeFromChain","root","prev","current","findInChain","cb","Chain","[object Object]","sort","onchange","this","data","find","o","DIRS","CLOCK_DIRS","NOOP","TRUE","clamp","v","min","max","x","src","y","Bounds","w","h","width","height","left","right","top","bottom","args","eachNeighbor","only4dirs","i","dir","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","assignField","dest","key","updated","copy","clear","nullify","clone","Array","isArray","slice","length","setDefaults","def","custom","Object","keys","forEach","origKey","defValue","parts","split","shift","undefined","ERROR","message","Error","WARN","console","warn","first","FP_FACTOR","forLine","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","forCircle","radius","j","forRect","arguments","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","async","asyncForEach","iterable","t","a","b","pct","dx","dy","matchFn","maxIndex","d","x0","y0","findIndex","result","push","diff","steps","c","last","step","currentXValue","maxXValue","sin","PI","omit","map","trim","includes","field","val","opts","_current","opt","search","concat","fields","f","member","_default","arg","some","av","arr","reduce","line","count","chain","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","Random","_fn","ROT","RNG","setSeed","getUniform","value","Number","MAX_SAFE_INTEGER","number","lo","hi","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","fromIndex","toIndex","r","buf","n","shuffle","percent","outOf","clumps","numSides","locationCount","Utils.forRect","k","candidateLocs","loc","random","cosmetic","Range","lower","upper","rng","_rng","clumped","other","make","config","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","from","fl","N","u","startsWith","substring","flagObj","inverse","out","join","Utils.DIRS","makeArray","l","fill","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","_width","_height","hasXY","Utils.eachNeighbor","sequence","constructor","update","col","Utils.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","dumpRect","Utils.clamp","output","padStart","log","bestLoc","bestDistance","dist","Utils.distanceBetween","chance","get","matchingLoc","matchingLocNear","Utils.arcCount","GRID_CACHE","NumGrid","bind","grid","pop","_resize","indexOf","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","Utils.Bounds","matchValue","numberOfCells","fillFn","floodFill","alloc","free","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","makeKeyEvent","e","toLowerCase","toUpperCase","clientX","clientY","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","unshift","ms","Utils.TRUE","done","elapsed","Promise","resolve","keymap","interval","setInterval","pushEvent","nextEvent","draw","clearInterval","setTimeout","nextKeyOrClick","pause","loop","FovFlags","id","clearEvents","preventDefault","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","ITEM_DETECTED","MONSTER_DETECTED","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","Utils.calcRadius","_hasXY","_debug","debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","FovSystem","site","flags","Grid.make","_changed","viewportChanged","fov","FOV.FOV","blocksVision","visible","makeAlwaysVisible","revealed","revealAll","changed","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","REVEALED","ALWAYS_VISIBLE","flag","WAS_ANY_KIND_OF_VISIBLE","WAS_IN_FOV","isVisible","wasVisible","cellRevealed","isClairy","wasClairy","storeMemory","redrawCell","isTele","wasTele","isMonst","wasMonst","WAS_MONSTER_DETECTED","hasVisibleLight","updateCellVisibility","updateCellClairyvoyance","updateCellTelepathy","updateCellDetect","cx","cy","cr","lightingChanged","demoteCellVisibility","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","Utils.addToChain","removeListener","success","Utils.eachChain","matches","Utils.removeFromChain","clearEvent","emit","apply","p","level","funcs","levels","frequency","start","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","toColorInt","g","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","set","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","assign","separate","A","hDiff","mix","WHITE","BLACK","install","info","installSpread","lighten","darken","NONE","temp","Mixer","Utils.first","fg","Color.from","bg","equals","opacity","color","multiply","multiplier","scale","add","Color.separate","bake","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","remove","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","_data","Uint32Array","orig","style","toGlyph","sprite","Text.eachChar","Text.wordWrap","xi","strength","mixer","drawSprite","header","Buffer","canvas","_target","copyTo","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","_requestRender","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","Color.make","templates","msg","Text.compile","GW.config","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","Text.apply","commitCombatMessage","addMessage","_a","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","Text.length","addMessageLine","Effect","needs","actor","isPlayer","addCombatMessage","fire","effect","ctx_","force","Grid.alloc","didSomething","handlers","effectTypes","Flags","E_NO_MARK_FIRED","E_FIRED","E_NEXT_ALWAYS","DATA","gameHasEnded","nextInfo","E_NEXT_EVERYWHERE","forEachAsync","Grid.free","reset","E_CLEAR_GROUND","E_CLEAR_SURFACE","E_CLEAR_LIQUID","E_CLEAR_GAS","E_BLOCKED_BY_ITEMS","E_BLOCKED_BY_ACTORS","effects","fromFlag","installType","effectType","MessageEffect","fired","Msg.add","EmitEffect","Events.emit","Blob","rounds","minWidth","minHeight","maxWidth","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","UTILS.Bounds","GRID.alloc","tries","_cellularAutomataRound","valueBounds","GRID.free","nbCount","buffer2","UTILS.DIRS","GameObject","Depth","carve","L_BLOCKS_ITEMS","L_BLOCKS_SURFACE","L_BLOCKS_GAS","L_BLOCKS_LIQUID","L_BLOCKS_EFFECTS","L_BLOCKS_ACTORS","L_BLOCKS_MOVE","L_BLOCKS_VISION","L_BLOCKS_DIAGONAL","L_IS_WALL","depth","light","object","CONFIG","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","calcFov","lightValue","addCellLight","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","LightSystem","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","anyLightChanged","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor","Tile","TileMech","T_UP_STAIRS","T_DOWN_STAIRS","T_PORTAL","T_AUTO_DESCENT","T_LAVA","T_DEEP_WATER","T_SPONTANEOUSLY_IGNITES","T_HAS_STAIRS","T_IS_TRAP","T_IS_FIRE","T_ENTANGLES","_c","dissipate","priority","Sprite.make","description","flavor","article","tile","tileMech","ObjectFlags","blocksMove","hasTileFlag","Flags.Tile","T_PATHING_BLOCKER","getName","_e","_f","extends","tiles","Effect.make","Flag.from","Flags.TileMech","Light.make","groundTile","all","enter","open","tick","close","Cell","Map","Actor","IS_IN_ROOM_MACHINE","IS_IN_AREA_MACHINE","HAS_ITEM","HAS_DORMANT_MONSTER","STABLE_MEMORY","SEARCHED_FROM_HERE","PRESSURE_PLATE_DEPRESSED","KNOWN_TO_BE_TRAP_FREE","IS_IN_LOOP","IS_CHOKEPOINT","IS_GATE_SITE","IS_IN_MACHINE","IMPREGNABLE","HAS_PLAYER","HAS_ACTOR","HAS_ANY_ACTOR","NEEDS_REDRAW","CELL_CHANGED","CellMemory","snapshot","cell","chokeCount","gasVolume","liquidVolume","TILE.tiles","NULL","objects","needsRedraw","memory","TILE.Tile","TILE.get","blocksPathing","blocksEffects","TILE.flags","T_BLOCKS_OTHER_LAYERS","depthTile","Effect.effects","Effect.fire","hasEffect","hasCellFlag","Flags.Depth","ACTOR","hasActorFlag","Flags.Actor","IS_PLAYER","_cell","Item","quantity","ITEM","MapLayer","properties","ObjectLayer","_dt","ActorLayer","_opts","forbidsCell","Flags.Cell","setCellFlag","clearCellFlag","ItemLayer","TileLayer","Tile.tiles","setTile","ObjectList","cells","has","getLayer","layers","_objects","FOV.FovSystem","initLayers","addLayer","GROUND","SURFACE","layer","Canvas.Canvas","getAppearanceAt","isAnyKindOfVisible","fmt","dump","hasObjectFlag","boundary","hasTile","_src","putAppearance","putSnapshot","getSnapshot","getLight","isRevealed","_cb","isDark","_x","_y","clearMemory","redraw","updateChokepoints","updateCounts","passMap","L_SECRETLY_PASSABLE","passableArcCount","CellFlags","Utils.CLOCK_DIRS","cellCount","floodFillCount","i2","j2","startX","startY","updateLoopiness","eachCell","resetLoopiness","checkLoopiness","cleanLoopiness","inString","sdir","numStrings","maxStringLength","currentStringLength","newCell","fillInnerLoopGrid","up","designationSurvives","SpawnEffect","grow","decrement","spread","Effect.Flags","volume","matchTile","abortIfBlocking","E_ABORT_IF_BLOCKS_MAP","isBlocking","E_PERMIT_BLOCKING","E_TREAT_AS_BLOCKING","computeSpawnMap","mapDisruptedBy","E_EVACUATE_CREATURES","evacuateCreatures","E_EVACUATE_ITEMS","evacuateItems","E_CLEAR_CELL","clearCells","spawnTiles","blockingGrid","blockingToMapX","blockingToMapY","walkableGrid","disrupts","lakeX","lakeY","isStairs","spawnMap","accomplishedSomething","blockedByOtherLayers","E_BLOCKED_BY_OTHER_LAYERS","superpriority","E_SUPERPRIORITY","Entity.flags.Depth","GAS","LIQUID","depthPriority","blocksLayer","hasItem","highestPriority","EVENT_FIRED_THIS_TURN","E_PROTECTED","EVENT_PROTECTED","setMapFlag","Flags.Map","MAP_CHANGED","cellIsOk","isStart","E_BUILD_IN_WALLS","isWall","E_MUST_TOUCH_WALLS","E_NO_TOUCH_WALLS","madeChange","startProb","probDec","clearAll","clearLayer","blockingMap","monst","move","ALL_LAYERS","prefab","charToTile","isStringArray","updateChokeCounts"],"mappings":"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"}