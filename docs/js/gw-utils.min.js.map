{"version":3,"file":"gw-utils.min.js","sources":["../js/utils.js","../js/random.js","../js/gw.js","../js/range.js","../js/flag.js","../js/types.js","../js/grid.js","../js/io.js","../js/fov.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/canvas/canvas.js","../js/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/dancingBuffer.js","../js/sprite/sprite.js","../js/message.js","../js/effect.js"],"sourcesContent":["/**\n * GW.utils\n * @module utils\n */\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    return dest.x == x(src) && dest.y == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothHiliteGradient(currentXValue, maxXValue) {\n    return Math.floor(100 * Math.sin((Math.PI * currentXValue) / maxXValue));\n}\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\nexport function chainLength(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function chainIncludes(chain, entry) {\n    while (chain && chain !== entry) {\n        chain = chain.next;\n    }\n    return chain === entry;\n}\nexport function eachChain(item, fn) {\n    let index = 0;\n    while (item) {\n        const next = item.next;\n        fn(item, index++);\n        item = next;\n    }\n    return index; // really count\n}\nexport function addToChain(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function removeFromChain(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\n// LINES\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLine(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc)) {\n            break;\n        }\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n        return x == toX && y == toY;\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return true;\n        line.push([x, y]);\n        return false;\n    });\n    return line;\n}\n//# sourceMappingURL=utils.js.map","const RANDOM_CONFIG = {\n    make: () => {\n        return Math.random.bind(Math);\n    },\n};\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        console.warn('Lottery Draw - no frequencies', frequencies, frequencies.length);\n        return 0;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    return entries[index][0];\n}\nexport class Random {\n    constructor() {\n        this._fn = RANDOM_CONFIG.make();\n    }\n    static configure(opts) {\n        if (opts.make) {\n            if (typeof opts.make !== 'function')\n                throw new Error('Random make parameter must be a function.');\n            if (typeof opts.make(12345) !== 'function')\n                throw new Error('Random make function must accept a numeric seed and return a random function.');\n            RANDOM_CONFIG.make = opts.make;\n            random.seed();\n            cosmetic.seed();\n        }\n    }\n    seed(val) {\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max) {\n        // @ts-ignore\n        if (max <= 0)\n            return 0;\n        max = max || Number.MAX_SAFE_INTEGER;\n        return Math.floor(this._fn() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\n//# sourceMappingURL=random.js.map","export const data = {};\nexport const config = {};\nexport const make = {};\nexport const flags = {};\n//# sourceMappingURL=gw.js.map","import { random } from \"./random\";\nimport { make as Make } from \"./gw\";\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1, rng) {\n        this._rng = rng || random;\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value() {\n        return this._rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        this._rng = other._rng;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return \"\" + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config, rng) {\n    if (!config)\n        return new Range(0, 0, 0, rng);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == \"function\")\n        throw new Error(\"Custom range functions not supported - extend Range\");\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0, rng);\n    if (typeof config == \"number\")\n        return new Range(config, config, 1, rng);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error(\"Invalid random config: \" + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2], rng);\n    }\n    if (typeof config !== \"string\") {\n        throw new Error(\"Calculations must be strings.  Received: \" + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0, rng);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count, rng);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps, rng);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3, rng);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1, rng);\n        }\n    }\n    throw new Error(\"Not a valid range - \" + config);\n}\nMake.range = make;\nexport const from = make;\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === \"number\")\n            out[value] = key;\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(\" | \");\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == \"number\") {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === \"string\") {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == \"string\") {\n                    v = v.trim();\n                    if (v.startsWith(\"!\")) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=flag.js.map","import * as Utils from './utils';\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    contains(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (typeof x !== 'number') {\n            y = Utils.y(x);\n            x = Utils.x(x);\n        }\n        return (this.x <= x &&\n            this.y <= y &&\n            this.x + this.width > x &&\n            this.y + this.height > y);\n    }\n}\n//# sourceMappingURL=types.js.map","import { random } from './random';\nimport * as Utils from './utils';\nimport { Bounds } from './types';\nimport { make as Make } from './gw';\nconst DIRS = Utils.DIRS;\nconst CDIRS = Utils.CLOCK_DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        w = Math.min(this.width - x, w);\n        h = Math.min(this.height - y, h);\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    forCircle(x, y, radius, fn) {\n        let i, j;\n        for (i = Math.max(0, x - radius - 1); i < Math.min(this.width, x + radius + 1); i++) {\n            for (j = Math.max(0, y - radius - 1); j < Math.min(this.height, y + radius + 1); j++) {\n                if (this.hasXY(i, j) &&\n                    (i - x) * (i - x) + (j - y) * (j - y) <\n                        radius * radius + radius) {\n                    // + radius softens the circle\n                    fn(this[i][j], i, j, this);\n                }\n            }\n        }\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    updateRect(x, y, width, height, fn) {\n        let i, j;\n        for (i = x; i < x + width; i++) {\n            for (j = y; j < y + height; j++) {\n                if (this.hasXY(i, j)) {\n                    this[i][j] = fn(this[i][j], i, j, this);\n                }\n            }\n        }\n    }\n    updateCircle(x, y, radius, fn) {\n        let i, j;\n        for (i = Math.max(0, x - radius - 1); i < Math.min(this.width, x + radius + 1); i++) {\n            for (j = Math.max(0, y - radius - 1); j < Math.min(this.height, y + radius + 1); j++) {\n                if (this.hasXY(i, j) &&\n                    (i - x) * (i - x) + (j - y) * (j - y) <\n                        radius * radius + radius) {\n                    // + radius softens the circle\n                    this[i][j] = fn(this[i][j], i, j, this);\n                }\n            }\n        }\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    dump(fmtFn) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn);\n    }\n    dumpRect(left, top, width, height, fmtFn) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        console.log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * Utils.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v, deterministic = false) {\n        let locationCount = 0;\n        let i, j, index;\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        locationCount = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else if (deterministic) {\n            index = Math.floor(locationCount / 2);\n        }\n        else {\n            index = random.range(0, locationCount - 1);\n        }\n        for (i = 0; i < this.width && index >= 0; i++) {\n            for (j = 0; j < this.height && index >= 0; j++) {\n                if (fn(this[i][j], i, j, this)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, v, deterministic = false) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < Math.max(this.width, this.height) && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if (this.hasXY(i, j) &&\n                        (i == x - k ||\n                            i == x + k ||\n                            j == y - k ||\n                            j == y + k) &&\n                        fn(this[i][j], i, j, this)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        if (deterministic) {\n            randIndex = 1 + Math.floor(candidateLocs / 2);\n        }\n        else {\n            randIndex = 1 + random.number(candidateLocs);\n        }\n        for (k = 0; k < Math.max(this.width, this.height); k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if (this.hasXY(i, j) &&\n                        (i == x - k ||\n                            i == x + k ||\n                            j == y - k ||\n                            j == y + k) &&\n                        fn(this[i][j], i, j, this)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        // brogueAssert(false);\n        return [-1, -1]; // should never reach this point\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        let oldX, oldY, newX, newY;\n        // brogueAssert(grid.hasXY(x, y));\n        testFn = testFn || Utils.IS_NONZERO;\n        let arcCount = 0;\n        let matchCount = 0;\n        for (let dir = 0; dir < CDIRS.length; dir++) {\n            oldX = x + CDIRS[(dir + 7) % 8][0];\n            oldY = y + CDIRS[(dir + 7) % 8][1];\n            newX = x + CDIRS[dir][0];\n            newY = y + CDIRS[dir][1];\n            // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n            const newOk = this.hasXY(newX, newY) &&\n                testFn(this[newX][newY], newX, newY, this);\n            const oldOk = this.hasXY(oldX, oldY) &&\n                testFn(this[oldX][oldY], oldX, oldY, this);\n            if (newOk)\n                ++matchCount;\n            if (newOk != oldOk) {\n                arcCount++;\n            }\n        }\n        if (arcCount == 0 && matchCount)\n            return 1;\n        return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n    }\n}\nconst GRID_CACHE = [];\n// @ts-ignore\nlet GRID_ACTIVE_COUNT = 0;\n// @ts-ignore\nlet GRID_ALLOC_COUNT = 0;\n// @ts-ignore\nlet GRID_CREATE_COUNT = 0;\n// @ts-ignore\nlet GRID_FREE_COUNT = 0;\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(w, h, v = 0) {\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++GRID_ACTIVE_COUNT;\n        ++GRID_ALLOC_COUNT;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++GRID_CREATE_COUNT;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++GRID_FREE_COUNT;\n            --GRID_ACTIVE_COUNT;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc(deterministic = false) {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue, deterministic);\n    }\n    valueBounds(value) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        return new Bounds(left, top, right - left + 1, bottom - top + 1);\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        let dir;\n        let newX, newY, numberOfCells = 1;\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        // Iterate through the four cardinal neighbors.\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (!this.hasXY(newX, newY)) {\n                continue;\n            }\n            if (matchFn(this[newX][newY], newX, newY, this)) {\n                // If the neighbor is an unmarked region cell,\n                numberOfCells += this.floodFill(newX, newY, matchFn, fillFn); // then recurse.\n            }\n        }\n        return numberOfCells;\n    }\n    _cellularAutomataRound(birthParameters /* char[9] */, survivalParameters /* char[9] */) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = NumGrid.alloc(this.width, this.height);\n        buffer2.copy(this); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < DIRS.length; dir++) {\n                    newX = i + DIRS[dir][0];\n                    newY = j + DIRS[dir][1];\n                    if (this.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] && birthParameters[nbCount] == 't') {\n                    this[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    this[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        NumGrid.free(buffer2);\n        return didSomething;\n    }\n    // Loads up **grid with the results of a cellular automata simulation.\n    fillBlob(roundCount, minBlobWidth, minBlobHeight, maxBlobWidth, maxBlobHeight, percentSeeded = 50, birthParameters = 'ffffffttt', survivalParameters = 'ffffttttt') {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds;\n        birthParameters = birthParameters.toLowerCase();\n        survivalParameters = survivalParameters.toLowerCase();\n        if (minBlobWidth >= maxBlobWidth) {\n            minBlobWidth = Math.round(0.75 * maxBlobWidth);\n            maxBlobWidth = Math.round(1.25 * maxBlobWidth);\n        }\n        if (minBlobHeight >= maxBlobHeight) {\n            minBlobHeight = Math.round(0.75 * maxBlobHeight);\n            maxBlobHeight = Math.round(1.25 * maxBlobHeight);\n        }\n        const left = Math.floor((this.width - maxBlobWidth) / 2);\n        const top = Math.floor((this.height - maxBlobHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            this.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < maxBlobWidth; i++) {\n                for (j = 0; j < maxBlobHeight; j++) {\n                    this[i + left][j + top] = random.chance(percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < roundCount; k++) {\n                if (!this._cellularAutomataRound(birthParameters, survivalParameters)) {\n                    k = roundCount; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < this.width; i++) {\n                for (j = 0; j < this.height; j++) {\n                    if (this[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = this.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            bounds = this.valueBounds(topBlobNumber);\n        } while ((bounds.width < minBlobWidth ||\n            bounds.height < minBlobHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == topBlobNumber) {\n                    this[i][j] = 1;\n                }\n                else {\n                    this[i][j] = 0;\n                }\n            }\n        }\n        // Populate the returned variables.\n        return bounds;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nMake.grid = make;\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\n// If the indicated tile is a wall on the room stored in grid, and it could be the site of\n// a door out of that room, then return the outbound direction that the door faces.\n// Otherwise, return def.NO_DIRECTION.\nexport function directionOfDoorSite(grid, x, y, isOpen) {\n    let dir, solutionDir;\n    let newX, newY, oppX, oppY;\n    const fnOpen = typeof isOpen === 'function'\n        ? isOpen\n        : (v) => v == isOpen;\n    solutionDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < 4; dir++) {\n        newX = x + DIRS[dir][0];\n        newY = y + DIRS[dir][1];\n        oppX = x - DIRS[dir][0];\n        oppY = y - DIRS[dir][1];\n        if (grid.hasXY(oppX, oppY) &&\n            grid.hasXY(newX, newY) &&\n            fnOpen(grid[oppX][oppY], oppX, oppY, grid)) {\n            // This grid cell would be a valid tile on which to place a door that, facing outward, points dir.\n            if (solutionDir != Utils.NO_DIRECTION) {\n                // Already claimed by another direction; no doors here!\n                return Utils.NO_DIRECTION;\n            }\n            solutionDir = dir;\n        }\n    }\n    return solutionDir;\n}\n// Grid.directionOfDoorSite = directionOfDoorSite;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nimport { make as Make } from './gw';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = false;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            console.warn('OVERWRITE HANDLER - nextEvent');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        const interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n        this.running = true;\n        while (this.running) {\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                this.running = false;\n            }\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                // @ts-ignore\n                keymap.draw();\n            }\n        }\n        clearInterval(interval);\n    }\n    stop() {\n        this.running = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n}\nexport function make() {\n    return new Loop();\n}\nMake.loop = make;\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from \"./utils\";\nexport class FOV {\n    constructor(strategy) {\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || Utils.calcRadius;\n        this._setVisible = strategy.setVisible;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n    }\n    calculate(x, y, maxRadius) {\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = Utils.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            // fov.debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            // fov.debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        // fov.debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            // fov.debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                // fov.debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    // fov.debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) && row < this._maxRadius) {\n                    //hit a wall within sight line\n                    // fov.debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","import * as Grid from \"./grid\";\nimport * as Utils from \"./utils\";\n// var PATH = {};\n// export { PATH as path };\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = Utils.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\n// function pdsGetDistance(map, x, y) {\n// \tupdate(map);\n// \treturn getLink(map, x, y).distance;\n// }\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\n// function pdsSetCosts(map: DijkstraMap, costMap: Grid.NumGrid) {\n// \tlet i, j;\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n// \t\t\tif (i != 0 && j != 0 && i < map.width - 1 && j < map.height - 1) {\n// \t\t\t\tgetLink(map, i, j).cost = costMap[i][j];\n// \t\t\t} else {\n// \t\t\t\tgetLink(map, i, j).cost = FORBIDDEN;\n// \t\t\t}\n// \t\t}\n// \t}\n// }\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\n// function pdsBatchInput(\n//   map: DijkstraMap,\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   maxDistance: number,\n//   eightWays: boolean\n// ) {\n//   let i, j;\n//   map.eightWays = eightWays;\n//   let left: CostLink | null = map.front;\n//   let right: CostLink | null = map.front.right;\n//   map.front.right = null;\n//   for (i = 0; i < map.width; i++) {\n//     for (j = 0; j < map.height; j++) {\n//       let link = getLink(map, i, j);\n//       if (distanceMap != null) {\n//         link.distance = distanceMap[i][j];\n//       } else {\n//         if (costMap != null) {\n//           // totally hackish; refactor\n//           link.distance = maxDistance;\n//         }\n//       }\n//       let cost;\n//       if (isBoundaryXY(costMap, i, j)) {\n//         cost = OBSTRUCTION;\n//       } else {\n//         cost = costMap[i][j];\n//       }\n//       link.cost = cost;\n//       if (cost > 0) {\n//         if (link.distance < maxDistance) {\n//           if (right === null || right.distance > link.distance) {\n//             // left and right are used to traverse the list; if many cells have similar values,\n//             // some time can be saved by not clearing them with each insertion.  this time,\n//             // sadly, we have to start from the front.\n//             left = map.front;\n//             right = map.front.right;\n//           }\n//           while (right !== null && right.distance < link.distance) {\n//             left = right;\n//             right = right.right;\n//           }\n//           link.right = right;\n//           link.left = left;\n//           left.right = link;\n//           if (right != null) right.left = link;\n//           left = link;\n//         } else {\n//           link.right = null;\n//           link.left = null;\n//         }\n//       } else {\n//         link.right = null;\n//         link.left = null;\n//       }\n//     }\n//   }\n// }\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\n// function dijkstraScan(\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   useDiagonals = false\n// ) {\n//   // static makeDijkstraMap map;\n//   const width = distanceMap.length;\n//   const height = distanceMap[0].length;\n//   if (\n//     !DIJKSTRA_MAP ||\n//     DIJKSTRA_MAP.width < width ||\n//     DIJKSTRA_MAP.height < height\n//   ) {\n//     DIJKSTRA_MAP = makeDijkstraMap(width, height);\n//   }\n//   DIJKSTRA_MAP.width = width;\n//   DIJKSTRA_MAP.height = height;\n//   pdsBatchInput(DIJKSTRA_MAP, distanceMap, costMap, NO_PATH, useDiagonals);\n//   batchOutput(DIJKSTRA_MAP, distanceMap);\n// }\n//\n// function populateGenericCostMap(costMap, map) {\n//   let i, j;\n//\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n//       if (map.hasTileFlag(i, j, def.T_OBSTRUCTS_PASSABILITY)\n//           && (!map.hasTileMechFlag(i, j, def.TM_IS_SECRET) || (map.discoveredTileFlags(i, j) & def.T_OBSTRUCTS_PASSABILITY)))\n// \t\t\t{\n// \t\t\t\tcostMap[i][j] = map.hasTileFlag(i, j, def.T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n//       } else if (map.hasTileFlag(i, j, def.T_PATHING_BLOCKER & ~def.T_OBSTRUCTS_PASSABILITY)) {\n// \t\t\t\tcostMap[i][j] = FORBIDDEN;\n//       } else {\n//         costMap[i][j] = 1;\n//       }\n//     }\n//   }\n// }\n//\n// GW.path.populateGenericCostMap = populateGenericCostMap;\n//\n//\n// function baseCostFunction(blockingTerrainFlags, traveler, canUseSecretDoors, i, j) {\n// \tlet cost = 1;\n// \tmonst = GW.MAP.actorAt(i, j);\n// \tconst monstFlags = (monst ? (monst.info ? monst.info.flags : monst.flags) : 0) || 0;\n// \tif ((monstFlags & (def.MONST_IMMUNE_TO_WEAPONS | def.MONST_INVULNERABLE))\n// \t\t\t&& (monstFlags & (def.MONST_IMMOBILE | def.MONST_GETS_TURN_ON_ACTIVATION)))\n// \t{\n// \t\t\t// Always avoid damage-immune stationary monsters.\n// \t\tcost = FORBIDDEN;\n// \t} else if (canUseSecretDoors\n// \t\t\t&& GW.MAP.hasTileMechFlag(i, j, TM_IS_SECRET)\n// \t\t\t&& GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t&& !(GW.MAP.hasDiscoveredFlag(i, j) & T_OBSTRUCTS_PASSABILITY))\n// \t{\n// \t\tcost = 1;\n// \t} else if (GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t\t || (traveler && traveler === GW.PLAYER && !(GW.MAP.hasCellFlag(i, j, (REVEALED | MAGIC_MAPPED)))))\n// \t{\n// \t\tcost = GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n// \t} else if ((traveler && GW.actor.avoidsCell(traveler, i, j)) || GW.MAP.hasTileFlag(i, j, blockingTerrainFlags)) {\n// \t\tcost = FORBIDDEN;\n// \t}\n//\n// \treturn cost;\n// }\n//\n// GW.path.costFn = baseCostFunction;\n// GW.path.simpleCost = baseCostFunction.bind(undefined, 0, null, false);\n// GW.path.costForActor = ((actor) => baseCostFunction.bind(undefined, GW.actor.forbiddenFlags(actor), actor, actor !== GW.PLAYER));\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, NO_PATH, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// function pathingDistance(x1, y1, x2, y2, blockingTerrainFlags, actor) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tconst costFn = baseCostFunction.bind(undefined, blockingTerrainFlags, actor, true);\n// \tcalculateDistances(distanceMap, x2, y2, costFn, true);\n// \tretval = distanceMap[x1][y1];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.path.distanceFromTo = pathingDistance;\n// function monstTravelDistance(monst, x2, y2, blockingTerrainFlags) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tcalculateDistances(distanceMap, x2, y2, blockingTerrainFlags, monst, true, true);\n// \tretval = distanceMap[monst.x][monst.y];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.actor.travelDistance = monstTravelDistance;\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + Utils.DIRS[dir][0];\n        newY = y + Utils.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked && distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return Utils.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance && distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, true);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//\n// GW.path.from = getMonsterPathOnMap;\n//# sourceMappingURL=path.js.map","import * as Utils from \"./utils\";\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {Function} fn The listener function.\n     * @param {Object} [context=null] The context to invoke the listener with.\n     * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {Function} fn - The function\n     * @param {Object} [context] - The context Object.\n     * @param {Boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"The listener must be a function\");\n    }\n    const listener = new Listener(fn, context || null, once);\n    Utils.addToChain(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    Utils.eachChain(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            Utils.removeFromChain(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            Utils.removeFromChain(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === \"number\")\n        return () => v;\n    if (typeof v === \"function\")\n        return v;\n    let base = {};\n    if (typeof v === \"string\") {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(\":\");\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        frequency = Number.parseInt(frequency);\n        if (levels.includes(\"-\")) {\n            let [start, end] = levels\n                .split(\"-\")\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? frequency : 0;\n        }\n        else if (levels.endsWith(\"+\")) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? frequency : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? frequency : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || \"monospace\";\n        this._node = document.createElement(\"canvas\");\n        this._ctx = this.node.getContext(\"2d\");\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === \"string\") {\n            if (src.startsWith(\"data:\"))\n                throw new Error(\"Glyph: You must load a data string into an image element and use that.\");\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error(\"Glyph: Failed to find image element with id:\" + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === \"string\") {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = \"black\";\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize || opts.size || Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = \"\" + size + \"px \" + opts.font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n        this._ctx.fillStyle = \"white\";\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error(\"Cannot draw more than 256 glyphs.\");\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        if (typeof ch === \"function\") {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        if (!basicOnly) {\n            [\n                \" \",\n                \"\\u263a\",\n                \"\\u263b\",\n                \"\\u2665\",\n                \"\\u2666\",\n                \"\\u2663\",\n                \"\\u2660\",\n                \"\\u263c\",\n                \"\\u2600\",\n                \"\\u2605\",\n                \"\\u2606\",\n                \"\\u2642\",\n                \"\\u2640\",\n                \"\\u266a\",\n                \"\\u266b\",\n                \"\\u2638\",\n                \"\\u25b6\",\n                \"\\u25c0\",\n                \"\\u2195\",\n                \"\\u203c\",\n                \"\\u204b\",\n                \"\\u262f\",\n                \"\\u2318\",\n                \"\\u2616\",\n                \"\\u2191\",\n                \"\\u2193\",\n                \"\\u2192\",\n                \"\\u2190\",\n                \"\\u2126\",\n                \"\\u2194\",\n                \"\\u25b2\",\n                \"\\u25bc\",\n            ].forEach((ch, i) => {\n                this.draw(i, ch);\n            });\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                \"\\u2302\",\n                \"\\u00C7\",\n                \"\\u00FC\",\n                \"\\u00E9\",\n                \"\\u00E2\",\n                \"\\u00E4\",\n                \"\\u00E0\",\n                \"\\u00E5\",\n                \"\\u00E7\",\n                \"\\u00EA\",\n                \"\\u00EB\",\n                \"\\u00E8\",\n                \"\\u00EF\",\n                \"\\u00EE\",\n                \"\\u00EC\",\n                \"\\u00C4\",\n                \"\\u00C5\",\n                \"\\u00C9\",\n                \"\\u00E6\",\n                \"\\u00C6\",\n                \"\\u00F4\",\n                \"\\u00F6\",\n                \"\\u00F2\",\n                \"\\u00FB\",\n                \"\\u00F9\",\n                \"\\u00FF\",\n                \"\\u00D6\",\n                \"\\u00DC\",\n                \"\\u00A2\",\n                \"\\u00A3\",\n                \"\\u00A5\",\n                \"\\u20A7\",\n                \"\\u0192\",\n                \"\\u00E1\",\n                \"\\u00ED\",\n                \"\\u00F3\",\n                \"\\u00FA\",\n                \"\\u00F1\",\n                \"\\u00D1\",\n                \"\\u00AA\",\n                \"\\u00BA\",\n                \"\\u00BF\",\n                \"\\u2310\",\n                \"\\u00AC\",\n                \"\\u00BD\",\n                \"\\u00BC\",\n                \"\\u00A1\",\n                \"\\u00AB\",\n                \"\\u00BB\",\n                \"\\u2591\",\n                \"\\u2592\",\n                \"\\u2593\",\n                \"\\u2502\",\n                \"\\u2524\",\n                \"\\u2561\",\n                \"\\u2562\",\n                \"\\u2556\",\n                \"\\u2555\",\n                \"\\u2563\",\n                \"\\u2551\",\n                \"\\u2557\",\n                \"\\u255D\",\n                \"\\u255C\",\n                \"\\u255B\",\n                \"\\u2510\",\n                \"\\u2514\",\n                \"\\u2534\",\n                \"\\u252C\",\n                \"\\u251C\",\n                \"\\u2500\",\n                \"\\u253C\",\n                \"\\u255E\",\n                \"\\u255F\",\n                \"\\u255A\",\n                \"\\u2554\",\n                \"\\u2569\",\n                \"\\u2566\",\n                \"\\u2560\",\n                \"\\u2550\",\n                \"\\u256C\",\n                \"\\u2567\",\n                \"\\u2568\",\n                \"\\u2564\",\n                \"\\u2565\",\n                \"\\u2559\",\n                \"\\u2558\",\n                \"\\u2552\",\n                \"\\u2553\",\n                \"\\u256B\",\n                \"\\u256A\",\n                \"\\u2518\",\n                \"\\u250C\",\n                \"\\u2588\",\n                \"\\u2584\",\n                \"\\u258C\",\n                \"\\u2590\",\n                \"\\u2580\",\n                \"\\u03B1\",\n                \"\\u00DF\",\n                \"\\u0393\",\n                \"\\u03C0\",\n                \"\\u03A3\",\n                \"\\u03C3\",\n                \"\\u00B5\",\n                \"\\u03C4\",\n                \"\\u03A6\",\n                \"\\u0398\",\n                \"\\u03A9\",\n                \"\\u03B4\",\n                \"\\u221E\",\n                \"\\u03C6\",\n                \"\\u03B5\",\n                \"\\u2229\",\n                \"\\u2261\",\n                \"\\u00B1\",\n                \"\\u2265\",\n                \"\\u2264\",\n                \"\\u2320\",\n                \"\\u2321\",\n                \"\\u00F7\",\n                \"\\u2248\",\n                \"\\u00B0\",\n                \"\\u2219\",\n                \"\\u00B7\",\n                \"\\u221A\",\n                \"\\u207F\",\n                \"\\u00B2\",\n                \"\\u25A0\",\n                \"\\u00A0\",\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(options) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error('You must supply glyphs for the canvas.');\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(options);\n        const io = options.io || options.loop;\n        if (io) {\n            this.onclick = (e) => io.pushEvent(e);\n            this.onmousemove = (e) => io.pushEvent(e);\n            this.onmouseup = (e) => io.pushEvent(e);\n        }\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = options.render !== false;\n        this._setGlyphs(options.glyphs);\n        if (options.div) {\n            let el;\n            if (typeof options.div === 'string') {\n                el = document.getElementById(options.div);\n                if (!el) {\n                    console.warn('Failed to find parent element by ID: ' + options.div);\n                }\n            }\n            else {\n                el = options.div;\n            }\n            if (el && el.appendChild) {\n                el.appendChild(this.node);\n            }\n        }\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    draw(x, y, glyph, fg, bg) {\n        glyph = glyph & 0xff;\n        bg = bg & 0xfff;\n        fg = fg & 0xfff;\n        const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n        this._set(x, y, style);\n        return this;\n    }\n    fill(...args) {\n        let g = 0, fg = 0, bg = 0;\n        if (args.length == 1) {\n            bg = args[0];\n        }\n        else if (args.length == 3) {\n            [g, fg, bg] = args;\n        }\n        for (let x = 0; x < this._width; ++x) {\n            for (let y = 0; y < this._height; ++y) {\n                this.draw(x, y, g, fg, bg);\n            }\n        }\n        return this;\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        if (!this._autoRender)\n            return;\n        requestAnimationFrame(() => this.render());\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        if (current !== style) {\n            this._data[index] = style;\n            this._requestRender();\n            return true;\n        }\n        return false;\n    }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this.toX(e.offsetX);\n                const y = this.toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this.toX(e.offsetX);\n                const y = this.toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this.toX(e.offsetX);\n                const y = this.toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        index *= VERTICES_PER_TILE;\n        const current = this._data[index + 2];\n        if (current !== style) {\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n            this._requestRender();\n            return true;\n        }\n        return false;\n    }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    _set(x, y, style) {\n        const result = super._set(x, y, style);\n        if (result) {\n            this._changed[y * this.width + x] = 1;\n        }\n        return result;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function withImage(image) {\n    let opts = {};\n    if (typeof image === 'string') {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error('You must supply the image.');\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(opts);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(opts);\n    }\n    return canvas;\n}\nexport function withFont(src) {\n    if (typeof src === 'string') {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    let canvas;\n    try {\n        canvas = new Canvas(src);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(src);\n    }\n    return canvas;\n}\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import { cosmetic } from './random';\nimport { make as Make } from './gw';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nMake.color = make;\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from \"../color\";\nimport * as Utils from \"../utils\";\nimport { make } from \"../gw\";\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.from(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.from(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(info, opacity) {\n        if (opacity === undefined)\n            opacity = info.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if ((info.ch && info.ch !== -1) || info.ch === 0)\n            this.ch = info.ch;\n        if ((info.fg && info.fg !== -1) || info.fg === 0)\n            this.fg.mix(info.fg, opacity);\n        if ((info.bg && info.bg !== -1) || info.bg === 0)\n            this.bg.mix(info.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nmake.mixer = function (base) {\n    return new Mixer(base);\n};\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    while (count > 0) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1);\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text/index';\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const ch = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { ch, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this.toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        const mixer = new Mixer();\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const data = this.get(x, y);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(x, y, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.ch;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\n//# sourceMappingURL=buffer.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text/index';\nimport { DataBuffer } from './buffer';\nexport class DancingData {\n    constructor(width, height) {\n        this._data = [];\n        this._width = width;\n        this._height = height;\n        this._data = new Array(width * height).fill(0).map(() => new Mixer());\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index];\n        return style;\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        if (!current)\n            return;\n        current.draw(glyph, fg, bg);\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        if (!current)\n            return;\n        current.drawSprite(sprite);\n        return this;\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        this._data.forEach((m) => m.draw(glyph, fg, bg));\n        return this;\n    }\n    copy(other) {\n        if (other instanceof DataBuffer) {\n            this._data.forEach((m, i) => {\n                const x = i % this.width;\n                const y = Math.floor(i / this.width);\n                m.copy(other.get(x, y));\n            });\n        }\n        else {\n            this._data.forEach((m, i) => {\n                m.copy(other._data[i]);\n            });\n        }\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = this.get(x, y);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const mixer = this.get(x, y);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const mixer = this.get(x, y);\n                let glyph = mixer.ch;\n                if (typeof glyph === 'number') {\n                    glyph = String.fromCharCode(glyph || 32);\n                }\n                line += glyph[0];\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport class DancingBuffer extends DancingData {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        this.load();\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._data.forEach((m, i) => {\n            const x = i % this.width;\n            const y = Math.floor(i / this.width);\n            if (typeof m.ch === 'string') {\n                m.ch = this.toGlyph(m.ch);\n            }\n            this._target.draw(x, y, m.ch, m.fg.toInt(), m.bg.toInt());\n        });\n        return this;\n    }\n    load() {\n        const data = new Uint32Array(this.width * this.height);\n        this._target.copyTo(data);\n        data.forEach((style, index) => {\n            const mixer = this._data[index] || 0;\n            const ch = style >> 24;\n            const bg = (style >> 12) & 0xfff;\n            const fg = style & 0xfff;\n            mixer.draw(ch, bg, fg);\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=dancingBuffer.js.map","import * as Color from '../color';\nimport { make as Make } from '../gw';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity) {\n        if (!ch && ch !== 0)\n            ch = -1;\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        this.ch = ch;\n        this.fg = fg;\n        this.bg = bg;\n        this.opacity = opacity;\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || -1;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || -1;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nMake.sprite = make;\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","import * as Text from \"./text/index\";\nexport const templates = {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\n// messages\nconst ARCHIVE = [];\nconst CONFIRMED = [];\nvar ARCHIVE_LINES = 30;\nvar MSG_WIDTH = 80;\nvar CURRENT_ARCHIVE_POS = 0;\nvar NEEDS_UPDATE = false;\nlet COMBAT_MESSAGE = null;\nexport function needsUpdate(needs) {\n    if (needs) {\n        NEEDS_UPDATE = true;\n    }\n    return NEEDS_UPDATE;\n}\nexport function configure(opts) {\n    if (!opts)\n        opts = {};\n    ARCHIVE_LINES = opts.length || 30;\n    MSG_WIDTH = opts.width || 80;\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        ARCHIVE[i] = null;\n        CONFIRMED[i] = false;\n    }\n}\n////////////////////////////////////\n// Messages\nexport function add(msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    commitCombatMessage();\n    addMessage(msg);\n}\nexport function fromActor(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        add(msg, args);\n    }\n}\nexport function addCombat(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        const template = templates[msg];\n        if (template) {\n            msg = template(args);\n        }\n        else if (args) {\n            msg = Text.apply(msg, args);\n        }\n        addCombatMessage(msg);\n    }\n}\n// function messageWithoutCaps(msg, requireAcknowledgment) {\nfunction addMessageLine(msg) {\n    if (!Text.length(msg)) {\n        return;\n    }\n    // Add the message to the archive.\n    ARCHIVE[CURRENT_ARCHIVE_POS] = msg;\n    CONFIRMED[CURRENT_ARCHIVE_POS] = false;\n    CURRENT_ARCHIVE_POS = (CURRENT_ARCHIVE_POS + 1) % ARCHIVE_LINES;\n}\nfunction addMessage(msg) {\n    msg = Text.capitalize(msg);\n    // // Implement the American quotation mark/period/comma ordering rule.\n    // for (i=0; text.text[i] && text.text[i+1]; i++) {\n    //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n    //         i += 4;\n    //     } else if (text.text[i] === '\"'\n    //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n    // \t\t{\n    // \t\t\tconst replace = text.text[i+1] + '\"';\n    // \t\t\ttext.spliceRaw(i, 2, replace);\n    //     }\n    // }\n    const lines = Text.splitIntoLines(msg, MSG_WIDTH);\n    lines.forEach((l) => addMessageLine(l));\n    // display the message:\n    NEEDS_UPDATE = true;\n    // if (GAME.playbackMode) {\n    // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n    // }\n}\nfunction addCombatMessage(msg) {\n    if (!COMBAT_MESSAGE) {\n        COMBAT_MESSAGE = msg;\n    }\n    else {\n        COMBAT_MESSAGE += \", \" + Text.capitalize(msg);\n    }\n    NEEDS_UPDATE = true;\n}\nfunction commitCombatMessage() {\n    if (!COMBAT_MESSAGE)\n        return false;\n    addMessage(COMBAT_MESSAGE + \".\");\n    COMBAT_MESSAGE = null;\n    return true;\n}\nexport function confirmAll() {\n    for (let i = 0; i < CONFIRMED.length; i++) {\n        CONFIRMED[i] = true;\n    }\n    NEEDS_UPDATE = true;\n}\nexport function forEach(fn) {\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        const n = (i + CURRENT_ARCHIVE_POS - 1) % ARCHIVE_LINES;\n        const msg = ARCHIVE[n];\n        if (!msg)\n            return;\n        if (fn(msg, CONFIRMED[n], i) === false)\n            return;\n    }\n}\n//# sourceMappingURL=message.js.map","import { fl as Fl, from as fromFlag } from './flag';\nimport { make as Make, data as DATA } from './gw';\nimport * as Utils from './utils';\nimport * as Msg from './message';\nimport * as Events from './events';\nimport * as Grid from './grid';\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Flags;\n(function (Flags) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    Flags[Flags[\"E_NEXT_ALWAYS\"] = Fl(0)] = \"E_NEXT_ALWAYS\";\n    Flags[Flags[\"E_NEXT_EVERYWHERE\"] = Fl(1)] = \"E_NEXT_EVERYWHERE\";\n    // E_NO_REDRAW_CELL = Fl(2),\n    Flags[Flags[\"E_TREAT_AS_BLOCKING\"] = Fl(3)] = \"E_TREAT_AS_BLOCKING\";\n    Flags[Flags[\"E_PERMIT_BLOCKING\"] = Fl(4)] = \"E_PERMIT_BLOCKING\";\n    Flags[Flags[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(5)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Flags[Flags[\"E_BLOCKED_BY_ITEMS\"] = Fl(6)] = \"E_BLOCKED_BY_ITEMS\";\n    Flags[Flags[\"E_BLOCKED_BY_ACTORS\"] = Fl(7)] = \"E_BLOCKED_BY_ACTORS\";\n    Flags[Flags[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(8)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Flags[Flags[\"E_SUPERPRIORITY\"] = Fl(9)] = \"E_SUPERPRIORITY\";\n    Flags[Flags[\"E_NO_MARK_FIRED\"] = Fl(11)] = \"E_NO_MARK_FIRED\";\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    // E_PROTECTED = Fl(12),\n    Flags[Flags[\"E_SPREAD_CIRCLE\"] = Fl(13)] = \"E_SPREAD_CIRCLE\";\n    Flags[Flags[\"E_SPREAD_LINE\"] = Fl(14)] = \"E_SPREAD_LINE\";\n    // E_NULL_SURFACE = Fl(15), // Clear the surface layer\n    // E_NULL_LIQUID = Fl(16), // Clear liquid layer\n    // E_NULL_GAS = Fl(17), // Clear gas layer\n    Flags[Flags[\"E_CLEAR_CELL\"] = Fl(17)] = \"E_CLEAR_CELL\";\n    Flags[Flags[\"E_EVACUATE_CREATURES\"] = Fl(18)] = \"E_EVACUATE_CREATURES\";\n    Flags[Flags[\"E_EVACUATE_ITEMS\"] = Fl(19)] = \"E_EVACUATE_ITEMS\";\n    Flags[Flags[\"E_BUILD_IN_WALLS\"] = Fl(20)] = \"E_BUILD_IN_WALLS\";\n    Flags[Flags[\"E_MUST_TOUCH_WALLS\"] = Fl(21)] = \"E_MUST_TOUCH_WALLS\";\n    Flags[Flags[\"E_NO_TOUCH_WALLS\"] = Fl(22)] = \"E_NO_TOUCH_WALLS\";\n    Flags[Flags[\"E_FIRED\"] = Fl(23)] = \"E_FIRED\";\n    Flags[Flags[\"E_ONLY_IF_EMPTY\"] = Flags.E_BLOCKED_BY_ITEMS | Flags.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    Flags[Flags[\"E_ACTIVATE_DORMANT_MONSTER\"] = Fl(23)] = \"E_ACTIVATE_DORMANT_MONSTER\";\n    Flags[Flags[\"E_AGGRAVATES_MONSTERS\"] = Fl(24)] = \"E_AGGRAVATES_MONSTERS\";\n    Flags[Flags[\"E_RESURRECT_ALLY\"] = Fl(25)] = \"E_RESURRECT_ALLY\";\n    Flags[Flags[\"E_EMIT_EVENT\"] = Fl(26)] = \"E_EMIT_EVENT\";\n})(Flags || (Flags = {}));\nexport class Effect {\n    constructor(effects, next = null) {\n        // if (typeof opts === 'function') {\n        //     opts = {\n        //         fn: opts,\n        //     };\n        // }\n        // public tile: string | null;\n        // public fn: Function | null;\n        // public item: string | null;\n        // public message: string | null;\n        // public lightFlare: string | null;\n        // public flashColor: Color.Color | null;\n        // public fired: boolean;\n        // public emit: string | null;\n        this.map = null;\n        this.ctx = {};\n        this.effects = [];\n        this.flags = 0;\n        this.chance = 0;\n        // public chance: number;\n        // public volume: number;\n        // public spread: number;\n        // public radius: number;\n        // public decrement: number;\n        // public flags: number;\n        // public matchTile: string | null;\n        this.next = null;\n        this.id = null;\n        this._grid = null;\n        // this.tile = opts.tile || null;\n        // this.fn = opts.fn || null;\n        // this.item = opts.item || null;\n        // this.chance = opts.chance || 0;\n        // this.volume = opts.volume || 0;\n        // // spawning pattern:\n        // this.spread = opts.spread || 0;\n        // this.radius = opts.radius || 0;\n        // this.decrement = opts.decrement || 0;\n        // this.flags = Flag.from(Flags, opts.flags);\n        // this.matchTile = opts.matchTile || opts.needs || 0; /* ENUM tileType */\n        // this.next = opts.next || null; /* ENUM makeEventTypes */\n        // this.message = opts.message || null;\n        // this.lightFlare = opts.flare || null;\n        // this.flashColor = opts.flash ? Color.from(opts.flash) : null;\n        // // this.effectRadius = radius || 0;\n        // this.fired = false;\n        // this.emit = opts.emit || null; // name of the effect to emit when activated\n        // this.id = opts.id || null;\n        if (!Array.isArray(effects))\n            effects = [effects];\n        this.effects = effects.slice();\n        this.next = next;\n    }\n    get grid() {\n        if (!this._grid) {\n            this._grid = Grid.alloc(this.map.width, this.map.height);\n        }\n        return this._grid;\n    }\n    async fire(map, x, y, ctx = {}) {\n        let didSomething = false;\n        this.map = map;\n        this.ctx = ctx;\n        // fire all of my functions\n        for (let i = 0; i < this.effects.length; ++i) {\n            const eff = this.effects[i];\n            didSomething = (await eff(this, x, y)) || didSomething;\n        }\n        // bookkeeping\n        if (didSomething &&\n            map.isVisible(x, y) &&\n            !(this.flags & Flags.E_NO_MARK_FIRED)) {\n            this.flags |= Flags.E_FIRED;\n        }\n        // do the next effect - if applicable\n        if (this.next &&\n            (didSomething || this.flags & Flags.E_NEXT_ALWAYS) &&\n            !DATA.gameHasEnded) {\n            let next = this.next;\n            if (typeof next === 'string') {\n                next = effects[next] || null;\n            }\n            if (!next) {\n                Utils.ERROR('Unknown next effect - ' + this.next);\n            }\n            else if (this._grid && this.flags & Flags.E_NEXT_EVERYWHERE) {\n                await this.grid.forEachAsync(async (v, i, j) => {\n                    if (!v)\n                        return;\n                    // @ts-ignore\n                    didSomething = (await next.fire(map, i, j)) || didSomething;\n                });\n            }\n            else {\n                didSomething = (await next.fire(map, x, y)) || didSomething;\n            }\n        }\n        if (this._grid) {\n            Grid.free(this._grid);\n            this._grid = null;\n        }\n        return didSomething;\n    }\n    // resetMessageDisplayed\n    reset() {\n        this.flags &= ~Flags.E_FIRED;\n    }\n}\nexport function makeEffects(opts) {\n    const results = [];\n    Object.entries(opts).forEach(([key, value]) => {\n        if (key === 'fn') {\n            results.push(value);\n        }\n        else {\n            const setup = effectTypes[key];\n            if (!setup)\n                return;\n            const effect = setup(value);\n            if (effect) {\n                results.push(effect);\n            }\n        }\n    });\n    return results;\n}\nexport const effects = {};\nexport function make(opts) {\n    if (!opts)\n        Utils.ERROR('opts required to make effect.');\n    if (typeof opts === 'string') {\n        const cached = effects[opts];\n        if (cached)\n            return cached;\n        Utils.ERROR('string effect config must be id of installed effect.');\n    }\n    else if (typeof opts === 'function') {\n        opts = { fn: opts };\n    }\n    // now make effects\n    const fns = makeEffects(opts);\n    let next = opts.next;\n    if (next && typeof next !== 'string') {\n        next = from(next);\n    }\n    const te = new Effect(fns, next);\n    te.flags = fromFlag(Flags, opts.flags);\n    te.chance = opts.chance || 0;\n    return te;\n}\nMake.tileEvent = make;\nexport function from(opts) {\n    if (typeof opts === 'string') {\n        const effect = effects[opts];\n        if (effect)\n            return effect;\n        Utils.ERROR('Unknown effect - ' + opts);\n    }\n    else if (opts instanceof Effect) {\n        return opts;\n    }\n    return make(opts);\n}\nexport function install(id, effect) {\n    if (!(effect instanceof Effect)) {\n        effect = make(effect);\n    }\n    effects[id] = effect;\n    effect.id = id;\n    return effect;\n}\nexport function installAll(effects) {\n    Object.entries(effects).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport function resetAll() {\n    Object.values(effects).forEach((e) => e.reset());\n}\nexport const effectTypes = {};\nexport function installType(id, fn) {\n    effectTypes[id] = fn;\n}\n//////////////////////////////////////////////\n// EMIT\nexport async function effectEmit(effect, x, y) {\n    if (this.emit) {\n        await Events.emit(this.emit, x, y, effect);\n        return true;\n    }\n    return false;\n}\nexport function makeEmit(config) {\n    if (typeof config !== 'string') {\n        Utils.ERROR('Emit must be configured with name of event to emit');\n    }\n    return effectEmit.bind({ emit: config });\n}\ninstallType('emit', makeEmit);\n//////////////////////////////////////////////\n// MESSAGE\nexport async function effectMessage(effect, x, y) {\n    const map = effect.map;\n    const fired = effect.flags & Flags.E_FIRED ? true : false;\n    const ctx = effect.ctx;\n    ctx.actor = ctx.actor || map.actorAt(x, y);\n    ctx.item = ctx.item || map.itemAt(x, y);\n    if (this.message && this.message.length && !fired && map.isVisible(x, y)) {\n        Msg.add(this.message, effect.ctx);\n        return true;\n    }\n    return false;\n}\nexport function makeMessage(config) {\n    if (typeof config !== 'string') {\n        Utils.ERROR('Emit must be configured with name of event to emit');\n    }\n    return effectMessage.bind({ message: config });\n}\ninstallType('message', makeMessage);\n//# sourceMappingURL=effect.js.map"],"names":["DIRS","CLOCK_DIRS","TRUE","IS_NONZERO","x","clamp","v","min","max","src","y","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","assignField","dest","key","current","updated","copy","clear","nullify","clone","Array","isArray","slice","length","setDefaults","obj","def","custom","Object","keys","forEach","origKey","defValue","parts","split","shift","undefined","ERROR","message","Error","WARN","args","console","warn","first","find","eachChain","item","fn","index","next","addToChain","name","entry","removeFromChain","root","prev","FP_FACTOR","forLine","fromX","fromY","stepFn","largerTargetComponent","i","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","a","b","pct","dx","dy","dir","x0","y0","findIndex","result","push","diff","steps","c","last","step","currentXValue","maxXValue","sin","PI","omit","map","t","trim","includes","field","val","search","concat","fields","data","f","member","_default","arg","some","av","arr","reduce","count","chain","line","width","height","RANDOM_CONFIG","make","random","bind","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","Random","[object Object]","this","_fn","opts","seed","cosmetic","value","Number","MAX_SAFE_INTEGER","number","lo","hi","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","fromIndex","toIndex","r","buf","arguments","n","shuffle","percent","outOf","clumps","numSides","Range","lower","upper","rng","_rng","clumped","other","config","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","fl","N","from","u","startsWith","substring","flagObj","inverse","out","join","Bounds","w","h","Utils.y","Utils.x","Utils.DIRS","CDIRS","Utils.CLOCK_DIRS","makeArray","l","fill","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","_width","_height","hasXY","j","only4dirs","maxIndex","d","sequence","constructor","update","radius","bounds","left","top","right","bottom","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","dumpRect","Utils.clamp","output","padStart","log","bestLoc","bestDistance","dist","Utils.distanceBetween","chance","deterministic","locationCount","k","candidateLocs","loc","testFn","oldX","oldY","newX","newY","Utils.IS_NONZERO","arcCount","matchCount","newOk","GRID_CACHE","NumGrid","grid","pop","_resize","indexOf","col","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","matchValue","numberOfCells","matchFn","fillFn","floodFill","birthParameters","survivalParameters","nbCount","buffer2","alloc","didSomething","free","roundCount","minBlobWidth","minBlobHeight","maxBlobWidth","maxBlobHeight","percentSeeded","blobNumber","blobSize","topBlobNumber","topBlobSize","toLowerCase","round","tries","_cellularAutomataRound","valueBounds","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","isOpen","solutionDir","oppX","oppY","fnOpen","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","async","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","keyCodeDirection","lowerKey","makeMouseEvent","e","buttons","clientX","clientY","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","unshift","ms","Utils.TRUE","done","elapsed","Promise","resolve","keymap","interval","setInterval","pushEvent","nextEvent","draw","clearInterval","setTimeout","nextKeyOrClick","pause","loop","id","toUpperCase","strategy","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","Utils.calcRadius","_setVisible","setVisible","_hasXY","maxRadius","castLight","row","startSlope","endSlope","xx","xy","yx","yy","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","Grid.makeArray","maxDistance","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","Utils.addToChain","removeListener","success","Utils.eachChain","matches","Utils.removeFromChain","clearEvent","emit","apply","p","level","funcs","levels","frequency","start","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","textAlign","textBaseline","cx","cy","save","beginPath","rect","clip","fillText","restore","NotSupportedError","params","captureStackTrace","BaseCanvas","options","_renderRequested","_autoRender","_createNode","_createContext","io","onclick","onmousemove","onmouseup","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","render","div","appendChild","resize","fg","bg","style","_set","g","requestAnimationFrame","_data","_requestRender","set","IO.makeMouseEvent","offsetX","offsetY","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","info","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","assign","Uint32Array","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","_changed","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","toColorInt","base256","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","separate","A","hDiff","sort","mix","WHITE","BLACK","install","installSpread","lighten","darken","color","temp","Mixer","Utils.first","Color.from","equals","opacity","multiply","add","Color.separate","bake","mixer","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","toFixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","remove","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","toGlyph","sprite","Text.eachChar","Text.wordWrap","xi","strength","get","drawSprite","header","DancingData","m","image","canvas","fromImage","HTMLImageElement","fromFont","_target","copyTo","load","Sprite","sprites","Color.Color","Color.make","templates","msg","Text.compile","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","CURRENT_ARCHIVE_POS","NEEDS_UPDATE","COMBAT_MESSAGE","Text.apply","addMessage","Text.splitIntoLines","Text.capitalize","Text.length","addMessageLine","Flags","needs","actor","isPlayer","isVisible","addCombatMessage","Fl","E_BLOCKED_BY_ITEMS","E_BLOCKED_BY_ACTORS","Effect","effects","flags","_grid","Grid.alloc","eff","E_NO_MARK_FIRED","E_FIRED","E_NEXT_ALWAYS","DATA","gameHasEnded","E_NEXT_EVERYWHERE","forEachAsync","fire","Utils.ERROR","Grid.free","makeEffects","setup","effectTypes","effect","cached","fns","te","fromFlag","tileEvent","installType","effectEmit","Events.emit","makeEmit","effectMessage","fired","actorAt","itemAt","Msg.add","makeMessage","reset"],"mappings":"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"}