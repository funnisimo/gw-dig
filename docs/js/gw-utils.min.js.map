{"version":3,"file":"gw-utils.min.js","sources":["../js/utils.js","../js/random.js","../js/gw.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/canvas/canvas.js","../js/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/dancingBuffer.js","../js/sprite/sprite.js","../js/message.js","../js/effect.js","../js/blob.js"],"sourcesContent":["/**\n * GW.utils\n * @module utils\n */\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    get top() {\n        return this.y;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    contains(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (typeof x !== 'number') {\n            y = y(x);\n            x = x(x);\n        }\n        return (this.x <= x &&\n            this.y <= y &&\n            this.x + this.width > x &&\n            this.y + this.height > y);\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    return dest.x == x(src) && dest.y == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothHiliteGradient(currentXValue, maxXValue) {\n    return Math.floor(100 * Math.sin((Math.PI * currentXValue) / maxXValue));\n}\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\n// CHAIN\nexport function chainLength(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function chainIncludes(chain, entry) {\n    while (chain && chain !== entry) {\n        chain = chain.next;\n    }\n    return chain === entry;\n}\nexport function eachChain(item, fn) {\n    let index = 0;\n    while (item) {\n        const next = item.next;\n        fn(item, index++);\n        item = next;\n    }\n    return index; // really count\n}\nexport function addToChain(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function removeFromChain(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\n// LINES\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLine(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc)) {\n            break;\n        }\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n        return x == toX && y == toY;\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return true;\n        line.push([x, y]);\n        return false;\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\n//# sourceMappingURL=utils.js.map","import * as Utils from './utils';\nconst RANDOM_CONFIG = {\n    make: () => {\n        return Math.random.bind(Math);\n    },\n};\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    return entries[index][0];\n}\nexport class Random {\n    constructor() {\n        this._fn = RANDOM_CONFIG.make();\n    }\n    static configure(opts) {\n        if (opts.make) {\n            if (typeof opts.make !== 'function')\n                throw new Error('Random make parameter must be a function.');\n            if (typeof opts.make(12345) !== 'function')\n                throw new Error('Random make function must accept a numeric seed and return a random function.');\n            RANDOM_CONFIG.make = opts.make;\n            random.seed();\n            cosmetic.seed();\n        }\n    }\n    seed(val) {\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max) {\n        // @ts-ignore\n        if (max <= 0)\n            return 0;\n        max = max || Number.MAX_SAFE_INTEGER;\n        return Math.floor(this._fn() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingXY(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        Utils.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingXYNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        // brogueAssert(false);\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\n//# sourceMappingURL=random.js.map","export const data = {};\nexport const config = {};\nexport const make = {};\nexport const flags = {};\n//# sourceMappingURL=gw.js.map","import { random } from './random';\nimport { make as Make } from './gw';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1, rng) {\n        this._rng = rng || random;\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value() {\n        return this._rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        this._rng = other._rng;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config, rng) {\n    if (!config)\n        return new Range(0, 0, 0, rng);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0, rng);\n    if (typeof config == 'number')\n        return new Range(config, config, 1, rng);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2], rng);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0, rng);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count, rng);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps, rng);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3, rng);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1, rng);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nMake.range = make;\nexport const from = make;\nexport function asFn(config, rng) {\n    const range = make(config, rng);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === \"number\")\n            out[value] = key;\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(\" | \");\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == \"number\") {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === \"string\") {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == \"string\") {\n                    v = v.trim();\n                    if (v.startsWith(\"!\")) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './random';\nimport * as Utils from './utils';\nimport { make as Make } from './gw';\nconst DIRS = Utils.DIRS;\nconst CDIRS = Utils.CLOCK_DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        Utils.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    forCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        Utils.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        Utils.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    dump(fmtFn) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn);\n    }\n    dumpRect(left, top, width, height, fmtFn) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        console.log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * Utils.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingXY(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingXYNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        let oldX, oldY, newX, newY;\n        // brogueAssert(grid.hasXY(x, y));\n        testFn = testFn || Utils.IS_NONZERO;\n        let arcCount = 0;\n        let matchCount = 0;\n        for (let dir = 0; dir < CDIRS.length; dir++) {\n            oldX = x + CDIRS[(dir + 7) % 8][0];\n            oldY = y + CDIRS[(dir + 7) % 8][1];\n            newX = x + CDIRS[dir][0];\n            newY = y + CDIRS[dir][1];\n            // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n            const newOk = this.hasXY(newX, newY) &&\n                testFn(this[newX][newY], newX, newY, this);\n            const oldOk = this.hasXY(oldX, oldY) &&\n                testFn(this[oldX][oldY], oldX, oldY, this);\n            if (newOk)\n                ++matchCount;\n            if (newOk != oldOk) {\n                arcCount++;\n            }\n        }\n        if (arcCount == 0 && matchCount)\n            return 1;\n        return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n    }\n}\nconst GRID_CACHE = [];\n// @ts-ignore\nlet GRID_ACTIVE_COUNT = 0;\n// @ts-ignore\nlet GRID_ALLOC_COUNT = 0;\n// @ts-ignore\nlet GRID_CREATE_COUNT = 0;\n// @ts-ignore\nlet GRID_FREE_COUNT = 0;\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(w, h, v = 0) {\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++GRID_ACTIVE_COUNT;\n        ++GRID_ALLOC_COUNT;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++GRID_CREATE_COUNT;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++GRID_FREE_COUNT;\n            --GRID_ACTIVE_COUNT;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new Utils.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        let dir;\n        let newX, newY, numberOfCells = 1;\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        // Iterate through the four cardinal neighbors.\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (!this.hasXY(newX, newY)) {\n                continue;\n            }\n            if (matchFn(this[newX][newY], newX, newY, this)) {\n                // If the neighbor is an unmarked region cell,\n                numberOfCells += this.floodFill(newX, newY, matchFn, fillFn); // then recurse.\n            }\n        }\n        return numberOfCells;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nMake.grid = make;\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nimport { make as Make } from './gw';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = false;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            console.warn('OVERWRITE HANDLER - nextEvent');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        const interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n        this.running = true;\n        while (this.running) {\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                this.running = false;\n            }\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                // @ts-ignore\n                keymap.draw();\n            }\n        }\n        clearInterval(interval);\n    }\n    stop() {\n        this.running = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n}\nexport function make() {\n    return new Loop();\n}\nMake.loop = make;\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from \"./utils\";\nexport class FOV {\n    constructor(strategy) {\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || Utils.calcRadius;\n        this._setVisible = strategy.setVisible;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n    }\n    calculate(x, y, maxRadius) {\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = Utils.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            // fov.debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            // fov.debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        // fov.debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            // fov.debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                // fov.debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    // fov.debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) && row < this._maxRadius) {\n                    //hit a wall within sight line\n                    // fov.debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","import * as Grid from \"./grid\";\nimport * as Utils from \"./utils\";\n// var PATH = {};\n// export { PATH as path };\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = Utils.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\n// function pdsGetDistance(map, x, y) {\n// \tupdate(map);\n// \treturn getLink(map, x, y).distance;\n// }\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\n// function pdsSetCosts(map: DijkstraMap, costMap: Grid.NumGrid) {\n// \tlet i, j;\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n// \t\t\tif (i != 0 && j != 0 && i < map.width - 1 && j < map.height - 1) {\n// \t\t\t\tgetLink(map, i, j).cost = costMap[i][j];\n// \t\t\t} else {\n// \t\t\t\tgetLink(map, i, j).cost = FORBIDDEN;\n// \t\t\t}\n// \t\t}\n// \t}\n// }\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\n// function pdsBatchInput(\n//   map: DijkstraMap,\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   maxDistance: number,\n//   eightWays: boolean\n// ) {\n//   let i, j;\n//   map.eightWays = eightWays;\n//   let left: CostLink | null = map.front;\n//   let right: CostLink | null = map.front.right;\n//   map.front.right = null;\n//   for (i = 0; i < map.width; i++) {\n//     for (j = 0; j < map.height; j++) {\n//       let link = getLink(map, i, j);\n//       if (distanceMap != null) {\n//         link.distance = distanceMap[i][j];\n//       } else {\n//         if (costMap != null) {\n//           // totally hackish; refactor\n//           link.distance = maxDistance;\n//         }\n//       }\n//       let cost;\n//       if (isBoundaryXY(costMap, i, j)) {\n//         cost = OBSTRUCTION;\n//       } else {\n//         cost = costMap[i][j];\n//       }\n//       link.cost = cost;\n//       if (cost > 0) {\n//         if (link.distance < maxDistance) {\n//           if (right === null || right.distance > link.distance) {\n//             // left and right are used to traverse the list; if many cells have similar values,\n//             // some time can be saved by not clearing them with each insertion.  this time,\n//             // sadly, we have to start from the front.\n//             left = map.front;\n//             right = map.front.right;\n//           }\n//           while (right !== null && right.distance < link.distance) {\n//             left = right;\n//             right = right.right;\n//           }\n//           link.right = right;\n//           link.left = left;\n//           left.right = link;\n//           if (right != null) right.left = link;\n//           left = link;\n//         } else {\n//           link.right = null;\n//           link.left = null;\n//         }\n//       } else {\n//         link.right = null;\n//         link.left = null;\n//       }\n//     }\n//   }\n// }\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\n// function dijkstraScan(\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   useDiagonals = false\n// ) {\n//   // static makeDijkstraMap map;\n//   const width = distanceMap.length;\n//   const height = distanceMap[0].length;\n//   if (\n//     !DIJKSTRA_MAP ||\n//     DIJKSTRA_MAP.width < width ||\n//     DIJKSTRA_MAP.height < height\n//   ) {\n//     DIJKSTRA_MAP = makeDijkstraMap(width, height);\n//   }\n//   DIJKSTRA_MAP.width = width;\n//   DIJKSTRA_MAP.height = height;\n//   pdsBatchInput(DIJKSTRA_MAP, distanceMap, costMap, NO_PATH, useDiagonals);\n//   batchOutput(DIJKSTRA_MAP, distanceMap);\n// }\n//\n// function populateGenericCostMap(costMap, map) {\n//   let i, j;\n//\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n//       if (map.hasTileFlag(i, j, def.T_OBSTRUCTS_PASSABILITY)\n//           && (!map.hasTileMechFlag(i, j, def.TM_IS_SECRET) || (map.discoveredTileFlags(i, j) & def.T_OBSTRUCTS_PASSABILITY)))\n// \t\t\t{\n// \t\t\t\tcostMap[i][j] = map.hasTileFlag(i, j, def.T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n//       } else if (map.hasTileFlag(i, j, def.T_PATHING_BLOCKER & ~def.T_OBSTRUCTS_PASSABILITY)) {\n// \t\t\t\tcostMap[i][j] = FORBIDDEN;\n//       } else {\n//         costMap[i][j] = 1;\n//       }\n//     }\n//   }\n// }\n//\n// GW.path.populateGenericCostMap = populateGenericCostMap;\n//\n//\n// function baseCostFunction(blockingTerrainFlags, traveler, canUseSecretDoors, i, j) {\n// \tlet cost = 1;\n// \tmonst = GW.MAP.actorAt(i, j);\n// \tconst monstFlags = (monst ? (monst.info ? monst.info.flags : monst.flags) : 0) || 0;\n// \tif ((monstFlags & (def.MONST_IMMUNE_TO_WEAPONS | def.MONST_INVULNERABLE))\n// \t\t\t&& (monstFlags & (def.MONST_IMMOBILE | def.MONST_GETS_TURN_ON_ACTIVATION)))\n// \t{\n// \t\t\t// Always avoid damage-immune stationary monsters.\n// \t\tcost = FORBIDDEN;\n// \t} else if (canUseSecretDoors\n// \t\t\t&& GW.MAP.hasTileMechFlag(i, j, TM_IS_SECRET)\n// \t\t\t&& GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t&& !(GW.MAP.hasDiscoveredFlag(i, j) & T_OBSTRUCTS_PASSABILITY))\n// \t{\n// \t\tcost = 1;\n// \t} else if (GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t\t || (traveler && traveler === GW.PLAYER && !(GW.MAP.hasCellFlag(i, j, (REVEALED | MAGIC_MAPPED)))))\n// \t{\n// \t\tcost = GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n// \t} else if ((traveler && GW.actor.avoidsCell(traveler, i, j)) || GW.MAP.hasTileFlag(i, j, blockingTerrainFlags)) {\n// \t\tcost = FORBIDDEN;\n// \t}\n//\n// \treturn cost;\n// }\n//\n// GW.path.costFn = baseCostFunction;\n// GW.path.simpleCost = baseCostFunction.bind(undefined, 0, null, false);\n// GW.path.costForActor = ((actor) => baseCostFunction.bind(undefined, GW.actor.forbiddenFlags(actor), actor, actor !== GW.PLAYER));\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, NO_PATH, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// function pathingDistance(x1, y1, x2, y2, blockingTerrainFlags, actor) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tconst costFn = baseCostFunction.bind(undefined, blockingTerrainFlags, actor, true);\n// \tcalculateDistances(distanceMap, x2, y2, costFn, true);\n// \tretval = distanceMap[x1][y1];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.path.distanceFromTo = pathingDistance;\n// function monstTravelDistance(monst, x2, y2, blockingTerrainFlags) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tcalculateDistances(distanceMap, x2, y2, blockingTerrainFlags, monst, true, true);\n// \tretval = distanceMap[monst.x][monst.y];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.actor.travelDistance = monstTravelDistance;\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + Utils.DIRS[dir][0];\n        newY = y + Utils.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked && distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return Utils.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance && distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, true);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//\n// GW.path.from = getMonsterPathOnMap;\n//# sourceMappingURL=path.js.map","import * as Utils from \"./utils\";\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {Function} fn The listener function.\n     * @param {Object} [context=null] The context to invoke the listener with.\n     * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {Function} fn - The function\n     * @param {Object} [context] - The context Object.\n     * @param {Boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"The listener must be a function\");\n    }\n    const listener = new Listener(fn, context || null, once);\n    Utils.addToChain(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    Utils.eachChain(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            Utils.removeFromChain(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            Utils.removeFromChain(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === \"number\")\n        return () => v;\n    if (typeof v === \"function\")\n        return v;\n    let base = {};\n    if (typeof v === \"string\") {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(\":\");\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        frequency = Number.parseInt(frequency);\n        if (levels.includes(\"-\")) {\n            let [start, end] = levels\n                .split(\"-\")\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? frequency : 0;\n        }\n        else if (levels.endsWith(\"+\")) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? frequency : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? frequency : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(options) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error('You must supply glyphs for the canvas.');\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(options);\n        const io = options.io || options.loop;\n        if (io) {\n            this.onclick = (e) => io.pushEvent(e);\n            this.onmousemove = (e) => io.pushEvent(e);\n            this.onmouseup = (e) => io.pushEvent(e);\n        }\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = options.render !== false;\n        this._setGlyphs(options.glyphs);\n        if (options.div) {\n            let el;\n            if (typeof options.div === 'string') {\n                el = document.getElementById(options.div);\n                if (!el) {\n                    console.warn('Failed to find parent element by ID: ' + options.div);\n                }\n            }\n            else {\n                el = options.div;\n            }\n            if (el && el.appendChild) {\n                el.appendChild(this.node);\n            }\n        }\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    draw(x, y, glyph, fg, bg) {\n        glyph = glyph & 0xff;\n        bg = bg & 0xfff;\n        fg = fg & 0xfff;\n        const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n        this._set(x, y, style);\n        return this;\n    }\n    fill(...args) {\n        let g = 0, fg = 0, bg = 0;\n        if (args.length == 1) {\n            bg = args[0];\n        }\n        else if (args.length == 3) {\n            [g, fg, bg] = args;\n        }\n        for (let x = 0; x < this._width; ++x) {\n            for (let y = 0; y < this._height; ++y) {\n                this.draw(x, y, g, fg, bg);\n            }\n        }\n        return this;\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        if (!this._autoRender)\n            return;\n        requestAnimationFrame(() => this.render());\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        if (current !== style) {\n            this._data[index] = style;\n            this._requestRender();\n            return true;\n        }\n        return false;\n    }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this.toX(e.offsetX);\n                const y = this.toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this.toX(e.offsetX);\n                const y = this.toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this.toX(e.offsetX);\n                const y = this.toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        index *= VERTICES_PER_TILE;\n        const current = this._data[index + 2];\n        if (current !== style) {\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n            this._requestRender();\n            return true;\n        }\n        return false;\n    }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    _set(x, y, style) {\n        const result = super._set(x, y, style);\n        if (result) {\n            this._changed[y * this.width + x] = 1;\n        }\n        return result;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function withImage(image) {\n    let opts = {};\n    if (typeof image === 'string') {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error('You must supply the image.');\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(opts);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(opts);\n    }\n    return canvas;\n}\nexport function withFont(src) {\n    if (typeof src === 'string') {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    let canvas;\n    try {\n        canvas = new Canvas(src);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(src);\n    }\n    return canvas;\n}\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import { cosmetic } from './random';\nimport { make as Make } from './gw';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nMake.color = make;\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nimport { make } from '../gw';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.from(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.from(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nmake.mixer = function (base) {\n    return new Mixer(base);\n};\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    while (count > 0) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1);\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text/index';\nimport { make as Make } from '../gw';\n;\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this.toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        const mixer = new Mixer();\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const data = this.get(x, y);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(x, y, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nMake.dataBuffer = function (width, height) {\n    return new DataBuffer(width, height);\n};\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\nMake.buffer = function (canvas) {\n    return new Buffer(canvas);\n};\nexport function make(...args) {\n    if (args.length == 1) {\n        return new Buffer(args[0]);\n    }\n    return new DataBuffer(args[0], args[1]);\n}\n//# sourceMappingURL=buffer.js.map","import * as Color from '../color';\nimport * as Text from '../text/index';\nimport { DataBuffer } from './buffer';\nexport class DancingData {\n    constructor(width, height) {\n        this._data = [];\n        this._width = width;\n        this._height = height;\n        this._data = new Array(width * height).fill(0).map(() => { return { glyph: 0, fg: 0, bg: 0 }; });\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index];\n        return style;\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        if (!current)\n            return;\n        if (typeof glyph !== 'number')\n            glyph = this.toGlyph(glyph);\n        if (glyph !== -1)\n            current.glyph = glyph;\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        if (fg !== -1)\n            current.fg = fg;\n        if (bg !== -1)\n            current.bg = bg;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        return this.draw(x, y, sprite.ch || -1, sprite.fg || -1, sprite.bg || -1);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        this._data.forEach((m) => {\n            // @ts-ignore\n            m.glyph = glyph;\n            m.fg = fg;\n            m.bg = bg;\n        });\n        return this;\n    }\n    copy(other) {\n        if (other instanceof DataBuffer) {\n            this._data.forEach((m, i) => {\n                const x = i % this.width;\n                const y = Math.floor(i / this.width);\n                Object.assign(m, other.get(x, y));\n            });\n        }\n        else {\n            this._data.forEach((m, i) => {\n                Object.assign(m, other._data[i]);\n            });\n        }\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = this.get(x, y);\n        mixer.fg = Color.from(mixer.fg).add(color, strength).toInt();\n        mixer.bg = Color.from(mixer.bg).add(color, strength).toInt();\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const mixer = this.get(x, y);\n                mixer.fg = Color.from(mixer.fg).mix(color, percent).toInt();\n                mixer.bg = Color.from(mixer.bg).mix(color, percent).toInt();\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const mixer = this.get(x, y);\n                const ch = String.fromCharCode(mixer.glyph || 32);\n                line += ch[0];\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport class DancingBuffer extends DancingData {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        this.load();\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._data.forEach((m, i) => {\n            const x = i % this.width;\n            const y = Math.floor(i / this.width);\n            this._target.draw(x, y, m.glyph, m.fg, m.bg);\n        });\n        return this;\n    }\n    load() {\n        const data = new Uint32Array(this.width * this.height);\n        this._target.copyTo(data);\n        data.forEach((style, index) => {\n            const data = this._data[index] || 0;\n            data.glyph = style >> 24;\n            data.bg = (style >> 12) & 0xfff;\n            data.fg = style & 0xfff;\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=dancingBuffer.js.map","import * as Color from '../color';\nimport { make as Make } from '../gw';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        this.ch = ch;\n        this.fg = fg;\n        this.bg = bg;\n        this.opacity = opacity >= 0 ? opacity : 100;\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nMake.sprite = make;\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\n// messages\nconst ARCHIVE = [];\nconst CONFIRMED = [];\nvar ARCHIVE_LINES = 30;\nvar MSG_WIDTH = 80;\nvar NEXT_WRITE_INDEX = 0;\nvar NEEDS_UPDATE = false;\nlet COMBAT_MESSAGE = null;\nexport function needsUpdate(needs) {\n    if (needs) {\n        NEEDS_UPDATE = true;\n    }\n    return NEEDS_UPDATE;\n}\nexport function configure(opts) {\n    if (!opts)\n        opts = {};\n    ARCHIVE_LINES = opts.length || 30;\n    MSG_WIDTH = opts.width || 80;\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        ARCHIVE[i] = null;\n        CONFIRMED[i] = false;\n    }\n}\n////////////////////////////////////\n// Messages\nexport function add(msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    commitCombatMessage();\n    addMessage(msg);\n}\nexport function fromActor(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        add(msg, args);\n    }\n}\nexport function forPlayer(actor, msg, args) {\n    if (!actor.isPlayer())\n        return;\n    add(msg, args);\n}\nexport function addCombat(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        const template = templates[msg];\n        if (template) {\n            msg = template(args);\n        }\n        else if (args) {\n            msg = Text.apply(msg, args);\n        }\n        addCombatMessage(msg);\n    }\n}\n// function messageWithoutCaps(msg, requireAcknowledgment) {\nfunction addMessageLine(msg) {\n    if (!Text.length(msg)) {\n        return;\n    }\n    // Add the message to the archive.\n    ARCHIVE[NEXT_WRITE_INDEX] = msg;\n    CONFIRMED[NEXT_WRITE_INDEX] = false;\n    NEXT_WRITE_INDEX = (NEXT_WRITE_INDEX + 1) % ARCHIVE_LINES;\n}\nfunction addMessage(msg) {\n    var _a;\n    msg = Text.capitalize(msg);\n    // // Implement the American quotation mark/period/comma ordering rule.\n    // for (i=0; text.text[i] && text.text[i+1]; i++) {\n    //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n    //         i += 4;\n    //     } else if (text.text[i] === '\"'\n    //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n    // \t\t{\n    // \t\t\tconst replace = text.text[i+1] + '\"';\n    // \t\t\ttext.spliceRaw(i, 2, replace);\n    //     }\n    // }\n    const lines = Text.splitIntoLines(msg, MSG_WIDTH);\n    if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n        lines.reverse();\n    }\n    lines.forEach((l) => addMessageLine(l));\n    // display the message:\n    NEEDS_UPDATE = true;\n    // if (GAME.playbackMode) {\n    // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n    // }\n}\nfunction addCombatMessage(msg) {\n    if (!COMBAT_MESSAGE) {\n        COMBAT_MESSAGE = msg;\n    }\n    else {\n        COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n    }\n    NEEDS_UPDATE = true;\n}\nfunction commitCombatMessage() {\n    if (!COMBAT_MESSAGE)\n        return false;\n    addMessage(COMBAT_MESSAGE + '.');\n    COMBAT_MESSAGE = null;\n    return true;\n}\nexport function confirmAll() {\n    for (let i = 0; i < CONFIRMED.length; i++) {\n        CONFIRMED[i] = true;\n    }\n    NEEDS_UPDATE = true;\n}\nexport function forEach(fn) {\n    commitCombatMessage();\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        const n = (ARCHIVE_LINES - i + NEXT_WRITE_INDEX - 1) % ARCHIVE_LINES;\n        const msg = ARCHIVE[n];\n        if (!msg)\n            return;\n        if (fn(msg, CONFIRMED[n], i) === false)\n            return;\n    }\n}\n//# sourceMappingURL=message.js.map","import { fl as Fl, from as fromFlag } from './flag';\nimport { make as Make, data as DATA } from './gw';\nimport * as Utils from './utils';\nimport * as Msg from './message';\nimport * as Events from './events';\nimport * as Grid from './grid';\nimport { random } from './random';\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Flags;\n(function (Flags) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    Flags[Flags[\"E_NEXT_ALWAYS\"] = Fl(0)] = \"E_NEXT_ALWAYS\";\n    Flags[Flags[\"E_NEXT_EVERYWHERE\"] = Fl(1)] = \"E_NEXT_EVERYWHERE\";\n    // E_NO_REDRAW_CELL = Fl(2),\n    Flags[Flags[\"E_TREAT_AS_BLOCKING\"] = Fl(3)] = \"E_TREAT_AS_BLOCKING\";\n    Flags[Flags[\"E_PERMIT_BLOCKING\"] = Fl(4)] = \"E_PERMIT_BLOCKING\";\n    Flags[Flags[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(5)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Flags[Flags[\"E_BLOCKED_BY_ITEMS\"] = Fl(6)] = \"E_BLOCKED_BY_ITEMS\";\n    Flags[Flags[\"E_BLOCKED_BY_ACTORS\"] = Fl(7)] = \"E_BLOCKED_BY_ACTORS\";\n    Flags[Flags[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(8)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Flags[Flags[\"E_SUPERPRIORITY\"] = Fl(9)] = \"E_SUPERPRIORITY\";\n    Flags[Flags[\"E_NO_MARK_FIRED\"] = Fl(11)] = \"E_NO_MARK_FIRED\";\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    Flags[Flags[\"E_PROTECTED\"] = Fl(12)] = \"E_PROTECTED\";\n    Flags[Flags[\"E_SPREAD_CIRCLE\"] = Fl(13)] = \"E_SPREAD_CIRCLE\";\n    Flags[Flags[\"E_SPREAD_LINE\"] = Fl(14)] = \"E_SPREAD_LINE\";\n    // E_NULL_SURFACE = Fl(15), // Clear the surface layer\n    // E_NULL_LIQUID = Fl(16), // Clear liquid layer\n    // E_NULL_GAS = Fl(17), // Clear gas layer\n    Flags[Flags[\"E_EVACUATE_CREATURES\"] = Fl(18)] = \"E_EVACUATE_CREATURES\";\n    Flags[Flags[\"E_EVACUATE_ITEMS\"] = Fl(19)] = \"E_EVACUATE_ITEMS\";\n    Flags[Flags[\"E_BUILD_IN_WALLS\"] = Fl(20)] = \"E_BUILD_IN_WALLS\";\n    Flags[Flags[\"E_MUST_TOUCH_WALLS\"] = Fl(21)] = \"E_MUST_TOUCH_WALLS\";\n    Flags[Flags[\"E_NO_TOUCH_WALLS\"] = Fl(22)] = \"E_NO_TOUCH_WALLS\";\n    Flags[Flags[\"E_FIRED\"] = Fl(23)] = \"E_FIRED\";\n    Flags[Flags[\"E_CLEAR_GROUND\"] = Fl(17)] = \"E_CLEAR_GROUND\";\n    Flags[Flags[\"E_CLEAR_SURFACE\"] = Fl(24)] = \"E_CLEAR_SURFACE\";\n    Flags[Flags[\"E_CLEAR_LIQUID\"] = Fl(25)] = \"E_CLEAR_LIQUID\";\n    Flags[Flags[\"E_CLEAR_GAS\"] = Fl(26)] = \"E_CLEAR_GAS\";\n    Flags[Flags[\"E_CLEAR_CELL\"] = Flags.E_CLEAR_GROUND |\n        Flags.E_CLEAR_SURFACE |\n        Flags.E_CLEAR_LIQUID |\n        Flags.E_CLEAR_GAS] = \"E_CLEAR_CELL\";\n    Flags[Flags[\"E_ONLY_IF_EMPTY\"] = Flags.E_BLOCKED_BY_ITEMS | Flags.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    Flags[Flags[\"E_ACTIVATE_DORMANT_MONSTER\"] = Fl(27)] = \"E_ACTIVATE_DORMANT_MONSTER\";\n    Flags[Flags[\"E_AGGRAVATES_MONSTERS\"] = Fl(28)] = \"E_AGGRAVATES_MONSTERS\";\n    Flags[Flags[\"E_RESURRECT_ALLY\"] = Fl(29)] = \"E_RESURRECT_ALLY\";\n    Flags[Flags[\"E_EMIT_EVENT\"] = Fl(30)] = \"E_EMIT_EVENT\";\n})(Flags || (Flags = {}));\nexport class Effect {\n    constructor(effects, next = null) {\n        // if (typeof opts === 'function') {\n        //     opts = {\n        //         fn: opts,\n        //     };\n        // }\n        // public tile: string | null;\n        // public fn: Function | null;\n        // public item: string | null;\n        // public message: string | null;\n        // public lightFlare: string | null;\n        // public flashColor: Color.Color | null;\n        // public fired: boolean;\n        // public emit: string | null;\n        this.map = null;\n        this.ctx = {};\n        this.effects = [];\n        this.flags = 0;\n        this.chance = 0;\n        // public chance: number;\n        // public volume: number;\n        // public spread: number;\n        // public radius: number;\n        // public decrement: number;\n        // public flags: number;\n        // public matchTile: string | null;\n        this.next = null;\n        this.id = null;\n        this._grid = null;\n        // this.tile = opts.tile || null;\n        // this.fn = opts.fn || null;\n        // this.item = opts.item || null;\n        // this.chance = opts.chance || 0;\n        // this.volume = opts.volume || 0;\n        // // spawning pattern:\n        // this.spread = opts.spread || 0;\n        // this.radius = opts.radius || 0;\n        // this.decrement = opts.decrement || 0;\n        // this.flags = Flag.from(Flags, opts.flags);\n        // this.matchTile = opts.matchTile || opts.needs || 0; /* ENUM tileType */\n        // this.next = opts.next || null; /* ENUM makeEventTypes */\n        // this.message = opts.message || null;\n        // this.lightFlare = opts.flare || null;\n        // this.flashColor = opts.flash ? Color.from(opts.flash) : null;\n        // // this.effectRadius = radius || 0;\n        // this.fired = false;\n        // this.emit = opts.emit || null; // name of the effect to emit when activated\n        // this.id = opts.id || null;\n        if (!Array.isArray(effects))\n            effects = [effects];\n        this.effects = effects.slice();\n        this.next = next;\n    }\n    get grid() {\n        if (!this._grid) {\n            this._grid = Grid.alloc(this.map.width, this.map.height);\n        }\n        return this._grid;\n    }\n    async fire(map, x, y, ctx = {}) {\n        let didSomething = false;\n        this.map = map;\n        this.ctx = ctx;\n        if (this.chance && !random.chance(this.chance))\n            return false;\n        // fire all of my functions\n        for (let i = 0; i < this.effects.length; ++i) {\n            const eff = this.effects[i];\n            didSomething = (await eff(this, x, y)) || didSomething;\n        }\n        // bookkeeping\n        if (didSomething &&\n            map.isVisible(x, y) &&\n            !(this.flags & Flags.E_NO_MARK_FIRED)) {\n            this.flags |= Flags.E_FIRED;\n        }\n        // do the next effect - if applicable\n        if (this.next &&\n            (didSomething || this.flags & Flags.E_NEXT_ALWAYS) &&\n            !DATA.gameHasEnded) {\n            let next = this.next;\n            if (typeof next === 'string') {\n                next = effects[next] || null;\n            }\n            if (!next) {\n                Utils.ERROR('Unknown next effect - ' + this.next);\n            }\n            else if (this._grid && this.flags & Flags.E_NEXT_EVERYWHERE) {\n                await this.grid.forEachAsync(async (v, i, j) => {\n                    if (!v)\n                        return;\n                    // @ts-ignore\n                    didSomething = (await next.fire(map, i, j)) || didSomething;\n                });\n            }\n            else {\n                didSomething = (await next.fire(map, x, y)) || didSomething;\n            }\n        }\n        if (this._grid) {\n            Grid.free(this._grid);\n            this._grid = null;\n        }\n        return didSomething;\n    }\n    // resetMessageDisplayed\n    reset() {\n        this.flags &= ~Flags.E_FIRED;\n    }\n}\nexport function makeEffects(opts) {\n    const results = [];\n    Object.entries(opts).forEach(([key, value]) => {\n        if (key === 'fn') {\n            results.push(value);\n        }\n        else {\n            const setup = effectTypes[key];\n            if (!setup)\n                return;\n            const effect = setup(value);\n            if (effect) {\n                results.push(effect);\n            }\n        }\n    });\n    return results;\n}\nexport const effects = {};\nexport function make(opts) {\n    if (!opts)\n        Utils.ERROR('opts required to make effect.');\n    if (typeof opts === 'string') {\n        const cached = effects[opts];\n        if (cached)\n            return cached;\n        Utils.ERROR('string effect config must be id of installed effect.');\n    }\n    else if (typeof opts === 'function') {\n        opts = { fn: opts };\n    }\n    // now make effects\n    const fns = makeEffects(opts);\n    let next = opts.next;\n    if (next && typeof next !== 'string') {\n        next = from(next);\n    }\n    const te = new Effect(fns, next);\n    te.flags = fromFlag(Flags, opts.flags);\n    te.chance = opts.chance || 0;\n    return te;\n}\nMake.effect = make;\nexport function from(opts) {\n    if (!opts)\n        return null;\n    if (typeof opts === 'string') {\n        const effect = effects[opts];\n        if (effect)\n            return effect;\n        Utils.ERROR('Unknown effect - ' + opts);\n    }\n    else if (opts instanceof Effect) {\n        return opts;\n    }\n    return make(opts);\n}\nexport function install(id, effect) {\n    if (!(effect instanceof Effect)) {\n        effect = make(effect);\n    }\n    effects[id] = effect;\n    effect.id = id;\n    return effect;\n}\nexport function installAll(effects) {\n    Object.entries(effects).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport function resetAll() {\n    Object.values(effects).forEach((e) => e.reset());\n}\nexport const effectTypes = {};\nexport function installType(id, fn) {\n    effectTypes[id] = fn;\n}\nexport async function fire(effect, map, x, y, ctx = {}) {\n    const e = from(effect);\n    if (!e)\n        return false;\n    return e.fire(map, x, y, ctx);\n}\n//////////////////////////////////////////////\n// EMIT\nexport async function effectEmit(effect, x, y) {\n    if (this.emit) {\n        await Events.emit(this.emit, x, y, effect);\n        return true;\n    }\n    return false;\n}\nexport function makeEmit(config) {\n    if (typeof config !== 'string') {\n        Utils.ERROR('Emit must be configured with name of event to emit');\n    }\n    return effectEmit.bind({ emit: config });\n}\ninstallType('emit', makeEmit);\n//////////////////////////////////////////////\n// MESSAGE\nexport async function effectMessage(effect, x, y) {\n    const map = effect.map;\n    const fired = effect.flags & Flags.E_FIRED ? true : false;\n    const ctx = effect.ctx;\n    ctx.actor = ctx.actor || map.actorAt(x, y);\n    ctx.item = ctx.item || map.itemAt(x, y);\n    if (this.message && this.message.length && !fired && map.isVisible(x, y)) {\n        Msg.add(this.message, effect.ctx);\n        return true;\n    }\n    return false;\n}\nexport function makeMessage(config) {\n    if (typeof config !== 'string') {\n        Utils.ERROR('Emit must be configured with name of event to emit');\n    }\n    return effectMessage.bind({ message: config });\n}\ninstallType('message', makeMessage);\n//# sourceMappingURL=effect.js.map","import * as UTILS from './utils';\nimport * as GRID from './grid';\nimport { random } from './random';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            roundCount: 5,\n            minBlobWidth: 10,\n            minBlobHeight: 10,\n            maxBlobWidth: 40,\n            maxBlobHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minBlobWidth >= this.options.maxBlobWidth) {\n            this.options.minBlobWidth = Math.round(0.75 * this.options.maxBlobWidth);\n            this.options.maxBlobWidth = Math.round(1.25 * this.options.maxBlobWidth);\n        }\n        if (this.options.minBlobHeight >= this.options.maxBlobHeight) {\n            this.options.minBlobHeight = Math.round(0.75 * this.options.maxBlobHeight);\n            this.options.maxBlobHeight = Math.round(1.25 * this.options.maxBlobHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new UTILS.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxBlobWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxBlobHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxBlobWidth; i++) {\n                for (j = 0; j < this.options.maxBlobHeight; j++) {\n                    dest[i + left][j + top] = random.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.roundCount; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.roundCount; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minBlobWidth ||\n            bounds.height < this.options.minBlobHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < UTILS.DIRS.length; dir++) {\n                    newX = i + UTILS.DIRS[dir][0];\n                    newY = j + UTILS.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\n//# sourceMappingURL=blob.js.map"],"names":["DIRS","CLOCK_DIRS","TRUE","IS_NONZERO","x","clamp","v","min","max","src","y","Bounds","[object Object]","w","h","this","width","height","left","right","top","bottom","args","eachNeighbor","fn","only4dirs","i","dir","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","assignField","dest","key","current","updated","copy","clear","nullify","clone","Array","isArray","slice","length","setDefaults","obj","def","custom","Object","keys","forEach","origKey","defValue","parts","split","shift","undefined","ERROR","message","Error","WARN","console","warn","first","find","eachChain","item","index","next","addToChain","name","entry","removeFromChain","root","prev","FP_FACTOR","forLine","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","forCircle","radius","j","forRect","arguments","a","b","pct","dx","dy","matchFn","maxIndex","d","x0","y0","findIndex","result","push","diff","steps","c","last","step","currentXValue","maxXValue","sin","PI","omit","map","t","trim","includes","field","val","search","concat","fields","data","f","member","_default","arg","some","av","arr","reduce","count","chain","line","RANDOM_CONFIG","make","random","bind","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","Random","_fn","opts","seed","cosmetic","value","Number","MAX_SAFE_INTEGER","number","lo","hi","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","fromIndex","toIndex","r","buf","n","shuffle","percent","outOf","clumps","numSides","locationCount","Utils.forRect","k","candidateLocs","loc","config","Range","lower","upper","rng","_rng","clumped","other","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","fl","N","from","u","startsWith","substring","flagObj","inverse","out","join","Utils.DIRS","CDIRS","Utils.CLOCK_DIRS","makeArray","l","fill","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","_width","_height","hasXY","Utils.eachNeighbor","sequence","constructor","update","Utils.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","dumpRect","Utils.clamp","output","padStart","log","bestLoc","bestDistance","dist","Utils.distanceBetween","chance","get","matchingXY","matchingXYNear","testFn","oldX","oldY","newX","newY","Utils.IS_NONZERO","arcCount","matchCount","newOk","GRID_CACHE","NumGrid","grid","pop","_resize","indexOf","col","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","Utils.Bounds","matchValue","numberOfCells","fillFn","floodFill","alloc","free","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","async","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","keyCodeDirection","lowerKey","toLowerCase","makeMouseEvent","e","buttons","clientX","clientY","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","unshift","ms","Utils.TRUE","done","elapsed","Promise","resolve","keymap","interval","setInterval","pushEvent","nextEvent","draw","clearInterval","setTimeout","nextKeyOrClick","pause","loop","id","toUpperCase","strategy","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","Utils.calcRadius","_setVisible","setVisible","_hasXY","maxRadius","castLight","row","startSlope","endSlope","xx","xy","yx","yy","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","Grid.makeArray","maxDistance","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","Utils.addToChain","removeListener","success","Utils.eachChain","matches","Utils.removeFromChain","clearEvent","emit","apply","p","level","funcs","levels","frequency","start","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","textAlign","textBaseline","cx","cy","save","beginPath","rect","clip","fillText","restore","NotSupportedError","params","captureStackTrace","BaseCanvas","options","_renderRequested","_autoRender","_createNode","_createContext","io","onclick","onmousemove","onmouseup","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","render","div","appendChild","resize","fg","bg","style","_set","g","requestAnimationFrame","_data","_requestRender","set","IO.makeMouseEvent","offsetX","offsetY","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","info","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","assign","Uint32Array","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","_changed","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","toColorInt","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","separate","A","hDiff","sort","mix","WHITE","BLACK","install","installSpread","lighten","darken","color","temp","Mixer","Utils.first","Color.from","equals","opacity","multiply","add","Color.separate","bake","mixer","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","toFixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","remove","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","toGlyph","sprite","Text.eachChar","Text.wordWrap","xi","strength","drawSprite","header","dataBuffer","Buffer","canvas","_target","copyTo","buffer","DancingData","m","image","fromImage","HTMLImageElement","fromFont","load","Sprite","sprites","Color.Color","Color.make","templates","msg","Text.compile","GW.config","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","Text.apply","commitCombatMessage","addMessage","_a","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","Text.length","addMessageLine","Flags","needs","actor","isPlayer","isVisible","addCombatMessage","Fl","E_CLEAR_GROUND","E_CLEAR_SURFACE","E_CLEAR_LIQUID","E_CLEAR_GAS","E_BLOCKED_BY_ITEMS","E_BLOCKED_BY_ACTORS","Effect","effects","flags","_grid","Grid.alloc","didSomething","eff","E_NO_MARK_FIRED","E_FIRED","E_NEXT_ALWAYS","DATA","gameHasEnded","E_NEXT_EVERYWHERE","forEachAsync","fire","Utils.ERROR","Grid.free","makeEffects","setup","effectTypes","effect","cached","fns","te","fromFlag","installType","effectEmit","Events.emit","makeEmit","effectMessage","fired","actorAt","itemAt","Msg.add","makeMessage","reset","Blob","roundCount","minBlobWidth","minBlobHeight","maxBlobWidth","maxBlobHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","UTILS.Bounds","GRID.alloc","tries","_cellularAutomataRound","valueBounds","GRID.free","nbCount","buffer2","UTILS.DIRS","carve"],"mappings":"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KsB,KACVre,KAAK+c,KAAKsB,GAAMvT,GACpB9K,KAAKod,KAAK8B,SAASb,EAAIO,EAAIC,IAE/B7e,KAAKod,KAAK+B,UACVnf,KAAK8c,aAAc,EAEvBjd,YAAYke,GAAY,GACpB,IAAK,IAAIpd,EAAI,GAAIA,EAAI,MAAOA,EACxBX,KAAK8V,KAAKnV,EAAGgN,OAAOC,aAAajN,IAErC,CACI,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACFqC,SAAQ,CAACqb,EAAI1d,KACXX,KAAK8V,KAAKnV,EAAG0d,MAEZN,GAsBD,CACI,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACF/a,SAAQ,CAACqb,EAAI1d,KACXX,KAAK8V,KAAKnV,EAAI,IAAK0d,OC/R5B,MAAMe,WAA0B3b,MACnC5D,eAAewf,GAEXtR,SAASsR,GA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"}