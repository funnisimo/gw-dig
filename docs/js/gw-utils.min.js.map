{"version":3,"file":"gw-utils.min.js","sources":["../js/utils/chain.js","../js/utils/index.js","../js/random.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/color/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/canvas.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/effect/flags.js","../js/effect/make.js","../js/effect/effect.js","../js/effect/fire.js","../js/effect/message.js","../js/effect/emit.js","../js/effect/fn.js","../js/blob.js","../js/light/light.js","../js/light/system.js","../js/gameObject/flags.js","../js/gameObject/gameObject.js","../js/item/index.js","../js/actor/flags.js","../js/actor/index.js","../js/tile/flags.js","../js/tile/tile.js","../js/tile/tiles.js","../js/tile/index.js","../js/map/flags.js","../js/map/cell.js","../js/map/layers.js","../js/map/cellMemory.js","../js/map/fireLayer.js","../js/map/gasLayer.js","../js/map/map.js","../js/map/analyze.js","../js/map/effect.js","../js/map/index.js"],"sourcesContent":["// CHAIN\nexport function chainLength(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function chainIncludes(chain, entry) {\n    while (chain && chain !== entry) {\n        chain = chain.next;\n    }\n    return chain === entry;\n}\nexport function eachChain(item, fn) {\n    let index = 0;\n    while (item) {\n        const next = item.next;\n        fn(item, index++);\n        item = next;\n    }\n    return index; // really count\n}\nexport function addToChain(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function removeFromChain(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function findInChain(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport class Chain {\n    constructor(sort, onchange) {\n        this.data = null;\n        this.sort = sort || (() => -1);\n        this.onchange = onchange || (() => { });\n    }\n    copy(other) {\n        this.data = other.data;\n        this.sort = other.sort;\n        this.onchange = other.onchange;\n    }\n    get length() {\n        let count = 0;\n        this.forEach(() => ++count);\n        return count;\n    }\n    add(obj) {\n        if (!this.data || this.sort(this.data, obj) < 0) {\n            obj.next = this.data;\n            this.data = obj;\n            return true;\n        }\n        let prev = this.data;\n        let current = this.data.next;\n        while (current && this.sort(current, obj) < 0) {\n            prev = current;\n            current = current.next;\n        }\n        obj.next = current;\n        prev.next = obj;\n        this.onchange();\n        return true;\n    }\n    has(obj) {\n        return this.find((o) => o === obj) !== null;\n    }\n    remove(obj) {\n        if (!removeFromChain(this, 'data', obj)) {\n            return false;\n        }\n        this.onchange();\n        return true;\n    }\n    find(cb) {\n        return findInChain(this.data, cb);\n    }\n    forEach(cb) {\n        return eachChain(this.data, cb);\n    }\n    reduce(cb, out) {\n        let current = this.data;\n        if (!current)\n            return out;\n        if (out === undefined) {\n            out = current;\n            current = current.next;\n        }\n        while (current) {\n            cb(out, current);\n            current = current.next;\n        }\n        return out;\n    }\n    some(cb) {\n        let current = this.data;\n        while (current) {\n            if (cb(current))\n                return true;\n            current = current.next;\n        }\n        return false;\n    }\n    every(cb) {\n        let current = this.data;\n        while (current) {\n            if (!cb(current))\n                return false;\n            current = current.next;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=chain.js.map","/**\n * GW.utils\n * @module utils\n */\nexport * from './chain';\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    get top() {\n        return this.y;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    contains(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (typeof x !== 'number') {\n            y = y(x);\n            x = x(x);\n        }\n        return (this.x <= x &&\n            this.y <= y &&\n            this.x + this.width > x &&\n            this.y + this.height > y);\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport async function eachNeighborAsync(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        await fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothHiliteGradient(currentXValue, maxXValue) {\n    return Math.floor(100 * Math.sin((Math.PI * currentXValue) / maxXValue));\n}\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\n// LINES\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLine(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc)) {\n            break;\n        }\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n        return x == toX && y == toY;\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return true;\n        line.push([x, y]);\n        return false;\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n// ALGOS\nexport async function asyncForEach(iterable, fn) {\n    for (let t of iterable) {\n        await fn(t);\n    }\n}\n//# sourceMappingURL=index.js.map","import * as Utils from './utils';\nimport * as ROT from 'rot-js';\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor() {\n        this._fn = ROT.RNG.clone();\n    }\n    seed(val) {\n        this._fn.setSeed(val);\n    }\n    value() {\n        return this._fn.getUniform();\n    }\n    float() {\n        return this.value();\n    }\n    number(max) {\n        // @ts-ignore\n        if (max <= 0)\n            return 0;\n        max = max || Number.MAX_SAFE_INTEGER;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        Utils.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\n//# sourceMappingURL=random.js.map","import { random } from './random';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1, rng) {\n        this._rng = rng || null;\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value() {\n        const rng = this._rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    contains(value) {\n        return this.lo <= value && this.hi >= value;\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        this._rng = other._rng;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config, rng) {\n    if (!config)\n        return new Range(0, 0, 0, rng);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0, rng);\n    if (typeof config == 'number')\n        return new Range(config, config, 1, rng);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2], rng);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0, rng);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count, rng);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps, rng);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3, rng);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1, rng);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config, rng) {\n    const range = make(config, rng);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './random';\nimport * as Utils from './utils';\nconst DIRS = Utils.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        Utils.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        Utils.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        Utils.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    dump(fmtFn, log = console.log) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn, log);\n    }\n    dumpRect(left, top, width, height, fmtFn, log = console.log) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius, fmtFn, log = console.log) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius, fmtFn, log);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * Utils.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return Utils.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\nexport const stats = {\n    active: 0,\n    alloc: 0,\n    create: 0,\n    free: 0,\n};\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++stats.active;\n        ++stats.alloc;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++stats.create;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++stats.free;\n            --stats.active;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new Utils.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        let dir;\n        let newX, newY, numberOfCells = 1;\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        // Iterate through the four cardinal neighbors.\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (!this.hasXY(newX, newY)) {\n                continue;\n            }\n            if (matchFn(this[newX][newY], newX, newY, this)) {\n                // If the neighbor is an unmarked region cell,\n                numberOfCells += this.floodFill(newX, newY, matchFn, fillFn); // then recurse.\n            }\n        }\n        return numberOfCells;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\nexport function onkeydown(e) {\n    if (ignoreKeyEvent(e))\n        return;\n    if (e.code === 'Escape') {\n        loop.clearEvents(); // clear all current events, then push on the escape\n    }\n    const ev = makeKeyEvent(e);\n    loop.pushEvent(ev);\n    e.preventDefault();\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = false;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            console.warn('OVERWRITE HANDLER - nextEvent');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        const interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n        this.running = true;\n        while (this.running) {\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                this.running = false;\n            }\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                // @ts-ignore\n                keymap.draw();\n            }\n        }\n        clearInterval(interval);\n    }\n    stop() {\n        this.running = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"MONSTER_DETECTED\"] = Fl(8)] = \"MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"WAS_MONSTER_DETECTED\"] = Fl(9)] = \"WAS_MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.MONSTER_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || Utils.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius = 10, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = Utils.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GW from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        this.site = site;\n        this.flags = Grid.make(site.width, site.height, FovFlags.VISIBLE);\n        this._changed = true;\n        this.viewportChanged = false;\n        this.fov = new FOV.FOV({\n            isBlocked(x, y) {\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return x >= 0 && y >= 0 && x < site.width && y < site.height;\n            },\n        });\n        // we want fov, so do not reveal the map initially\n        if (opts.fov === true) {\n            this.flags.fill(0);\n        }\n        if (opts.visible) {\n            this.makeAlwaysVisible();\n        }\n        else if (opts.visible === false) {\n            this.flags.fill(0);\n        }\n        else if (opts.revealed) {\n            this.revealAll();\n        }\n    }\n    get changed() {\n        return this._changed;\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |= FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED;\n    }\n    revealAll() {\n        this.flags.update((v) => v | FovFlags.REVEALED | FovFlags.VISIBLE);\n    }\n    revealCell(x, y) {\n        const flag = FovFlags.REVEALED;\n        this.flags[x][y] |= flag;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED | FovFlags.REVEALED);\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n    }\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            if (!(flag & FovFlags.REVEALED) /* && DATA.automationActive */) {\n                this.site.onCellRevealed(x, y);\n                // if (cell.item) {\n                //     const theItem: GW.types.ItemType = cell.item;\n                //     if (\n                //         theItem.hasLayerFlag(ObjectFlags.L_INTERRUPT_WHEN_SEEN)\n                //     ) {\n                //         GW.message.add(\n                //             '§you§ §see§ ΩitemMessageColorΩ§item§∆.',\n                //             {\n                //                 item: theItem,\n                //                 actor: DATA.player,\n                //             }\n                //         );\n                //     }\n                // }\n                // if (\n                //     !(flag & FovFlags.MAGIC_MAPPED) &&\n                //     this.site.hasObjectFlag(\n                //         x,\n                //         y,\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     )\n                // ) {\n                //     const tile = cell.tileWithLayerFlag(\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     );\n                //     if (tile) {\n                //         GW.message.add(\n                //             '§you§ §see§ ΩbackgroundMessageColorΩ§item§∆.',\n                //             {\n                //                 actor: DATA.player,\n                //                 item: tile.name,\n                //             }\n                //         );\n                //     }\n                // }\n                this.flags[x][y] |= FovFlags.REVEALED;\n            }\n            // this.site.redrawCell(x, y);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            // this.site.storeMemory(x, y);\n            // this.site.redrawCell(x, y);\n        }\n        return isVisible;\n    }\n    updateCellClairyvoyance(flag, x, y) {\n        const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n        const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n        if (isClairy && wasClairy) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isClairy && wasClairy) {\n            // ceased being clairvoyantly visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasClairy && isClairy) {\n            // became clairvoyantly visible\n            this.site.redrawCell(x, y, true);\n        }\n        return isClairy;\n    }\n    updateCellTelepathy(flag, x, y) {\n        const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n        const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n        if (isTele && wasTele) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isTele && wasTele) {\n            // ceased being telepathically visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasTele && isTele) {\n            // became telepathically visible\n            // if (\n            //     !(flag & FovFlags.REVEALED) &&\n            //     !cell.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER)\n            // ) {\n            //     DATA.xpxpThisTurn++;\n            // }\n            this.site.redrawCell(x, y, true);\n        }\n        return isTele;\n    }\n    updateCellDetect(flag, x, y) {\n        const isMonst = !!(flag & FovFlags.MONSTER_DETECTED);\n        const wasMonst = !!(flag & FovFlags.WAS_MONSTER_DETECTED);\n        if (isMonst && wasMonst) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isMonst && wasMonst) {\n            // ceased being detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        else if (!wasMonst && isMonst) {\n            // became detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        return isMonst;\n    }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        if (this.updateCellClairyvoyance(flag, x, y))\n            return;\n        if (this.updateCellTelepathy(flag, x, y))\n            return;\n        if (this.updateCellDetect(flag, x, y))\n            return;\n    }\n    update(cx, cy, cr) {\n        // if (!this.site.usesFov()) return false;\n        if (!this.viewportChanged &&\n            cx === undefined &&\n            !this.site.lightingChanged()) {\n            return false;\n        }\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            const flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                throw new Error('Received invalid viewport type: ' + type);\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as Utils from './utils';\n// var PATH = {};\n// export { PATH as path };\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = Utils.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\n// function pdsGetDistance(map, x, y) {\n// \tupdate(map);\n// \treturn getLink(map, x, y).distance;\n// }\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\n// function pdsSetCosts(map: DijkstraMap, costMap: Grid.NumGrid) {\n// \tlet i, j;\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n// \t\t\tif (i != 0 && j != 0 && i < map.width - 1 && j < map.height - 1) {\n// \t\t\t\tgetLink(map, i, j).cost = costMap[i][j];\n// \t\t\t} else {\n// \t\t\t\tgetLink(map, i, j).cost = FORBIDDEN;\n// \t\t\t}\n// \t\t}\n// \t}\n// }\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\n// function pdsBatchInput(\n//   map: DijkstraMap,\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   maxDistance: number,\n//   eightWays: boolean\n// ) {\n//   let i, j;\n//   map.eightWays = eightWays;\n//   let left: CostLink | null = map.front;\n//   let right: CostLink | null = map.front.right;\n//   map.front.right = null;\n//   for (i = 0; i < map.width; i++) {\n//     for (j = 0; j < map.height; j++) {\n//       let link = getLink(map, i, j);\n//       if (distanceMap != null) {\n//         link.distance = distanceMap[i][j];\n//       } else {\n//         if (costMap != null) {\n//           // totally hackish; refactor\n//           link.distance = maxDistance;\n//         }\n//       }\n//       let cost;\n//       if (isBoundaryXY(costMap, i, j)) {\n//         cost = OBSTRUCTION;\n//       } else {\n//         cost = costMap[i][j];\n//       }\n//       link.cost = cost;\n//       if (cost > 0) {\n//         if (link.distance < maxDistance) {\n//           if (right === null || right.distance > link.distance) {\n//             // left and right are used to traverse the list; if many cells have similar values,\n//             // some time can be saved by not clearing them with each insertion.  this time,\n//             // sadly, we have to start from the front.\n//             left = map.front;\n//             right = map.front.right;\n//           }\n//           while (right !== null && right.distance < link.distance) {\n//             left = right;\n//             right = right.right;\n//           }\n//           link.right = right;\n//           link.left = left;\n//           left.right = link;\n//           if (right != null) right.left = link;\n//           left = link;\n//         } else {\n//           link.right = null;\n//           link.left = null;\n//         }\n//       } else {\n//         link.right = null;\n//         link.left = null;\n//       }\n//     }\n//   }\n// }\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\n// function dijkstraScan(\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   useDiagonals = false\n// ) {\n//   // static makeDijkstraMap map;\n//   const width = distanceMap.length;\n//   const height = distanceMap[0].length;\n//   if (\n//     !DIJKSTRA_MAP ||\n//     DIJKSTRA_MAP.width < width ||\n//     DIJKSTRA_MAP.height < height\n//   ) {\n//     DIJKSTRA_MAP = makeDijkstraMap(width, height);\n//   }\n//   DIJKSTRA_MAP.width = width;\n//   DIJKSTRA_MAP.height = height;\n//   pdsBatchInput(DIJKSTRA_MAP, distanceMap, costMap, NO_PATH, useDiagonals);\n//   batchOutput(DIJKSTRA_MAP, distanceMap);\n// }\n//\n// function populateGenericCostMap(costMap, map) {\n//   let i, j;\n//\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n//       if (map.hasTileFlag(i, j, def.T_OBSTRUCTS_PASSABILITY)\n//           && (!map.hasTileMechFlag(i, j, def.TM_IS_SECRET) || (map.discoveredTileFlags(i, j) & def.T_OBSTRUCTS_PASSABILITY)))\n// \t\t\t{\n// \t\t\t\tcostMap[i][j] = map.hasTileFlag(i, j, def.T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n//       } else if (map.hasTileFlag(i, j, def.T_PATHING_BLOCKER & ~def.T_OBSTRUCTS_PASSABILITY)) {\n// \t\t\t\tcostMap[i][j] = FORBIDDEN;\n//       } else {\n//         costMap[i][j] = 1;\n//       }\n//     }\n//   }\n// }\n//\n// GW.path.populateGenericCostMap = populateGenericCostMap;\n//\n//\n// function baseCostFunction(blockingTerrainFlags, traveler, canUseSecretDoors, i, j) {\n// \tlet cost = 1;\n// \tmonst = GW.MAP.actorAt(i, j);\n// \tconst monstFlags = (monst ? (monst.info ? monst.info.flags : monst.flags) : 0) || 0;\n// \tif ((monstFlags & (def.MONST_IMMUNE_TO_WEAPONS | def.MONST_INVULNERABLE))\n// \t\t\t&& (monstFlags & (def.MONST_IMMOBILE | def.MONST_GETS_TURN_ON_ACTIVATION)))\n// \t{\n// \t\t\t// Always avoid damage-immune stationary monsters.\n// \t\tcost = FORBIDDEN;\n// \t} else if (canUseSecretDoors\n// \t\t\t&& GW.MAP.hasTileMechFlag(i, j, TM_IS_SECRET)\n// \t\t\t&& GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t&& !(GW.MAP.hasDiscoveredFlag(i, j) & T_OBSTRUCTS_PASSABILITY))\n// \t{\n// \t\tcost = 1;\n// \t} else if (GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t\t || (traveler && traveler === GW.PLAYER && !(GW.MAP.hasCellFlag(i, j, (REVEALED | MAGIC_MAPPED)))))\n// \t{\n// \t\tcost = GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n// \t} else if ((traveler && GW.actor.avoidsCell(traveler, i, j)) || GW.MAP.hasTileFlag(i, j, blockingTerrainFlags)) {\n// \t\tcost = FORBIDDEN;\n// \t}\n//\n// \treturn cost;\n// }\n//\n// GW.path.costFn = baseCostFunction;\n// GW.path.simpleCost = baseCostFunction.bind(undefined, 0, null, false);\n// GW.path.costForActor = ((actor) => baseCostFunction.bind(undefined, GW.actor.forbiddenFlags(actor), actor, actor !== GW.PLAYER));\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// function pathingDistance(x1, y1, x2, y2, blockingTerrainFlags, actor) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tconst costFn = baseCostFunction.bind(undefined, blockingTerrainFlags, actor, true);\n// \tcalculateDistances(distanceMap, x2, y2, costFn, true);\n// \tretval = distanceMap[x1][y1];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.path.distanceFromTo = pathingDistance;\n// function monstTravelDistance(monst, x2, y2, blockingTerrainFlags) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tcalculateDistances(distanceMap, x2, y2, blockingTerrainFlags, monst, true, true);\n// \tretval = distanceMap[monst.x][monst.y];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.actor.travelDistance = monstTravelDistance;\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + Utils.DIRS[dir][0];\n        newY = y + Utils.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return Utils.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, true);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//\n// GW.path.from = getMonsterPathOnMap;\n//# sourceMappingURL=path.js.map","import * as Utils from './utils';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {Function} fn The listener function.\n     * @param {Object} [context=null] The context to invoke the listener with.\n     * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {Function} fn - The function\n     * @param {Object} [context] - The context Object.\n     * @param {Boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    Utils.addToChain(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    Utils.eachChain(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            Utils.removeFromChain(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            Utils.removeFromChain(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { cosmetic } from '../random';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (other instanceof Color) {\n            this.dances = other.dances;\n        }\n        else if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.from(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.from(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg.scale(multiplier);\n        if (bg)\n            this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    while (count > 0) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1);\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this.toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        const mixer = new Mixer();\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const data = this.get(x, y);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(x, y, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport function makeDataBuffer(width, height) {\n    return new DataBuffer(width, height);\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\nexport function makeBuffer(...args) {\n    if (args.length == 1) {\n        return new Buffer(args[0]);\n    }\n    return new DataBuffer(args[0], args[1]);\n}\n//# sourceMappingURL=buffer.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    // draw(x: number, y: number, glyph: number, fg: number, bg: number) {\n    //     glyph = glyph & 0xff;\n    //     bg = bg & 0xfff;\n    //     fg = fg & 0xfff;\n    //     const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n    //     this._set(x, y, style);\n    //     return this;\n    // }\n    // fill(bg: number): this;\n    // fill(glyph: number, fg: number, bg: number): this;\n    // fill(...args: number[]): this {\n    //     let g = 0,\n    //         fg = 0,\n    //         bg = 0;\n    //     if (args.length == 1) {\n    //         bg = args[0];\n    //     } else if (args.length == 3) {\n    //         [g, fg, bg] = args;\n    //     }\n    //     for (let x = 0; x < this._width; ++x) {\n    //         for (let y = 0; y < this._height; ++y) {\n    //             this.draw(x, y, g, fg, bg);\n    //         }\n    //     }\n    //     return this;\n    // }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     const current = this._data[index];\n    //     if (current !== style) {\n    //         this._data[index] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n    }\n    return canvas;\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import * as Color from '../color';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = opacity >= 0 ? opacity : 100;\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)}, opacity: ${this.opacity} }`;\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\n// messages\nconst ARCHIVE = [];\nconst CONFIRMED = [];\nvar ARCHIVE_LINES = 30;\nvar MSG_WIDTH = 80;\nvar NEXT_WRITE_INDEX = 0;\nvar NEEDS_UPDATE = false;\nlet COMBAT_MESSAGE = null;\nexport function needsUpdate(needs) {\n    if (needs) {\n        NEEDS_UPDATE = true;\n    }\n    return NEEDS_UPDATE;\n}\nexport function configure(opts) {\n    if (!opts)\n        opts = {};\n    ARCHIVE_LINES = opts.length || 30;\n    MSG_WIDTH = opts.width || 80;\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        ARCHIVE[i] = null;\n        CONFIRMED[i] = false;\n    }\n}\n////////////////////////////////////\n// Messages\nexport function add(msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    commitCombatMessage();\n    addMessage(msg);\n}\nexport function fromActor(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        add(msg, args);\n    }\n}\nexport function forPlayer(actor, msg, args) {\n    if (!actor.isPlayer())\n        return;\n    add(msg, args);\n}\nexport function addCombat(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        const template = templates[msg];\n        if (template) {\n            msg = template(args);\n        }\n        else if (args) {\n            msg = Text.apply(msg, args);\n        }\n        addCombatMessage(msg);\n    }\n}\n// function messageWithoutCaps(msg, requireAcknowledgment) {\nfunction addMessageLine(msg) {\n    if (!Text.length(msg)) {\n        return;\n    }\n    // Add the message to the archive.\n    ARCHIVE[NEXT_WRITE_INDEX] = msg;\n    CONFIRMED[NEXT_WRITE_INDEX] = false;\n    NEXT_WRITE_INDEX = (NEXT_WRITE_INDEX + 1) % ARCHIVE_LINES;\n}\nfunction addMessage(msg) {\n    var _a;\n    msg = Text.capitalize(msg);\n    // // Implement the American quotation mark/period/comma ordering rule.\n    // for (i=0; text.text[i] && text.text[i+1]; i++) {\n    //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n    //         i += 4;\n    //     } else if (text.text[i] === '\"'\n    //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n    // \t\t{\n    // \t\t\tconst replace = text.text[i+1] + '\"';\n    // \t\t\ttext.spliceRaw(i, 2, replace);\n    //     }\n    // }\n    const lines = Text.splitIntoLines(msg, MSG_WIDTH);\n    if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n        lines.reverse();\n    }\n    lines.forEach((l) => addMessageLine(l));\n    // display the message:\n    NEEDS_UPDATE = true;\n    // if (GAME.playbackMode) {\n    // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n    // }\n}\nfunction addCombatMessage(msg) {\n    if (!COMBAT_MESSAGE) {\n        COMBAT_MESSAGE = msg;\n    }\n    else {\n        COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n    }\n    NEEDS_UPDATE = true;\n}\nfunction commitCombatMessage() {\n    if (!COMBAT_MESSAGE)\n        return false;\n    addMessage(COMBAT_MESSAGE + '.');\n    COMBAT_MESSAGE = null;\n    return true;\n}\nexport function confirmAll() {\n    for (let i = 0; i < CONFIRMED.length; i++) {\n        CONFIRMED[i] = true;\n    }\n    NEEDS_UPDATE = true;\n}\nexport function forEach(fn) {\n    commitCombatMessage();\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        const n = (ARCHIVE_LINES - i + NEXT_WRITE_INDEX - 1) % ARCHIVE_LINES;\n        const msg = ARCHIVE[n];\n        if (!msg)\n            return;\n        if (fn(msg, CONFIRMED[n], i) === false)\n            return;\n    }\n}\n//# sourceMappingURL=message.js.map","import { fl as Fl } from '../flag';\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Effect;\n(function (Effect) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    Effect[Effect[\"E_NEXT_ALWAYS\"] = Fl(0)] = \"E_NEXT_ALWAYS\";\n    Effect[Effect[\"E_NEXT_EVERYWHERE\"] = Fl(1)] = \"E_NEXT_EVERYWHERE\";\n    Effect[Effect[\"E_FIRED\"] = Fl(2)] = \"E_FIRED\";\n    Effect[Effect[\"E_NO_MARK_FIRED\"] = Fl(3)] = \"E_NO_MARK_FIRED\";\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    Effect[Effect[\"E_PROTECTED\"] = Fl(4)] = \"E_PROTECTED\";\n    // E_NO_REDRAW_CELL = Fl(),\n    Effect[Effect[\"E_TREAT_AS_BLOCKING\"] = Fl(5)] = \"E_TREAT_AS_BLOCKING\";\n    Effect[Effect[\"E_PERMIT_BLOCKING\"] = Fl(6)] = \"E_PERMIT_BLOCKING\";\n    Effect[Effect[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(7)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Effect[Effect[\"E_BLOCKED_BY_ITEMS\"] = Fl(8)] = \"E_BLOCKED_BY_ITEMS\";\n    Effect[Effect[\"E_BLOCKED_BY_ACTORS\"] = Fl(9)] = \"E_BLOCKED_BY_ACTORS\";\n    Effect[Effect[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(10)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Effect[Effect[\"E_SUPERPRIORITY\"] = Fl(11)] = \"E_SUPERPRIORITY\";\n    Effect[Effect[\"E_SPREAD_CIRCLE\"] = Fl(13)] = \"E_SPREAD_CIRCLE\";\n    Effect[Effect[\"E_SPREAD_LINE\"] = Fl(14)] = \"E_SPREAD_LINE\";\n    Effect[Effect[\"E_EVACUATE_CREATURES\"] = Fl(15)] = \"E_EVACUATE_CREATURES\";\n    Effect[Effect[\"E_EVACUATE_ITEMS\"] = Fl(16)] = \"E_EVACUATE_ITEMS\";\n    Effect[Effect[\"E_BUILD_IN_WALLS\"] = Fl(17)] = \"E_BUILD_IN_WALLS\";\n    Effect[Effect[\"E_MUST_TOUCH_WALLS\"] = Fl(18)] = \"E_MUST_TOUCH_WALLS\";\n    Effect[Effect[\"E_NO_TOUCH_WALLS\"] = Fl(19)] = \"E_NO_TOUCH_WALLS\";\n    Effect[Effect[\"E_CLEAR_GROUND\"] = Fl(21)] = \"E_CLEAR_GROUND\";\n    Effect[Effect[\"E_CLEAR_SURFACE\"] = Fl(22)] = \"E_CLEAR_SURFACE\";\n    Effect[Effect[\"E_CLEAR_LIQUID\"] = Fl(23)] = \"E_CLEAR_LIQUID\";\n    Effect[Effect[\"E_CLEAR_GAS\"] = Fl(24)] = \"E_CLEAR_GAS\";\n    Effect[Effect[\"E_CLEAR_TILE\"] = Fl(25)] = \"E_CLEAR_TILE\";\n    Effect[Effect[\"E_CLEAR_CELL\"] = Effect.E_CLEAR_GROUND |\n        Effect.E_CLEAR_SURFACE |\n        Effect.E_CLEAR_LIQUID |\n        Effect.E_CLEAR_GAS] = \"E_CLEAR_CELL\";\n    Effect[Effect[\"E_ONLY_IF_EMPTY\"] = Effect.E_BLOCKED_BY_ITEMS | Effect.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    Effect[Effect[\"E_ACTIVATE_DORMANT_MONSTER\"] = Fl(27)] = \"E_ACTIVATE_DORMANT_MONSTER\";\n    Effect[Effect[\"E_AGGRAVATES_MONSTERS\"] = Fl(28)] = \"E_AGGRAVATES_MONSTERS\";\n    Effect[Effect[\"E_RESURRECT_ALLY\"] = Fl(29)] = \"E_RESURRECT_ALLY\";\n})(Effect || (Effect = {}));\n//# sourceMappingURL=flags.js.map","import { from as fromFlag } from '../flag';\nimport { Effect as Flags } from './flags';\nimport { effectTypes, effects } from './effect';\nexport function make(opts) {\n    var _a;\n    if (!opts)\n        throw new Error('opts required to make effect.');\n    if (typeof opts === 'string') {\n        throw new Error('Cannot make effect from string: ' + opts);\n    }\n    if (typeof opts === 'function') {\n        opts = { fn: opts };\n    }\n    // now make base effect stuff\n    const info = {\n        flags: fromFlag(Flags, opts.flags),\n        chance: (_a = opts.chance) !== null && _a !== void 0 ? _a : 0,\n        next: null,\n        id: opts.id || 'n/a',\n    };\n    if (opts.next) {\n        if (typeof opts.next === 'string') {\n            info.next = opts.next;\n        }\n        else {\n            info.next = make(opts.next);\n        }\n    }\n    // and all the handlers\n    Object.values(effectTypes).forEach((v) => v.make(opts, info));\n    return info;\n}\nexport function from(opts) {\n    if (!opts)\n        throw new Error('Cannot make effect from null | undefined');\n    if (typeof opts === 'string') {\n        const effect = effects[opts];\n        if (effect)\n            return effect;\n        throw new Error('Unknown effect - ' + opts);\n    }\n    return make(opts);\n}\n//# sourceMappingURL=make.js.map","import { Effect as Flags } from './flags';\nimport { make } from './make';\n// resetMessageDisplayed\nexport function reset(effect) {\n    effect.flags &= ~Flags.E_FIRED;\n}\nexport function resetAll() {\n    Object.values(effects).forEach((e) => reset(e));\n}\nexport const effects = {};\nexport function install(id, config) {\n    const effect = make(config);\n    effects[id] = effect;\n    effect.id = id;\n    return effect;\n}\nexport function installAll(effects) {\n    Object.entries(effects).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport const effectTypes = {};\nexport function installType(id, effectType) {\n    effectTypes[id] = effectType;\n}\n//# sourceMappingURL=effect.js.map","import { data as DATA } from '../gw';\nimport * as Grid from '../grid';\nimport { random } from '../random';\nimport { Effect as Flags } from './flags';\nimport { effectTypes } from './effect';\nimport { from } from './make';\nexport async function fire(effect, map, x, y, ctx_ = {}) {\n    if (!effect)\n        return false;\n    if (typeof effect === 'string') {\n        const name = effect;\n        effect = from(name);\n        if (!effect)\n            throw new Error('Failed to find effect: ' + name);\n    }\n    const ctx = ctx_;\n    if (!ctx.force && effect.chance && !random.chance(effect.chance, 10000))\n        return false;\n    const grid = (ctx.grid = Grid.alloc(map.width, map.height));\n    let didSomething = true;\n    const handlers = Object.values(effectTypes);\n    for (let h of handlers) {\n        if (await h.fire(effect, map, x, y, ctx)) {\n            didSomething = true;\n        }\n    }\n    // bookkeeping\n    if (didSomething &&\n        map.isVisible(x, y) &&\n        !(effect.flags & Flags.E_NO_MARK_FIRED)) {\n        effect.flags |= Flags.E_FIRED;\n    }\n    // do the next effect - if applicable\n    if (effect.next &&\n        (didSomething || effect.flags & Flags.E_NEXT_ALWAYS) &&\n        !DATA.gameHasEnded) {\n        const nextInfo = typeof effect.next === 'string' ? from(effect.next) : effect.next;\n        if (effect.flags & Flags.E_NEXT_EVERYWHERE) {\n            await grid.forEachAsync(async (v, i, j) => {\n                if (!v)\n                    return;\n                // @ts-ignore\n                await fire(nextInfo, map, i, j, ctx);\n            });\n        }\n        else {\n            await fire(nextInfo, map, x, y, ctx);\n        }\n    }\n    Grid.free(grid);\n    return didSomething;\n}\nexport function fireSync(effect, map, x, y, ctx_ = {}) {\n    if (!effect)\n        return false;\n    if (typeof effect === 'string') {\n        const name = effect;\n        effect = from(name);\n        if (!effect)\n            throw new Error('Failed to find effect: ' + name);\n    }\n    const ctx = ctx_;\n    if (!ctx.force && effect.chance && !random.chance(effect.chance, 10000))\n        return false;\n    const grid = (ctx.grid = Grid.alloc(map.width, map.height));\n    let didSomething = true;\n    const handlers = Object.values(effectTypes);\n    for (let h of handlers) {\n        if (h.fireSync(effect, map, x, y, ctx)) {\n            didSomething = true;\n        }\n    }\n    // bookkeeping\n    if (didSomething &&\n        map.isVisible(x, y) &&\n        !(effect.flags & Flags.E_NO_MARK_FIRED)) {\n        effect.flags |= Flags.E_FIRED;\n    }\n    // do the next effect - if applicable\n    if (effect.next &&\n        (didSomething || effect.flags & Flags.E_NEXT_ALWAYS) &&\n        !DATA.gameHasEnded) {\n        const nextInfo = typeof effect.next === 'string' ? from(effect.next) : effect.next;\n        if (effect.flags & Flags.E_NEXT_EVERYWHERE) {\n            grid.forEach(async (v, i, j) => {\n                if (!v)\n                    return;\n                fireSync(nextInfo, map, i, j, ctx);\n            });\n        }\n        else {\n            fireSync(nextInfo, map, x, y, ctx);\n        }\n    }\n    Grid.free(grid);\n    return didSomething;\n}\n//# sourceMappingURL=fire.js.map","import * as EFFECT from './effect';\nimport { Effect as Flags } from './flags';\nimport * as Msg from '../message';\n//////////////////////////////////////////////\n// MESSAGE\nexport class MessageEffect {\n    make(src, dest) {\n        if (!src.message)\n            return true;\n        if (typeof src.message !== 'string') {\n            throw new Error('Emit must be configured with name of event to emit');\n        }\n        dest.message = src.message;\n        return true;\n    }\n    async fire(config, map, x, y, ctx) {\n        if (!config.message)\n            return false;\n        const fired = config.flags & Flags.E_FIRED ? true : false;\n        if (config.message &&\n            config.message.length &&\n            !fired &&\n            map.isVisible(x, y)) {\n            Msg.add(config.message, ctx);\n            return true;\n        }\n        return false;\n    }\n    fireSync(config, _map, _x, _y, _ctx) {\n        if (!config.message)\n            return false;\n        throw new Error('Cannot use \"message\" effects in build steps.');\n    }\n}\nEFFECT.installType('message', new MessageEffect());\n//# sourceMappingURL=message.js.map","import * as EFFECT from './effect';\nimport * as Events from '../events';\n//////////////////////////////////////////////\n// EMIT\nexport class EmitEffect {\n    make(src, dest) {\n        if (!src.emit)\n            return true;\n        if (typeof src.emit !== 'string') {\n            throw new Error('emit effects must be string name to emit: { emit: \"EVENT\" }');\n        }\n        dest.emit = src.emit;\n        return true;\n    }\n    async fire(config, _map, x, y, ctx) {\n        if (config.emit) {\n            return await Events.emit(config.emit, x, y, ctx);\n        }\n        return false;\n    }\n    fireSync(config, _map, _x, _y, _ctx) {\n        if (!config.emit)\n            return false;\n        throw new Error('Cannot use \"emit\" effects in build steps.');\n    }\n}\nEFFECT.installType('emit', new EmitEffect());\n//# sourceMappingURL=emit.js.map","import * as EFFECT from './effect';\n//////////////////////////////////////////////\n// FN\nclass FnEffect {\n    make(src, dest) {\n        if (!src.fn)\n            return true;\n        if (typeof src.fn !== 'function') {\n            throw new Error('fn effects must be functions.');\n        }\n        dest.fn = src.fn;\n        return true;\n    }\n    async fire(config, map, x, y, ctx) {\n        if (config.fn) {\n            return await config.fn(config, map, x, y, ctx);\n        }\n        return false;\n    }\n    fireSync(config, map, x, y, ctx) {\n        if (config.fn) {\n            const result = config.fn(config, map, x, y, ctx);\n            if (result === true || result === false) {\n                return result;\n            }\n            throw new Error('Cannot use async function effects in build steps.');\n        }\n        return false;\n    }\n}\nEFFECT.installType('fn', new FnEffect());\n//# sourceMappingURL=fn.js.map","import * as UTILS from './utils';\nimport * as GRID from './grid';\nimport { random } from './random';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new UTILS.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = random.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < UTILS.DIRS.length; dir++) {\n                    newX = i + UTILS.DIRS[dir][0];\n                    newY = j + UTILS.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, range, fadeTo, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color) || null; /* color */\n        this.radius = Range.make(range || 1);\n        this.fadeTo = fadeTo || 0;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(map, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!map)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(map.width, map.height, 0);\n        map.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (Utils.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS[k] * lightMultiplier) / 100);\n            }\n            map.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    return Math.max(light[0], light[1], light[2]);\n}\nexport function isDarkLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_DARK;\n    return intensity(light) <= (threshold || 20);\n}\nexport function isShadowLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_SHADOW;\n    return intensity(light) <= (threshold || 20);\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    if (source)\n        source.id = id;\n    return source;\n}\nexport function installAll(config = {}) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as Utils from '../utils';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this._changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    getAmbient() {\n        return this.ambient;\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get anyLightChanged() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    get changed() {\n        return this._changed;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        Utils.eachChain(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this._changed = false;\n        if (!force && !this.anyLightChanged)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT && PLAYERS_LIGHT.radius) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this._changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        Utils.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const map = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && map.hasActor(x, y))\n                    return false;\n                return map.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return map.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map","import { fl as Fl } from '../flag';\nexport var GameObject;\n(function (GameObject) {\n    // L_DYNAMIC = Fl(0), // for movable things like actors or items\n    GameObject[GameObject[\"L_SUPERPRIORITY\"] = Fl(1)] = \"L_SUPERPRIORITY\";\n    GameObject[GameObject[\"L_SECRETLY_PASSABLE\"] = Fl(2)] = \"L_SECRETLY_PASSABLE\";\n    GameObject[GameObject[\"L_BLOCKS_MOVE\"] = Fl(3)] = \"L_BLOCKS_MOVE\";\n    GameObject[GameObject[\"L_BLOCKS_VISION\"] = Fl(4)] = \"L_BLOCKS_VISION\";\n    GameObject[GameObject[\"L_BLOCKS_SURFACE\"] = Fl(6)] = \"L_BLOCKS_SURFACE\";\n    GameObject[GameObject[\"L_BLOCKS_LIQUID\"] = Fl(8)] = \"L_BLOCKS_LIQUID\";\n    GameObject[GameObject[\"L_BLOCKS_GAS\"] = Fl(7)] = \"L_BLOCKS_GAS\";\n    GameObject[GameObject[\"L_BLOCKS_ITEMS\"] = Fl(5)] = \"L_BLOCKS_ITEMS\";\n    GameObject[GameObject[\"L_BLOCKS_ACTORS\"] = Fl(11)] = \"L_BLOCKS_ACTORS\";\n    GameObject[GameObject[\"L_BLOCKS_EFFECTS\"] = Fl(9)] = \"L_BLOCKS_EFFECTS\";\n    GameObject[GameObject[\"L_BLOCKS_DIAGONAL\"] = Fl(10)] = \"L_BLOCKS_DIAGONAL\";\n    GameObject[GameObject[\"L_INTERRUPT_WHEN_SEEN\"] = Fl(12)] = \"L_INTERRUPT_WHEN_SEEN\";\n    GameObject[GameObject[\"L_LIST_IN_SIDEBAR\"] = Fl(13)] = \"L_LIST_IN_SIDEBAR\";\n    GameObject[GameObject[\"L_VISUALLY_DISTINCT\"] = Fl(14)] = \"L_VISUALLY_DISTINCT\";\n    GameObject[GameObject[\"L_BRIGHT_MEMORY\"] = Fl(15)] = \"L_BRIGHT_MEMORY\";\n    GameObject[GameObject[\"L_INVERT_WHEN_HIGHLIGHTED\"] = Fl(16)] = \"L_INVERT_WHEN_HIGHLIGHTED\";\n    GameObject[GameObject[\"L_BLOCKED_BY_STAIRS\"] = GameObject.L_BLOCKS_ITEMS |\n        GameObject.L_BLOCKS_SURFACE |\n        GameObject.L_BLOCKS_GAS |\n        GameObject.L_BLOCKS_LIQUID |\n        GameObject.L_BLOCKS_EFFECTS |\n        GameObject.L_BLOCKS_ACTORS] = \"L_BLOCKED_BY_STAIRS\";\n    GameObject[GameObject[\"L_BLOCKS_SCENT\"] = GameObject.L_BLOCKS_MOVE | GameObject.L_BLOCKS_VISION] = \"L_BLOCKS_SCENT\";\n    GameObject[GameObject[\"L_DIVIDES_LEVEL\"] = GameObject.L_BLOCKS_MOVE] = \"L_DIVIDES_LEVEL\";\n    GameObject[GameObject[\"L_WAYPOINT_BLOCKER\"] = GameObject.L_BLOCKS_MOVE] = \"L_WAYPOINT_BLOCKER\";\n    GameObject[GameObject[\"L_WALL_FLAGS\"] = GameObject.L_BLOCKS_MOVE |\n        GameObject.L_BLOCKS_VISION |\n        GameObject.L_BLOCKS_LIQUID |\n        GameObject.L_BLOCKS_GAS |\n        GameObject.L_BLOCKS_EFFECTS |\n        GameObject.L_BLOCKS_DIAGONAL] = \"L_WALL_FLAGS\";\n    GameObject[GameObject[\"L_BLOCKS_EVERYTHING\"] = GameObject.L_WALL_FLAGS |\n        GameObject.L_BLOCKS_ITEMS |\n        GameObject.L_BLOCKS_ACTORS |\n        GameObject.L_BLOCKS_SURFACE] = \"L_BLOCKS_EVERYTHING\";\n})(GameObject || (GameObject = {}));\nexport var Depth;\n(function (Depth) {\n    Depth[Depth[\"ALL_LAYERS\"] = -1] = \"ALL_LAYERS\";\n    Depth[Depth[\"GROUND\"] = 0] = \"GROUND\";\n    Depth[Depth[\"SURFACE\"] = 1] = \"SURFACE\";\n    Depth[Depth[\"ITEM\"] = 2] = \"ITEM\";\n    Depth[Depth[\"ACTOR\"] = 3] = \"ACTOR\";\n    Depth[Depth[\"LIQUID\"] = 4] = \"LIQUID\";\n    Depth[Depth[\"GAS\"] = 5] = \"GAS\";\n    Depth[Depth[\"FX\"] = 6] = \"FX\";\n    Depth[Depth[\"UI\"] = 7] = \"UI\";\n})(Depth || (Depth = {}));\n//# sourceMappingURL=flags.js.map","import { Sprite } from '../sprite';\nimport * as Flags from './flags';\nexport class GameObject {\n    constructor() {\n        this.sprite = new Sprite();\n        this.depth = 1; // default - TODO - enum/const\n        this.light = null;\n        this.flags = { object: 0 };\n        this.next = null;\n        this.x = -1;\n        this.y = -1;\n    }\n    hasObjectFlag(flag) {\n        return !!(this.flags.object & flag);\n    }\n    hasAllObjectFlags(flags) {\n        return (this.flags.object & flags) === flags;\n    }\n    blocksMove() {\n        return this.hasObjectFlag(Flags.GameObject.L_BLOCKS_MOVE);\n    }\n    blocksVision() {\n        return this.hasObjectFlag(Flags.GameObject.L_BLOCKS_VISION);\n    }\n    blocksPathing() {\n        return this.hasObjectFlag(Flags.GameObject.L_BLOCKS_MOVE);\n    }\n    blocksEffects() {\n        return this.hasObjectFlag(Flags.GameObject.L_BLOCKS_EFFECTS);\n    }\n    itemFlags() {\n        return 0;\n    }\n    actorFlags() {\n        return 0;\n    }\n}\n//# sourceMappingURL=gameObject.js.map","import { GameObject } from '../gameObject';\nimport { Depth } from '../gameObject/flags';\nexport class Item extends GameObject {\n    constructor() {\n        super();\n        this.quantity = 1;\n        this.next = null;\n        // @ts-ignore\n        this.flags = this.flags || {};\n        this.flags.item = 0;\n        this.depth = Depth.ITEM;\n    }\n    itemFlags() {\n        return this.flags.item;\n    }\n    hasItemFlag(flag) {\n        return !!(this.flags.item & flag);\n    }\n    hasAllItemFlags(flags) {\n        return (this.flags.item & flags) === flags;\n    }\n    forbidsCell(_cell) {\n        return false;\n    }\n}\n//# sourceMappingURL=index.js.map","import { fl as Fl } from '../flag';\nexport { GameObject, Depth } from '../gameObject/flags';\nexport var Actor;\n(function (Actor) {\n    Actor[Actor[\"IS_PLAYER\"] = Fl(0)] = \"IS_PLAYER\";\n})(Actor || (Actor = {}));\n//# sourceMappingURL=flags.js.map","import { GameObject } from '../gameObject';\nimport * as Flags from './flags';\nimport * as flags_1 from './flags';\nexport { flags_1 as flags };\nexport class Actor extends GameObject {\n    constructor() {\n        super();\n        this.next = null;\n        // @ts-ignore\n        this.flags = this.flags || {};\n        this.flags.actor = 0;\n        this.depth = Flags.Depth.ACTOR;\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    hasAllActorFlags(flags) {\n        return (this.flags.actor & flags) === flags;\n    }\n    actorFlags() {\n        return this.flags.actor;\n    }\n    isPlayer() {\n        return this.hasActorFlag(Flags.Actor.IS_PLAYER);\n    }\n    isVisible() {\n        return true;\n    }\n    forbidsCell(_cell) {\n        return false;\n    }\n}\n//# sourceMappingURL=index.js.map","import { fl as Fl } from '../flag';\n///////////////////////////////////////////////////////\n// TILE\nexport var Tile;\n(function (Tile) {\n    Tile[Tile[\"T_BRIDGE\"] = Fl(0)] = \"T_BRIDGE\";\n    Tile[Tile[\"T_AUTO_DESCENT\"] = Fl(1)] = \"T_AUTO_DESCENT\";\n    Tile[Tile[\"T_LAVA\"] = Fl(2)] = \"T_LAVA\";\n    Tile[Tile[\"T_DEEP_WATER\"] = Fl(3)] = \"T_DEEP_WATER\";\n    Tile[Tile[\"T_IS_FLAMMABLE\"] = Fl(5)] = \"T_IS_FLAMMABLE\";\n    Tile[Tile[\"T_SPONTANEOUSLY_IGNITES\"] = Fl(6)] = \"T_SPONTANEOUSLY_IGNITES\";\n    Tile[Tile[\"T_IS_FIRE\"] = Fl(7)] = \"T_IS_FIRE\";\n    Tile[Tile[\"T_EXTINGUISHES_FIRE\"] = Fl(8)] = \"T_EXTINGUISHES_FIRE\";\n    Tile[Tile[\"T_IS_SECRET\"] = Fl(9)] = \"T_IS_SECRET\";\n    Tile[Tile[\"T_IS_TRAP\"] = Fl(10)] = \"T_IS_TRAP\";\n    Tile[Tile[\"T_SACRED\"] = Fl(11)] = \"T_SACRED\";\n    Tile[Tile[\"T_UP_STAIRS\"] = Fl(12)] = \"T_UP_STAIRS\";\n    Tile[Tile[\"T_DOWN_STAIRS\"] = Fl(13)] = \"T_DOWN_STAIRS\";\n    Tile[Tile[\"T_PORTAL\"] = Fl(14)] = \"T_PORTAL\";\n    Tile[Tile[\"T_IS_DOOR\"] = Fl(15)] = \"T_IS_DOOR\";\n    Tile[Tile[\"T_ALLOWS_SUBMERGING\"] = Fl(16)] = \"T_ALLOWS_SUBMERGING\";\n    Tile[Tile[\"T_ENTANGLES\"] = Fl(17)] = \"T_ENTANGLES\";\n    Tile[Tile[\"T_REFLECTS\"] = Fl(18)] = \"T_REFLECTS\";\n    Tile[Tile[\"T_STAND_IN_TILE\"] = Fl(19)] = \"T_STAND_IN_TILE\";\n    Tile[Tile[\"T_CONNECTS_LEVEL\"] = Fl(20)] = \"T_CONNECTS_LEVEL\";\n    Tile[Tile[\"T_BLOCKS_OTHER_LAYERS\"] = Fl(21)] = \"T_BLOCKS_OTHER_LAYERS\";\n    Tile[Tile[\"T_HAS_STAIRS\"] = Tile.T_UP_STAIRS | Tile.T_DOWN_STAIRS | Tile.T_PORTAL] = \"T_HAS_STAIRS\";\n    Tile[Tile[\"T_OBSTRUCTS_SCENT\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_HAS_STAIRS] = \"T_OBSTRUCTS_SCENT\";\n    Tile[Tile[\"T_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_IS_FIRE |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_ENTANGLES] = \"T_PATHING_BLOCKER\";\n    Tile[Tile[\"T_LAKE_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_LAKE_PATHING_BLOCKER\";\n    Tile[Tile[\"T_WAYPOINT_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_WAYPOINT_BLOCKER\";\n    Tile[Tile[\"T_DIVIDES_LEVEL\"] = Tile.T_AUTO_DESCENT | Tile.T_IS_TRAP | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_DIVIDES_LEVEL\";\n    Tile[Tile[\"T_MOVES_ITEMS\"] = Tile.T_DEEP_WATER | Tile.T_LAVA] = \"T_MOVES_ITEMS\";\n    Tile[Tile[\"T_CAN_BE_BRIDGED\"] = Tile.T_AUTO_DESCENT | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_CAN_BE_BRIDGED\";\n    // T_HARMFUL_TERRAIN = T_CAUSES_POISON |\n    //   T_IS_FIRE |\n    //   T_CAUSES_DAMAGE |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_EXPLOSIVE_DAMAGE,\n    // T_RESPIRATION_IMMUNITIES = T_CAUSES_DAMAGE |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_NAUSEA,\n    Tile[Tile[\"T_IS_DEEP_LIQUID\"] = Tile.T_LAVA | Tile.T_AUTO_DESCENT | Tile.T_DEEP_WATER] = \"T_IS_DEEP_LIQUID\";\n})(Tile || (Tile = {}));\n///////////////////////////////////////////////////////\n// TILE MECH\nexport var TileMech;\n(function (TileMech) {\n    // TM_PROMOTES_WITH_KEY = Fl(1), // promotes if the key is present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_WITHOUT_KEY = Fl(2), // promotes if the key is NOT present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_ON_STEP = Fl(3), // promotes when a creature, player or item is on the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ITEM_REMOVE = Fl(4), // promotes when an item is lifted from the tile (primarily for altars)\n    // TM_PROMOTES_ON_PLAYER_ENTRY = Fl(5), // promotes when the player enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_SACRIFICE_ENTRY = Fl(6), // promotes when the sacrifice target enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ELECTRICITY = Fl(7), // promotes when hit by a lightning bolt\n    // T_CAUSES_POISON = Fl(18), // any non-levitating creature gets 10 poison\n    // T_CAUSES_DAMAGE = Fl(19), // anything on the tile takes max(1-2, 10%) damage per turn\n    // T_CAUSES_NAUSEA = Fl(20), // any creature on the tile becomes nauseous\n    // T_CAUSES_PARALYSIS = Fl(21), // anything caught on this tile is paralyzed\n    // T_CAUSES_CONFUSION = Fl(22), // causes creatures on this tile to become confused\n    // T_CAUSES_HEALING = Fl(23), // heals 20% max HP per turn for any player or non-inanimate monsters\n    // T_CAUSES_EXPLOSIVE_DAMAGE = Fl(25), // is an explosion; deals higher of 15-20 or 50% damage instantly, but not again for five turns\n    TileMech[TileMech[\"TM_IS_WIRED\"] = Fl(9)] = \"TM_IS_WIRED\";\n    TileMech[TileMech[\"TM_IS_CIRCUIT_BREAKER\"] = Fl(10)] = \"TM_IS_CIRCUIT_BREAKER\";\n    TileMech[TileMech[\"TM_VANISHES_UPON_PROMOTION\"] = Fl(15)] = \"TM_VANISHES_UPON_PROMOTION\";\n    TileMech[TileMech[\"TM_EXPLOSIVE_PROMOTE\"] = Fl(21)] = \"TM_EXPLOSIVE_PROMOTE\";\n    TileMech[TileMech[\"TM_SWAP_ENCHANTS_ACTIVATION\"] = Fl(25)] = \"TM_SWAP_ENCHANTS_ACTIVATION\";\n    // TM_PROMOTES = TM_PROMOTES_WITH_KEY |\n    //   TM_PROMOTES_WITHOUT_KEY |\n    //   TM_PROMOTES_ON_STEP |\n    //   TM_PROMOTES_ON_ITEM_REMOVE |\n    //   TM_PROMOTES_ON_SACRIFICE_ENTRY |\n    //   TM_PROMOTES_ON_ELECTRICITY |\n    //   TM_PROMOTES_ON_PLAYER_ENTRY,\n})(TileMech || (TileMech = {}));\n//# sourceMappingURL=flags.js.map","import { Depth, GameObject as ObjectFlags, } from '../gameObject/flags';\nimport * as Light from '../light';\nimport * as Sprite from '../sprite';\nimport * as Flag from '../flag';\nimport { make as makeEffect } from '../effect/make';\nimport * as Flags from './flags';\nimport * as Color from '../color';\nexport class Tile {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this.index = -1;\n        this.dissipate = 20 * 100; // 0%\n        this.effects = {};\n        this.priority = 50;\n        this.depth = 0;\n        this.light = null;\n        this.groundTile = null;\n        this.id = config.id || 'n/a';\n        this.dissipate = (_a = config.dissipate) !== null && _a !== void 0 ? _a : this.dissipate;\n        this.priority = (_b = config.priority) !== null && _b !== void 0 ? _b : this.priority;\n        this.depth = (_c = config.depth) !== null && _c !== void 0 ? _c : this.depth;\n        this.light = config.light || null;\n        this.groundTile = config.groundTile || null;\n        this.sprite = Sprite.make(config);\n        this.name = config.name || 'tile';\n        this.description = config.description || this.name;\n        this.flavor = config.flavor || this.name;\n        this.article = (_d = config.article) !== null && _d !== void 0 ? _d : null;\n        this.flags = config.flags || { object: 0, tile: 0, tileMech: 0 };\n        if (config.effects) {\n            Object.assign(this.effects, config.effects);\n        }\n    }\n    hasObjectFlag(flag) {\n        return !!(this.flags.object & flag);\n    }\n    hasTileFlag(flag) {\n        return !!(this.flags.tile & flag);\n    }\n    hasTileMechFlag(flag) {\n        return !!(this.flags.tileMech & flag);\n    }\n    hasAllObjectFlags(flag) {\n        return (this.flags.object & flag) === flag;\n    }\n    hasAllTileFlags(flag) {\n        return (this.flags.tile & flag) === flag;\n    }\n    hasAllTileMechFlags(flag) {\n        return (this.flags.tileMech & flag) === flag;\n    }\n    blocksVision() {\n        return !!(this.flags.object & ObjectFlags.L_BLOCKS_VISION);\n    }\n    blocksMove() {\n        return !!(this.flags.object & ObjectFlags.L_BLOCKS_MOVE);\n    }\n    blocksPathing() {\n        return (this.blocksMove() || this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    blocksEffects() {\n        return !!(this.flags.object & ObjectFlags.L_BLOCKS_EFFECTS);\n    }\n    hasEffect(name) {\n        return name in this.effects;\n    }\n    getName(arg) {\n        let opts = {};\n        if (arg === true || arg === false) {\n            opts.article = arg;\n        }\n        else if (typeof arg === 'string') {\n            opts.article = arg;\n        }\n        else if (arg) {\n            opts = arg;\n        }\n        if (!opts.article && !opts.color)\n            return this.name;\n        let result = this.name;\n        if (opts.color) {\n            let color = opts.color;\n            if (opts.color === true) {\n                color = this.sprite.fg || 'white';\n            }\n            if (typeof color !== 'string') {\n                color = Color.from(color).toString();\n            }\n            result = `Ω${color}Ω${this.name}∆`;\n        }\n        if (opts.article) {\n            let article = typeof opts.article === 'string'\n                ? opts.article\n                : this.article || 'a';\n            result = article + ' ' + result;\n        }\n        return result;\n    }\n    getDescription() {\n        return this.description || this.getName();\n    }\n    getFlavor() {\n        return this.flavor || this.getName();\n    }\n}\nexport function make(options) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    let base = { effects: {}, flags: {}, sprite: {} };\n    if (options.extends) {\n        base = tiles[options.extends];\n        if (!base)\n            throw new Error('Failed to find base tile: ' + options.extends);\n    }\n    const effects = {};\n    Object.assign(effects, base.effects);\n    if (options.effects) {\n        Object.entries(options.effects).forEach(([key, value]) => {\n            if (value === null) {\n                delete effects[key];\n                return;\n            }\n            if (typeof value === 'string') {\n                effects[key] = value;\n                return;\n            }\n            effects[key] = makeEffect(value);\n        });\n    }\n    const flags = {\n        object: Flag.from(ObjectFlags, base.flags.object, options.flags),\n        tile: Flag.from(Flags.Tile, base.flags.tile, options.flags),\n        tileMech: Flag.from(Flags.TileMech, base.flags.tileMech, options.flags),\n    };\n    let depth = base.depth || 0;\n    if (options.depth) {\n        if (typeof options.depth === 'string') {\n            depth = Depth[options.depth];\n        }\n        else {\n            depth = options.depth;\n        }\n    }\n    let light = base.light;\n    if (options.light) {\n        light = Light.make(options.light);\n    }\n    else if (options.light === null) {\n        light = null;\n    }\n    const config = {\n        id: options.id,\n        flags,\n        dissipate: (_a = options.dissipate) !== null && _a !== void 0 ? _a : base.dissipate,\n        effects,\n        priority: (_b = options.priority) !== null && _b !== void 0 ? _b : base.priority,\n        depth: depth,\n        light,\n        groundTile: options.groundTile || null,\n        ch: (_c = options.ch) !== null && _c !== void 0 ? _c : base.sprite.ch,\n        fg: (_d = options.fg) !== null && _d !== void 0 ? _d : base.sprite.fg,\n        bg: (_e = options.bg) !== null && _e !== void 0 ? _e : base.sprite.bg,\n        opacity: (_f = options.opacity) !== null && _f !== void 0 ? _f : base.sprite.opacity,\n        name: options.name || base.name,\n        description: options.description || base.description,\n        flavor: options.flavor || base.flavor,\n        article: (_g = options.article) !== null && _g !== void 0 ? _g : base.article,\n    };\n    const tile = new Tile(config);\n    return tile;\n}\nexport const tiles = {};\nexport const all = [];\nexport function get(id) {\n    if (id instanceof Tile)\n        return id;\n    if (typeof id === 'string')\n        return tiles[id] || null;\n    return all[id] || null;\n}\nexport function install(id, ...args) {\n    let options = args[0];\n    if (args.length == 2) {\n        options = args[1];\n        options.extends = args[0];\n    }\n    options.id = id;\n    const tile = make(options);\n    tile.index = all.length;\n    all.push(tile);\n    tiles[id] = tile;\n    return tile;\n}\nexport function installAll(tiles) {\n    Object.entries(tiles).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\n//# sourceMappingURL=tile.js.map","import * as Tile from './tile';\n// These are the minimal set of tiles to make the diggers work\nTile.install('NULL', {\n    ch: '\\u2205',\n    fg: 'white',\n    bg: 'black',\n    flags: 'L_BLOCKS_MOVE',\n    name: 'eerie nothingness',\n    article: 'an',\n    priority: 0,\n});\nTile.install('FLOOR', {\n    ch: '\\u00b7',\n    fg: [30, 30, 30, 20, 0, 0, 0],\n    bg: [2, 2, 10, 0, 2, 2, 0],\n    priority: 10,\n    article: 'the',\n});\nTile.install('DOOR', {\n    ch: '+',\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 30,\n    flags: 'T_IS_DOOR, L_BLOCKS_EFFECTS, L_BLOCKS_ITEMS, L_BLOCKS_VISION, L_VISUALLY_DISTINCT',\n    article: 'a',\n    effects: {\n        enter: { tile: 'DOOR_OPEN' },\n        open: { tile: 'DOOR_OPEN_ALWAYS' },\n    },\n});\nTile.install('DOOR_OPEN', 'DOOR', {\n    ch: \"'\",\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 40,\n    flags: '!L_BLOCKS_ITEMS, !L_BLOCKS_VISION',\n    name: 'open door',\n    article: 'an',\n    effects: {\n        tick: {\n            chance: 100 * 100,\n            tile: 'DOOR',\n            flags: 'E_SUPERPRIORITY, E_ONLY_IF_EMPTY',\n        },\n        enter: null,\n        open: null,\n        close: { tile: 'DOOR', flags: 'E_SUPERPRIORITY, E_ONLY_IF_EMPTY' },\n    },\n});\nTile.install('DOOR_OPEN_ALWAYS', 'DOOR_OPEN', {\n    effects: {\n        tick: null,\n        close: { tile: 'DOOR', flags: 'E_SUPERPRIORITY, E_ONLY_IF_EMPTY' },\n    },\n});\nTile.install('UP_STAIRS', {\n    ch: '<',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_UP_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, L_LIST_IN_SIDEBAR',\n    name: 'upward staircase',\n    article: 'an',\n    effects: {\n        player: { emit: 'UP_STAIRS' },\n    },\n});\nTile.install('DOWN_STAIRS', {\n    ch: '>',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_DOWN_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, L_LIST_IN_SIDEBAR',\n    name: 'downward staircase',\n    article: 'a',\n    effects: {\n        player: { emit: 'DOWN_STAIRS' },\n    },\n});\nTile.install('WALL', {\n    ch: '#',\n    fg: [7, 7, 7, 0, 3, 3, 3],\n    bg: [40, 40, 40, 10, 10, 0, 5],\n    priority: 100,\n    flags: 'L_WALL_FLAGS',\n    article: 'a',\n    name: 'stone wall',\n    description: 'A wall made from rough cut stone.',\n    flavor: 'a rough stone wall',\n});\nTile.install('IMPREGNABLE', {\n    ch: '#',\n    fg: [7, 7, 7, 0, 3, 3, 3],\n    bg: [40, 40, 40, 10, 10, 0, 5],\n    priority: 100,\n    flags: 'L_WALL_FLAGS, IMPREGNABLE',\n    article: 'a',\n    name: 'impregnable wall',\n    description: 'A wall made from very hard stone.',\n    flavor: 'an impregnable wall',\n});\nTile.install('LAKE', {\n    ch: '~',\n    fg: [5, 8, 20, 10, 0, 4, 15, true],\n    bg: [10, 15, 41, 6, 5, 5, 5, true],\n    priority: 50,\n    flags: 'T_DEEP_WATER',\n    name: 'deep water',\n    article: 'the',\n});\nTile.install('SHALLOW', {\n    ch: '\\u00b7',\n    fg: [5, 8, 10, 10, 0, 4, 15, true],\n    bg: [10, 30, 30, 6, 0, 10, 10, true],\n    priority: 20,\n    name: 'shallow water',\n    article: 'the',\n    depth: 'SURFACE', // 'LIQUID'?\n});\nTile.install('BRIDGE', {\n    ch: '=',\n    fg: [100, 40, 40],\n    priority: 40,\n    depth: 'SURFACE',\n    flags: 'T_BRIDGE, L_VISUALLY_DISTINCT',\n    article: 'a',\n    groundTile: 'LAKE',\n});\n//# sourceMappingURL=tiles.js.map","import { Tile, TileMech } from './flags';\nexport const flags = { Tile, TileMech };\nexport * from './types';\nexport * from './tile';\nimport './tiles';\n//# sourceMappingURL=index.js.map","import { fl as Fl } from '../flag';\nexport { GameObject, Depth } from '../gameObject/flags';\nexport { Tile, TileMech } from '../tile/flags';\n///////////////////////////////////////////////////////\n// CELL\nexport var Cell;\n(function (Cell) {\n    Cell[Cell[\"SEARCHED_FROM_HERE\"] = Fl(0)] = \"SEARCHED_FROM_HERE\";\n    Cell[Cell[\"PRESSURE_PLATE_DEPRESSED\"] = Fl(1)] = \"PRESSURE_PLATE_DEPRESSED\";\n    Cell[Cell[\"KNOWN_TO_BE_TRAP_FREE\"] = Fl(2)] = \"KNOWN_TO_BE_TRAP_FREE\";\n    Cell[Cell[\"CAUGHT_FIRE_THIS_TURN\"] = Fl(3)] = \"CAUGHT_FIRE_THIS_TURN\";\n    Cell[Cell[\"EVENT_FIRED_THIS_TURN\"] = Fl(4)] = \"EVENT_FIRED_THIS_TURN\";\n    Cell[Cell[\"EVENT_PROTECTED\"] = Fl(5)] = \"EVENT_PROTECTED\";\n    Cell[Cell[\"IS_IN_LOOP\"] = Fl(6)] = \"IS_IN_LOOP\";\n    Cell[Cell[\"IS_CHOKEPOINT\"] = Fl(7)] = \"IS_CHOKEPOINT\";\n    Cell[Cell[\"IS_GATE_SITE\"] = Fl(8)] = \"IS_GATE_SITE\";\n    Cell[Cell[\"IS_IN_ROOM_MACHINE\"] = Fl(9)] = \"IS_IN_ROOM_MACHINE\";\n    Cell[Cell[\"IS_IN_AREA_MACHINE\"] = Fl(10)] = \"IS_IN_AREA_MACHINE\";\n    Cell[Cell[\"IS_POWERED\"] = Fl(11)] = \"IS_POWERED\";\n    Cell[Cell[\"IMPREGNABLE\"] = Fl(12)] = \"IMPREGNABLE\";\n    // DARKENED = Fl(13), // magical blindness?\n    Cell[Cell[\"NEEDS_REDRAW\"] = Fl(14)] = \"NEEDS_REDRAW\";\n    Cell[Cell[\"CELL_CHANGED\"] = Fl(15)] = \"CELL_CHANGED\";\n    // These are to help memory\n    Cell[Cell[\"HAS_SURFACE\"] = Fl(16)] = \"HAS_SURFACE\";\n    Cell[Cell[\"HAS_LIQUID\"] = Fl(17)] = \"HAS_LIQUID\";\n    Cell[Cell[\"HAS_GAS\"] = Fl(18)] = \"HAS_GAS\";\n    Cell[Cell[\"HAS_PLAYER\"] = Fl(19)] = \"HAS_PLAYER\";\n    Cell[Cell[\"HAS_ACTOR\"] = Fl(20)] = \"HAS_ACTOR\";\n    Cell[Cell[\"HAS_DORMANT_MONSTER\"] = Fl(21)] = \"HAS_DORMANT_MONSTER\";\n    Cell[Cell[\"HAS_ITEM\"] = Fl(22)] = \"HAS_ITEM\";\n    Cell[Cell[\"IS_IN_PATH\"] = Fl(23)] = \"IS_IN_PATH\";\n    Cell[Cell[\"IS_CURSOR\"] = Fl(24)] = \"IS_CURSOR\";\n    Cell[Cell[\"STABLE_MEMORY\"] = Fl(25)] = \"STABLE_MEMORY\";\n    Cell[Cell[\"IS_WIRED\"] = Fl(26)] = \"IS_WIRED\";\n    Cell[Cell[\"IS_CIRCUIT_BREAKER\"] = Fl(27)] = \"IS_CIRCUIT_BREAKER\";\n    Cell[Cell[\"COLORS_DANCE\"] = Fl(30)] = \"COLORS_DANCE\";\n    Cell[Cell[\"IS_IN_MACHINE\"] = Cell.IS_IN_ROOM_MACHINE | Cell.IS_IN_AREA_MACHINE] = \"IS_IN_MACHINE\";\n    Cell[Cell[\"PERMANENT_CELL_FLAGS\"] = Cell.HAS_ITEM |\n        Cell.HAS_DORMANT_MONSTER |\n        Cell.STABLE_MEMORY |\n        Cell.SEARCHED_FROM_HERE |\n        Cell.PRESSURE_PLATE_DEPRESSED |\n        Cell.KNOWN_TO_BE_TRAP_FREE |\n        Cell.IS_IN_LOOP |\n        Cell.IS_CHOKEPOINT |\n        Cell.IS_GATE_SITE |\n        Cell.IS_IN_MACHINE |\n        Cell.IMPREGNABLE] = \"PERMANENT_CELL_FLAGS\";\n    Cell[Cell[\"HAS_ANY_ACTOR\"] = Cell.HAS_PLAYER | Cell.HAS_ACTOR] = \"HAS_ANY_ACTOR\";\n    Cell[Cell[\"HAS_ANY_OBJECT\"] = Cell.HAS_ITEM | Cell.HAS_ANY_ACTOR] = \"HAS_ANY_OBJECT\";\n    Cell[Cell[\"CELL_DEFAULT\"] = Cell.NEEDS_REDRAW | Cell.CELL_CHANGED] = \"CELL_DEFAULT\";\n})(Cell || (Cell = {}));\n///////////////////////////////////////////////////////\n// MAP\nexport var Map;\n(function (Map) {\n    Map[Map[\"MAP_CHANGED\"] = Fl(0)] = \"MAP_CHANGED\";\n    Map[Map[\"MAP_ALWAYS_LIT\"] = Fl(3)] = \"MAP_ALWAYS_LIT\";\n    Map[Map[\"MAP_SAW_WELCOME\"] = Fl(4)] = \"MAP_SAW_WELCOME\";\n    Map[Map[\"MAP_NO_LIQUID\"] = Fl(5)] = \"MAP_NO_LIQUID\";\n    Map[Map[\"MAP_NO_GAS\"] = Fl(6)] = \"MAP_NO_GAS\";\n    Map[Map[\"MAP_CALC_FOV\"] = Fl(7)] = \"MAP_CALC_FOV\";\n    Map[Map[\"MAP_FOV_CHANGED\"] = Fl(8)] = \"MAP_FOV_CHANGED\";\n    Map[Map[\"MAP_DANCES\"] = Fl(9)] = \"MAP_DANCES\";\n    Map[Map[\"MAP_DEFAULT\"] = 0] = \"MAP_DEFAULT\";\n})(Map || (Map = {}));\n//# sourceMappingURL=flags.js.map","import { Cell as Flags, GameObject as ObjectFlags, Tile as TileFlags, } from './flags';\nimport * as TILE from '../tile';\nimport * as Effect from '../effect';\nclass CellObjects {\n    constructor(cell) {\n        this.cell = cell;\n    }\n    forEach(cb) {\n        let object = this.cell._item;\n        while (object) {\n            cb(object);\n            object = object.next;\n        }\n        object = this.cell._actor;\n        while (object) {\n            cb(object);\n            object = object.next;\n        }\n    }\n    some(cb) {\n        let object = this.cell._item;\n        while (object) {\n            if (cb(object))\n                return true;\n            object = object.next;\n        }\n        object = this.cell._actor;\n        while (object) {\n            if (cb(object))\n                return true;\n            object = object.next;\n        }\n        return false;\n    }\n    reduce(cb, start) {\n        let object = this.cell._item;\n        while (object) {\n            if (start === undefined) {\n                start = object;\n            }\n            else {\n                start = cb(start, object);\n            }\n            object = object.next;\n        }\n        object = this.cell._actor;\n        while (object) {\n            if (start === undefined) {\n                start = object;\n            }\n            else {\n                start = cb(start, object);\n            }\n            object = object.next;\n        }\n        return start;\n    }\n}\nexport class Cell {\n    constructor(groundTile) {\n        this.chokeCount = 0;\n        // gasVolume: number = 0;\n        // liquidVolume: number = 0;\n        this._actor = null;\n        this._item = null;\n        this._objects = new CellObjects(this);\n        this.flags = { cell: 0 };\n        this.tiles = [TILE.tiles.NULL];\n        if (groundTile) {\n            const tile = TILE.get(groundTile);\n            this.setTile(tile);\n        }\n    }\n    copy(other) {\n        Object.assign(this.flags, other.flags);\n        this.chokeCount = other.chokeCount;\n        this.tiles = other.tiles.slice();\n        this._actor = other._actor;\n        this._item = other._item;\n    }\n    hasCellFlag(flag) {\n        return !!(this.flags.cell & flag);\n    }\n    setCellFlag(flag) {\n        this.flags.cell |= flag;\n    }\n    clearCellFlag(flag) {\n        this.flags.cell &= ~flag;\n    }\n    hasObjectFlag(flag) {\n        return (this.tiles.some((t) => t && t.flags.object & flag) ||\n            this._objects.some((o) => !!(o.flags.object & flag)));\n    }\n    hasAllObjectFlags(flags) {\n        return (this.objectFlags() & flags) == flags;\n    }\n    hasTileFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tile & flag);\n    }\n    hasAllTileFlags(flags) {\n        return (this.tileFlags() & flags) == flags;\n    }\n    hasTileMechFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tileMech & flag);\n    }\n    hasAllTileMechFlags(flags) {\n        return (this.tileMechFlags() & flags) == flags;\n    }\n    cellFlags() {\n        return this.flags.cell;\n    }\n    objectFlags() {\n        return (this.tiles.reduce((out, t) => out | (t ? t.flags.object : 0), 0) |\n            this._objects.reduce((out, o) => out | o.flags.object, 0));\n    }\n    tileFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tile : 0), 0);\n    }\n    tileMechFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tileMech : 0), 0);\n    }\n    itemFlags() {\n        return this._objects.reduce((out, o) => out | o.itemFlags(), 0);\n    }\n    actorFlags() {\n        return this._objects.reduce((out, o) => out | o.actorFlags(), 0);\n    }\n    get needsRedraw() {\n        return !!(this.flags.cell & Flags.NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v) {\n            this.flags.cell |= Flags.NEEDS_REDRAW;\n        }\n        else {\n            this.flags.cell &= ~Flags.NEEDS_REDRAW;\n        }\n    }\n    depthPriority(depth) {\n        const tile = this.tiles[depth];\n        return tile ? tile.priority : TILE.tiles.NULL.priority;\n    }\n    highestPriority() {\n        return this.tiles.reduce((out, t) => Math.max(out, t ? t.priority : 0), TILE.tiles.NULL.priority);\n    }\n    depthTile(depth) {\n        return this.tiles[depth] || null;\n    }\n    hasTile(tile) {\n        if (!tile)\n            return this.tiles.some((t) => t);\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n        }\n        return this.tiles.includes(tile);\n    }\n    hasDepthTile(depth) {\n        const t = this.tiles[depth];\n        return !!t && t !== TILE.tiles.NULL;\n    }\n    highestPriorityTile() {\n        return this.tiles.reduce((out, tile) => {\n            if (!tile)\n                return out;\n            if (tile.priority >= out.priority)\n                return tile; // higher depth will get picked with >=\n            return out;\n        }, TILE.tiles.NULL);\n    }\n    get tile() {\n        return this.highestPriorityTile();\n    }\n    eachTile(cb) {\n        this.tiles.forEach((t) => t && cb(t));\n    }\n    tileWithObjectFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.object & flag) || null;\n    }\n    tileWithFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tile & flag) || null;\n    }\n    tileWithMechFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tileMech & flag) || null;\n    }\n    blocksVision() {\n        return (this.tiles.some((t) => t && t.blocksVision()) ||\n            this._objects.some((o) => o.blocksVision()));\n    }\n    blocksPathing() {\n        return (this.tiles.some((t) => t && t.blocksPathing()) ||\n            this._objects.some((o) => o.blocksPathing()));\n    }\n    blocksMove() {\n        return (this.tiles.some((t) => t && t.blocksMove()) ||\n            this._objects.some((o) => o.blocksMove()));\n    }\n    blocksEffects() {\n        return (this.tiles.some((t) => t && t.blocksEffects()) ||\n            this._objects.some((o) => o.blocksEffects()));\n    }\n    blocksLayer(depth) {\n        return this.tiles.some((t) => t &&\n            !!(t.flags.tile & TILE.flags.Tile.T_BLOCKS_OTHER_LAYERS) &&\n            t.depth != depth);\n    }\n    // Tests\n    isEmpty() {\n        return (this.tiles.every((t) => !t || t === TILE.tiles.NULL) &&\n            this._actor == null &&\n            this._item == null);\n    }\n    isPassable() {\n        return !this.blocksMove();\n    }\n    isWall() {\n        return this.hasAllObjectFlags(ObjectFlags.L_WALL_FLAGS);\n    }\n    isStairs() {\n        return this.hasTileFlag(TileFlags.T_HAS_STAIRS);\n    }\n    hasKey() {\n        return false;\n    }\n    // @returns - whether or not the change results in a change to the cell lighting.\n    setTile(tile) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n            if (!tile)\n                return false;\n        }\n        // const current = this.tiles[tile.depth] || TILE.tiles.NULL;\n        // if (current !== tile) {\n        //     this.gasVolume = 0;\n        //     this.liquidVolume = 0;\n        // }\n        // Check priority, etc...\n        this.tiles[tile.depth] = tile;\n        this.needsRedraw = true;\n        // if (volume) {\n        //     if (tile.depth === Depth.GAS) {\n        //         this.gasVolume = volume;\n        //     }\n        //     if (tile.depth === Depth.LIQUID) {\n        //         this.liquidVolume = volume;\n        //     }\n        // }\n        return true;\n    }\n    clear() {\n        this.tiles = [TILE.tiles.NULL];\n        this.needsRedraw = true;\n        this.flags.cell = 0;\n        this.chokeCount = 0;\n        this._actor = null;\n        this._item = null;\n    }\n    clearDepth(depth) {\n        if (depth == 0) {\n            this.tiles[0] = TILE.tiles.NULL;\n            this.needsRedraw = true;\n            return true;\n        }\n        else if (this.tiles[depth] !== null) {\n            this.tiles[depth] = null;\n            this.needsRedraw = true;\n            return true;\n        }\n        return false;\n    }\n    clearDepthsWithFlags(tileFlag, tileMechFlag = 0) {\n        for (let i = 0; i < this.tiles.length; ++i) {\n            const tile = this.tiles[i];\n            if (!tile)\n                continue;\n            if (!tile.hasTileFlag(tileFlag))\n                continue;\n            if (tileMechFlag && !tile.hasTileMechFlag(tileMechFlag))\n                continue;\n            this.clearDepth(i);\n        }\n    }\n    // Lights\n    eachGlowLight(cb) {\n        this.tiles.forEach((tile) => {\n            if (tile && tile.light)\n                cb(tile.light);\n        });\n    }\n    // Effects\n    async activate(event, map, x, y, ctx = {}) {\n        ctx.cell = this;\n        let didSomething = false;\n        if (ctx.depth !== undefined) {\n            const tile = (ctx.tile = this.depthTile(ctx.depth));\n            if (tile && tile.effects) {\n                const ev = tile.effects[event];\n                didSomething = await this._fire(ev, map, x, y, ctx);\n            }\n        }\n        else {\n            // console.log('fire event - %s', event);\n            for (ctx.tile of this.tiles) {\n                if (!ctx.tile || !ctx.tile.effects)\n                    continue;\n                const ev = ctx.tile.effects[event];\n                // console.log(' - ', ev);\n                if (await this._fire(ev, map, x, y, ctx)) {\n                    didSomething = true;\n                    break;\n                }\n                // }\n            }\n        }\n        return didSomething;\n    }\n    async _fire(effect, map, x, y, ctx) {\n        if (typeof effect === 'string') {\n            effect = Effect.effects[effect];\n        }\n        let didSomething = false;\n        if (effect) {\n            // console.log(' - spawn event @%d,%d - %s', x, y, name);\n            didSomething = await Effect.fire(effect, map, x, y, ctx);\n            // cell.debug(\" - spawned\");\n        }\n        return didSomething;\n    }\n    hasEffect(name) {\n        for (let tile of this.tiles) {\n            if (tile && tile.hasEffect(name))\n                return true;\n        }\n        return false;\n    }\n    // // Items\n    hasItem() {\n        return this.hasCellFlag(Flags.HAS_ITEM);\n    }\n    get item() {\n        return this._item;\n    }\n    set item(val) {\n        this._item = val;\n        if (val) {\n            this.setCellFlag(Flags.HAS_ITEM);\n        }\n        else {\n            this.clearCellFlag(Flags.HAS_ITEM);\n        }\n        this.needsRedraw = true;\n    }\n    // // Actors\n    hasActor() {\n        return this.hasCellFlag(Flags.HAS_ACTOR);\n    }\n    hasPlayer() {\n        return this.hasCellFlag(Flags.HAS_PLAYER);\n    }\n    get actor() {\n        return this._actor;\n    }\n    set actor(val) {\n        this._actor = val;\n        if (val) {\n            this.setCellFlag(Flags.HAS_ACTOR);\n        }\n        else {\n            this.clearCellFlag(Flags.HAS_ACTOR);\n        }\n        this.needsRedraw = true;\n    }\n    getDescription() {\n        return this.highestPriorityTile().description;\n    }\n    getFlavor() {\n        return this.highestPriorityTile().flavor;\n    }\n    getName(opts = {}) {\n        return this.highestPriorityTile().getName(opts);\n    }\n    dump() {\n        var _a, _b, _c, _d;\n        if ((_b = (_a = this._actor) === null || _a === void 0 ? void 0 : _a.sprite) === null || _b === void 0 ? void 0 : _b.ch)\n            return this._actor.sprite.ch;\n        if ((_d = (_c = this._item) === null || _c === void 0 ? void 0 : _c.sprite) === null || _d === void 0 ? void 0 : _d.ch)\n            return this._item.sprite.ch;\n        return this.highestPriorityTile().sprite.ch || ' ';\n    }\n}\n//# sourceMappingURL=cell.js.map","import * as Tile from '../tile';\nimport * as Flags from './flags';\nimport * as Utils from '../utils';\nimport { Depth } from '../gameObject/flags';\nexport class MapLayer {\n    constructor(map, name = 'layer') {\n        this.map = map;\n        this.depth = -1;\n        this.properties = {};\n        this.name = name;\n    }\n    copy(_other) { }\n    async tick(_dt) {\n        return false;\n    }\n}\nexport class ActorLayer extends MapLayer {\n    constructor(map, name = 'actor') {\n        super(map, name);\n    }\n    add(x, y, obj, _opts) {\n        const cell = this.map.cell(x, y);\n        const actor = obj;\n        if (actor.forbidsCell(cell))\n            return false;\n        if (!Utils.addToChain(cell, 'actor', obj))\n            return false;\n        if (obj.isPlayer()) {\n            cell.setCellFlag(Flags.Cell.HAS_PLAYER);\n        }\n        obj.x = x;\n        obj.y = y;\n        return true;\n    }\n    remove(obj) {\n        const cell = this.map.cell(obj.x, obj.y);\n        if (!Utils.removeFromChain(cell, 'actor', obj))\n            return false;\n        if (obj.isPlayer()) {\n            cell.clearCellFlag(Flags.Cell.HAS_PLAYER);\n        }\n        return true;\n    }\n    putAppearance(dest, x, y) {\n        const cell = this.map.cell(x, y);\n        if (!cell.actor)\n            return;\n        dest.drawSprite(cell.actor.sprite);\n    }\n}\nexport class ItemLayer extends MapLayer {\n    constructor(map, name = 'item') {\n        super(map, name);\n    }\n    add(x, y, obj, _opts) {\n        const cell = this.map.cell(x, y);\n        const item = obj;\n        if (item.forbidsCell(cell))\n            return false;\n        if (!Utils.addToChain(cell, 'item', obj))\n            return false;\n        obj.x = x;\n        obj.y = y;\n        return true;\n    }\n    remove(obj) {\n        const cell = this.map.cell(obj.x, obj.y);\n        if (!Utils.removeFromChain(cell, 'item', obj))\n            return false;\n        return true;\n    }\n    putAppearance(dest, x, y) {\n        const cell = this.map.cell(x, y);\n        if (!cell.item)\n            return;\n        dest.drawSprite(cell.item.sprite);\n    }\n}\nexport class TileLayer extends MapLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    set(x, y, tile, opts = {}) {\n        const cell = this.map.cell(x, y);\n        const current = cell.depthTile(tile.depth) || Tile.tiles.NULL;\n        if (!opts.superpriority) {\n            // if (current !== tile) {\n            //     this.gasVolume = 0;\n            //     this.liquidVolume = 0;\n            // }\n            // Check priority, etc...\n            if (current.priority > tile.priority) {\n                return false;\n            }\n        }\n        if (cell.blocksLayer(tile.depth))\n            return false;\n        if (opts.blockedByItems && cell.hasItem())\n            return false;\n        if (opts.blockedByActors && cell.hasActor())\n            return false;\n        if (opts.blockedByOtherLayers && cell.highestPriority() > tile.priority)\n            return false;\n        if (tile.depth > Depth.GROUND && tile.groundTile) {\n            const ground = cell.depthTile(Depth.GROUND);\n            if (!ground || ground === Tile.tiles.NULL) {\n                this.set(x, y, Tile.get(tile.groundTile));\n            }\n        }\n        if (!cell.setTile(tile))\n            return false;\n        if (current.light !== tile.light) {\n            this.map.light.glowLightChanged = true;\n        }\n        if (tile.hasTileFlag(Flags.Tile.T_IS_FIRE)) {\n            cell.setCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN);\n        }\n        // if (volume) {\n        //     if (tile.depth === Depth.GAS) {\n        //         this.gasVolume = volume;\n        //     }\n        //     if (tile.depth === Depth.LIQUID) {\n        //         this.liquidVolume = volume;\n        //     }\n        // }\n        return true;\n    }\n    clear(x, y) {\n        const cell = this.map.cell(x, y);\n        return cell.clearDepth(this.depth);\n    }\n    async tick(_dt) {\n        // Run any tick effects\n        // Bookkeeping for fire, pressure plates and key-activated tiles.\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                if (!cell.hasCellFlag(Flags.Cell.HAS_ANY_ACTOR | Flags.Cell.HAS_ITEM) &&\n                    cell.hasCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED)) {\n                    cell.clearCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED);\n                }\n                if (cell.hasEffect('noKey') && !cell.hasKey()) {\n                    await cell.activate('noKey', this.map, x, y);\n                }\n            }\n        }\n        return true;\n    }\n    putAppearance(dest, x, y) {\n        const cell = this.map.cell(x, y);\n        const tile = cell.depthTile(this.depth);\n        if (tile && tile !== Tile.tiles.NULL) {\n            dest.drawSprite(tile.sprite);\n        }\n    }\n}\n//# sourceMappingURL=layers.js.map","import { Cell as CellFlags, Tile as TileFlags } from './flags';\nimport { Mixer } from '../sprite';\nimport * as TILE from '../tile';\nexport class CellMemory {\n    constructor() {\n        this.chokeCount = 0;\n        this.flags = {\n            cell: 0,\n            item: 0,\n            actor: 0,\n            tile: 0,\n            tileMech: 0,\n            object: 0,\n        };\n        this.blocks = {\n            vision: false,\n            effects: false,\n            move: false,\n            pathing: false,\n        };\n        this._tile = TILE.tiles.NULL;\n        this._item = null;\n        this._actor = null;\n        this._hasKey = false;\n        this.snapshot = new Mixer();\n    }\n    clear() {\n        this.snapshot.blackOut();\n        this._item = null;\n        this._actor = null;\n        this._tile = TILE.tiles.NULL;\n        this.flags.cell = 0;\n        this.flags.object = 0;\n        this.flags.tile = 0;\n        this.flags.tileMech = 0;\n        this.blocks.effects = false;\n        this.blocks.move = false;\n        this.blocks.pathing = false;\n        this.blocks.vision = false;\n        this._hasKey = false;\n    }\n    store(cell) {\n        this._item = null;\n        if (cell.hasItem()) {\n            this._item = cell.item;\n        }\n        this._actor = null;\n        if (cell.hasActor()) {\n            this._actor = cell.actor;\n        }\n        this._tile = cell.tile;\n        this.flags.cell = cell.cellFlags();\n        this.flags.tile = cell.tileFlags();\n        this.flags.tileMech = cell.tileMechFlags();\n        this.flags.object = cell.objectFlags();\n        this.flags.item = cell.itemFlags();\n        this.flags.actor = cell.actorFlags();\n        this.blocks.effects = cell.blocksEffects();\n        this.blocks.move = cell.blocksMove();\n        this.blocks.pathing = cell.blocksPathing();\n        this.blocks.vision = cell.blocksVision();\n        this._hasKey = cell.hasKey();\n    }\n    getSnapshot(dest) {\n        dest.copy(this.snapshot);\n    }\n    putSnapshot(src) {\n        this.snapshot.copy(src);\n    }\n    hasCellFlag(flag) {\n        return !!(this.flags.cell & flag);\n    }\n    hasTileFlag(flag) {\n        return !!(this.flags.tile & flag);\n    }\n    hasAllTileFlags(flags) {\n        return (this.flags.tile & flags) == flags;\n    }\n    hasObjectFlag(flag) {\n        return !!(this.flags.object & flag);\n    }\n    hasAllObjectFlags(flags) {\n        return (this.flags.object & flags) == flags;\n    }\n    hasTileMechFlag(flag) {\n        return !!(this.flags.tileMech & flag);\n    }\n    cellFlags() {\n        return this.flags.cell;\n    }\n    objectFlags() {\n        return this.flags.object;\n    }\n    tileFlags() {\n        return this.flags.tile;\n    }\n    tileMechFlags() {\n        return this.flags.tileMech;\n    }\n    itemFlags() {\n        return this.flags.item;\n    }\n    actorFlags() {\n        return this.flags.actor;\n    }\n    blocksVision() {\n        return this.blocks.vision;\n    }\n    blocksPathing() {\n        return this.blocks.pathing;\n    }\n    blocksMove() {\n        return this.blocks.move;\n    }\n    blocksEffects() {\n        return this.blocks.effects;\n    }\n    isWall() {\n        return this.blocksVision() && this.blocksMove();\n    }\n    isStairs() {\n        return this.hasTileFlag(TileFlags.T_HAS_STAIRS);\n    }\n    hasKey() {\n        return this._hasKey;\n    }\n    get tile() {\n        return this._tile;\n    }\n    hasTile(tile) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n        }\n        return this._tile === tile;\n    }\n    hasItem() {\n        return !!this._item;\n    }\n    get item() {\n        return this._item;\n    }\n    hasActor() {\n        return !!this._actor;\n    }\n    hasPlayer() {\n        return !!(this.flags.cell & CellFlags.HAS_PLAYER);\n    }\n    get actor() {\n        return this._actor;\n    }\n    getDescription() {\n        throw new Error('Method not implemented.');\n    }\n    getFlavor() {\n        throw new Error('Method not implemented.');\n    }\n    getName(_opts) {\n        throw new Error('Method not implemented.');\n    }\n}\n//# sourceMappingURL=cellMemory.js.map","import * as Flags from './flags';\nimport { TileLayer } from './layers';\nimport * as Utils from '../utils';\nimport * as Effect from '../effect';\nimport { random } from '../random';\nconst Depth = Flags.Depth;\nconst ObjectFlags = Flags.GameObject;\nconst TileFlags = Flags.Tile;\nconst TileMechFlags = Flags.TileMech;\nconst CellFlags = Flags.Cell;\nexport class FireLayer extends TileLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    async tick(_dt) {\n        // Run any tick effects\n        // Bookkeeping for fire\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                cell.clearCellFlag(CellFlags.CAUGHT_FIRE_THIS_TURN);\n            }\n        }\n        // now spread the fire...\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                if (cell.hasTileFlag(TileFlags.T_IS_FIRE) &&\n                    !(cell.flags.cell & CellFlags.CAUGHT_FIRE_THIS_TURN)) {\n                    await this.exposeToFire(x, y, false);\n                    for (let d = 0; d < 4; ++d) {\n                        const dir = Utils.DIRS[d];\n                        await this.exposeToFire(x + dir[0], y + dir[1]);\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    async exposeToFire(x, y, alwaysIgnite = false) {\n        let ignitionChance = 0, bestExtinguishingPriority = 0, explosiveNeighborCount = 0;\n        let fireIgnited = false, explosivePromotion = false;\n        const cell = this.map.cell(x, y);\n        if (!cell.hasTileFlag(TileFlags.T_IS_FLAMMABLE)) {\n            return false;\n        }\n        // Pick the extinguishing layer with the best priority.\n        cell.eachTile((tile) => {\n            if (tile.hasTileFlag(TileFlags.T_EXTINGUISHES_FIRE) &&\n                tile.priority > bestExtinguishingPriority) {\n                bestExtinguishingPriority = tile.priority;\n            }\n        });\n        // Pick the fire type of the most flammable layer that is either gas or equal-or-better priority than the best extinguishing layer.\n        cell.eachTile((tile) => {\n            if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE &&\n                (tile.depth === Depth.GAS ||\n                    tile.priority >= bestExtinguishingPriority)) {\n                const effect = Effect.from(tile.effects.fire);\n                if (effect && effect.chance > ignitionChance) {\n                    ignitionChance = effect.chance;\n                }\n            }\n        });\n        if (alwaysIgnite ||\n            (ignitionChance && random.chance(ignitionChance, 10000))) {\n            // If it ignites...\n            fireIgnited = true;\n            // Count explosive neighbors.\n            if (cell.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                Utils.eachNeighbor(x, y, (x0, y0) => {\n                    const n = this.map.cell(x0, y0);\n                    if (n.hasObjectFlag(ObjectFlags.L_BLOCKS_GAS) ||\n                        n.hasTileFlag(TileFlags.T_IS_FIRE) ||\n                        n.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                        ++explosiveNeighborCount;\n                    }\n                });\n                if (explosiveNeighborCount >= 8) {\n                    explosivePromotion = true;\n                }\n            }\n            let event = 'fire';\n            if (explosivePromotion && cell.hasEffect('explode')) {\n                event = 'explode';\n            }\n            // cell.eachTile( (tile) => {\n            //     if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE) {\n            //         if (tile.depth === Depth.GAS) {\n            //             cell.gasVolume = 0;\n            //         } else if (tile.depth === Depth.LIQUID) {\n            //             cell.liquidVolume = 0;\n            //         }\n            //     }\n            // });\n            await cell.activate(event, this.map, x, y, {\n                force: true,\n            });\n            cell.needsRedraw = true;\n        }\n        return fireIgnited;\n    }\n}\n//# sourceMappingURL=fireLayer.js.map","import * as Flags from './flags';\nimport { TileLayer } from './layers';\nimport * as Grid from '../grid';\nconst ObjectFlags = Flags.GameObject;\nexport class GasLayer extends TileLayer {\n    constructor(map, name = 'gas') {\n        super(map, name);\n        this.needsUpdate = false;\n        this.volume = Grid.alloc(map.width, map.height, 0);\n    }\n    set(x, y, tile, opts = {}) {\n        if (!opts.volume)\n            return false;\n        const cell = this.map.cell(x, y);\n        if (cell.depthTile(tile.depth) === tile) {\n            this.volume[x][y] += opts.volume;\n            return true;\n        }\n        if (!super.set(x, y, tile, opts)) {\n            return false;\n        }\n        this.volume[x][y] = opts.volume;\n        this.needsUpdate = true;\n        return true;\n    }\n    clear(x, y) {\n        const cell = this.map.cell(x, y);\n        if (cell.clearDepth(this.depth)) {\n            this.volume[x][y] = 0;\n            return true;\n        }\n        return false;\n    }\n    copy(other) {\n        this.volume.copy(other.volume);\n    }\n    async tick(_dt) {\n        if (!this.needsUpdate)\n            return false;\n        this.needsUpdate = false;\n        const startingVolume = this.volume;\n        this.volume = Grid.alloc(this.map.width, this.map.height);\n        // dissipate the gas...\n        this.dissipate(startingVolume);\n        // spread the gas...\n        this.spread(startingVolume);\n        Grid.free(startingVolume);\n        return true;\n    }\n    dissipate(volume) {\n        volume.update((v, x, y) => {\n            if (!v)\n                return 0;\n            const tile = this.map.cell(x, y).depthTile(this.depth);\n            if (tile && tile.dissipate) {\n                let d = Math.max(0.5, (v * tile.dissipate) / 10000); // 1000 = 10%\n                v = Math.max(0, v - d);\n            }\n            if (v) {\n                this.needsUpdate = true;\n            }\n            else {\n                this.clear(x, y);\n            }\n            return v;\n        });\n    }\n    calcOpacity(volume) {\n        return Math.floor(Math.min(volume, 10) * 10);\n    }\n    updateCellVolume(x, y, startingVolume) {\n        let total = 0;\n        let count = 0;\n        let highestVolume = 0;\n        const cell = this.map.cell(x, y);\n        let startingTile = cell.depthTile(this.depth);\n        let highestTile = startingTile;\n        if (cell.hasObjectFlag(ObjectFlags.L_BLOCKS_GAS)) {\n            this.volume[x][y] = 0;\n            if (startingVolume[x][y]) {\n                this.clear(x, y);\n            }\n            return;\n        }\n        for (let i = Math.max(0, x - 1); i < Math.min(x + 2, startingVolume.width); ++i) {\n            for (let j = Math.max(0, y - 1); j < Math.min(y + 2, startingVolume.height); ++j) {\n                const v = startingVolume[i][j];\n                if (!cell.hasObjectFlag(ObjectFlags.L_BLOCKS_GAS)) {\n                    ++count;\n                    if (v > highestVolume) {\n                        highestVolume = v;\n                        highestTile = this.map.cell(i, j).depthTile(this.depth);\n                    }\n                }\n                total += v;\n            }\n        }\n        const v = Math.floor((total * 10) / count) / 10;\n        this.volume[x][y] = v;\n        if (v > 0 && highestTile) {\n            if (!startingTile || startingTile !== highestTile) {\n                cell.setTile(highestTile);\n            }\n        }\n        if (v > 0) {\n            cell.needsRedraw = true;\n        }\n    }\n    spread(startingVolume) {\n        for (let x = 0; x < startingVolume.width; ++x) {\n            for (let y = 0; y < startingVolume.height; ++y) {\n                this.updateCellVolume(x, y, startingVolume);\n            }\n        }\n    }\n    putAppearance(dest, x, y) {\n        const volume = this.volume[x][y];\n        if (!volume)\n            return;\n        const cell = this.map.cell(x, y);\n        const tile = cell.depthTile(this.depth);\n        if (tile) {\n            const opacity = this.calcOpacity(volume);\n            dest.drawSprite(tile.sprite, opacity);\n        }\n    }\n}\n//# sourceMappingURL=gasLayer.js.map","import * as Grid from '../grid';\nimport { LightSystem, } from '../light';\nimport { fl as Fl } from '../flag';\nimport * as Flags from './flags';\nimport { Cell } from './cell';\nimport * as FOV from '../fov';\nimport * as TILE from '../tile';\nimport { TileLayer, ActorLayer, ItemLayer } from './layers';\nimport { Mixer } from '../sprite';\nimport * as Utils from '../utils';\nimport * as Canvas from '../canvas';\nimport { Depth } from '../gameObject/flags';\nimport * as Color from '../color';\nimport { CellMemory } from './cellMemory';\nimport { FireLayer } from './fireLayer';\nimport { GasLayer } from './gasLayer';\nimport * as Effect from '../effect';\nimport { random } from '../random';\nexport class Map {\n    constructor(width, height, opts = {}) {\n        this.width = width;\n        this.height = height;\n        this.flags = { map: 0 };\n        this.layers = [];\n        this.cells = Grid.make(width, height, () => new Cell());\n        this.memory = Grid.make(width, height, () => new CellMemory());\n        this.light = new LightSystem(this, opts);\n        this.fov = new FOV.FovSystem(this, opts);\n        this.properties = {};\n        this.initLayers();\n    }\n    cellInfo(x, y, useMemory = false) {\n        if (useMemory)\n            return this.memory[x][y];\n        return this.cell(x, y);\n    }\n    // LAYERS\n    initLayers() {\n        this.addLayer(Depth.GROUND, new TileLayer(this, 'ground'));\n        this.addLayer(Depth.SURFACE, new FireLayer(this, 'surface'));\n        this.addLayer(Depth.GAS, new GasLayer(this, 'gas'));\n        this.addLayer(Depth.ITEM, new ItemLayer(this, 'item'));\n        this.addLayer(Depth.ACTOR, new ActorLayer(this, 'actor'));\n    }\n    addLayer(depth, layer) {\n        if (typeof depth !== 'number') {\n            depth = Depth[depth];\n        }\n        layer.depth = depth;\n        this.layers[depth] = layer;\n    }\n    removeLayer(depth) {\n        if (typeof depth !== 'number') {\n            depth = Depth[depth];\n        }\n        if (!depth)\n            throw new Error('Cannot remove layer with depth=0.');\n        delete this.layers[depth];\n    }\n    getLayer(depth) {\n        if (typeof depth !== 'number') {\n            depth = Depth[depth];\n        }\n        return this.layers[depth] || null;\n    }\n    hasXY(x, y) {\n        return this.cells.hasXY(x, y);\n    }\n    isBoundaryXY(x, y) {\n        return x == 0 || y == 0 || x == this.width - 1 || y == this.height - 1;\n    }\n    cell(x, y) {\n        return this.cells[x][y];\n    }\n    get(x, y) {\n        return this.cells.get(x, y);\n    }\n    eachCell(cb) {\n        this.cells.forEach((cell, x, y) => cb(cell, x, y, this));\n    }\n    // DRAW\n    drawInto(dest, opts = {}) {\n        const buffer = dest instanceof Canvas.Canvas ? dest.buffer : dest;\n        if (typeof opts === 'boolean')\n            opts = { force: opts };\n        const mixer = new Mixer();\n        for (let x = 0; x < buffer.width; ++x) {\n            for (let y = 0; y < buffer.height; ++y) {\n                this.getAppearanceAt(x, y, mixer);\n                buffer.drawSprite(x, y, mixer);\n            }\n        }\n    }\n    // items\n    itemAt(x, y) {\n        return this.cell(x, y).item;\n    }\n    eachItem(cb) {\n        this.cells.forEach((cell) => {\n            Utils.eachChain(cell.item, cb);\n        });\n    }\n    addItem(x, y, item) {\n        const layer = this.layers[item.depth];\n        return layer.add(x, y, item);\n    }\n    removeItem(item) {\n        const layer = this.layers[item.depth];\n        return layer.remove(item);\n    }\n    moveItem(item, x, y) {\n        const layer = this.layers[item.depth];\n        if (!layer.remove(item))\n            return false;\n        return layer.add(x, y, item);\n    }\n    // Actors\n    hasPlayer(x, y) {\n        return this.cell(x, y).hasPlayer();\n    }\n    actorAt(x, y) {\n        return this.cell(x, y).actor;\n    }\n    eachActor(cb) {\n        this.cells.forEach((cell) => {\n            Utils.eachChain(cell.actor, cb);\n        });\n    }\n    addActor(x, y, item) {\n        const layer = this.layers[item.depth];\n        return layer.add(x, y, item);\n    }\n    removeActor(item) {\n        const layer = this.layers[item.depth];\n        return layer.remove(item);\n    }\n    moveActor(item, x, y) {\n        const layer = this.layers[item.depth];\n        if (!layer.remove(item))\n            return false;\n        return layer.add(x, y, item);\n    }\n    // Information\n    isVisible(x, y) {\n        return this.fov.isAnyKindOfVisible(x, y);\n    }\n    count(cb) {\n        return this.cells.count((cell, x, y) => cb(cell, x, y, this));\n    }\n    dump(fmt, log = console.log) {\n        this.cells.dump(fmt || ((c) => c.dump()), log);\n    }\n    // flags\n    hasMapFlag(flag) {\n        return !!(this.flags.map & flag);\n    }\n    setMapFlag(flag) {\n        this.flags.map |= flag;\n    }\n    clearMapFlag(flag) {\n        this.flags.map &= ~flag;\n    }\n    setCellFlag(x, y, flag) {\n        this.cell(x, y).setCellFlag(flag);\n    }\n    clearCellFlag(x, y, flag) {\n        this.cell(x, y).clearCellFlag(flag);\n    }\n    // Skips all the logic checks and just forces a clean cell with the given tile\n    fill(tile, boundary) {\n        tile = TILE.get(tile);\n        boundary = TILE.get(boundary || tile);\n        let i, j;\n        for (i = 0; i < this.width; ++i) {\n            for (j = 0; j < this.height; ++j) {\n                const cell = this.cell(i, j);\n                cell.clear();\n                cell.setTile(this.isBoundaryXY(i, j) ? boundary : tile);\n            }\n        }\n    }\n    hasTile(x, y, tile, useMemory = false) {\n        return this.cellInfo(x, y, useMemory).hasTile(tile);\n    }\n    setTile(x, y, tile, opts) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n            if (!tile)\n                return false;\n        }\n        if (opts === true) {\n            opts = { superpriority: true };\n        }\n        const depth = tile.depth || 0;\n        const layer = this.layers[depth] || this.layers[0];\n        if (!(layer instanceof TileLayer))\n            return false;\n        return layer.set(x, y, tile, opts);\n    }\n    async tick(dt) {\n        let didSomething = await this.fireAll('tick');\n        for (let layer of this.layers) {\n            if (layer && (await layer.tick(dt))) {\n                didSomething = true;\n            }\n        }\n        return didSomething;\n    }\n    copy(src) {\n        if (this.constructor !== src.constructor)\n            throw new Error('Maps must be same type to copy.');\n        if (this.width !== src.width || this.height !== src.height)\n            throw new Error('Maps must be same size to copy');\n        this.cells.forEach((c, x, y) => {\n            c.copy(src.cells[x][y]);\n        });\n        this.layers.forEach((l, depth) => {\n            l.copy(src.layers[depth]);\n        });\n        this.flags.map = src.flags.map;\n        this.light.setAmbient(src.light.getAmbient());\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        return other;\n    }\n    async fire(event, x, y, ctx) {\n        const cell = this.cell(x, y);\n        return cell.activate(event, this, x, y, ctx);\n    }\n    async fireAll(event, ctx = {}) {\n        let didSomething = false;\n        const willFire = Grid.alloc(this.width, this.height);\n        // Figure out which tiles will fire - before we change everything...\n        this.cells.forEach((cell, x, y) => {\n            cell.clearCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN | Flags.Cell.EVENT_PROTECTED);\n            cell.eachTile((tile) => {\n                const ev = tile.effects[event];\n                if (!ev)\n                    return;\n                const effect = Effect.from(ev);\n                if (!effect)\n                    return;\n                let promoteChance = 0;\n                // < 0 means try to fire my neighbors...\n                if (effect.chance < 0) {\n                    promoteChance = 0;\n                    Utils.eachNeighbor(x, y, (i, j) => {\n                        const n = this.cell(i, j);\n                        if (!n.hasObjectFlag(Flags.GameObject.L_BLOCKS_EFFECTS) &&\n                            n.depthTile(tile.depth) !=\n                                cell.depthTile(tile.depth) &&\n                            !n.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN)) {\n                            // TODO - Should this break from the loop after doing this once or keep going?\n                            promoteChance += -1 * effect.chance;\n                        }\n                    }, true);\n                }\n                else {\n                    promoteChance = effect.chance || 100 * 100; // 100%\n                }\n                if (!cell.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN) &&\n                    random.chance(promoteChance, 10000)) {\n                    willFire[x][y] |= Fl(tile.depth);\n                    // cell.flags.cellMech |= Cell.MechFlags.EVENT_FIRED_THIS_TURN;\n                }\n            });\n        });\n        // Then activate them - so that we don't activate the next generation as part of the forEach\n        ctx.force = true;\n        await willFire.forEachAsync(async (w, x, y) => {\n            if (!w)\n                return;\n            const cell = this.cell(x, y);\n            if (cell.hasCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN))\n                return;\n            for (let depth = 0; depth <= Flags.Depth.GAS; ++depth) {\n                if (w & Fl(depth)) {\n                    await cell.activate(event, this, x, y, {\n                        force: true,\n                        depth,\n                    });\n                }\n            }\n        });\n        Grid.free(willFire);\n        return didSomething;\n    }\n    getAppearanceAt(x, y, dest) {\n        dest.blackOut();\n        const cell = this.cell(x, y);\n        const isVisible = this.fov.isAnyKindOfVisible(x, y);\n        if (cell.needsRedraw && isVisible) {\n            this.layers.forEach((layer) => layer.putAppearance(dest, x, y));\n            if (dest.dances) {\n                cell.setCellFlag(Flags.Cell.COLORS_DANCE);\n            }\n            else {\n                cell.clearCellFlag(Flags.Cell.COLORS_DANCE);\n            }\n            dest.bake();\n            this.memory[x][y].putSnapshot(dest);\n            cell.needsRedraw = false;\n        }\n        else {\n            this.memory[x][y].getSnapshot(dest);\n        }\n        if (isVisible) {\n            const light = this.light.getLight(x, y);\n            dest.multiply(light);\n        }\n        else if (this.fov.isRevealed(x, y)) {\n            dest.scale(50);\n        }\n        else {\n            dest.blackOut();\n        }\n        if (cell.hasObjectFlag(Flags.GameObject.L_VISUALLY_DISTINCT)) {\n            Color.separate(dest.fg, dest.bg);\n        }\n    }\n    // // LightSystemSite\n    hasActor(x, y) {\n        return this.cell(x, y).hasActor();\n    }\n    eachGlowLight(cb) {\n        this.cells.forEach((cell, x, y) => {\n            cell.eachGlowLight((light) => cb(x, y, light));\n        });\n    }\n    eachDynamicLight(_cb) { }\n    // FOV System Site\n    eachViewport(_cb) {\n        // TODO !!\n    }\n    lightingChanged() {\n        return this.light.changed;\n    }\n    hasVisibleLight(x, y) {\n        return !this.light.isDark(x, y);\n    }\n    blocksVision(x, y) {\n        return this.cell(x, y).blocksVision();\n    }\n    onCellRevealed(_x, _y) {\n        // if (DATA.automationActive) {\n        // if (cell.item) {\n        //     const theItem: GW.types.ItemType = cell.item;\n        //     if (\n        //         theItem.hasObjectFlag(ObjectFlags.L_INTERRUPT_WHEN_SEEN)\n        //     ) {\n        //         GW.message.add(\n        //             '§you§ §see§ ΩitemMessageColorΩ§item§∆.',\n        //             {\n        //                 item: theItem,\n        //                 actor: DATA.player,\n        //             }\n        //         );\n        //     }\n        // }\n        // if (\n        //     !(this.fov.isMagicMapped(x, y)) &&\n        //     this.site.hasObjectFlag(\n        //         x,\n        //         y,\n        //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n        //     )\n        // ) {\n        //     const tile = cell.tileWithLayerFlag(\n        //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n        //     );\n        //     if (tile) {\n        //         GW.message.add(\n        //             '§you§ §see§ ΩbackgroundMessageColorΩ§item§∆.',\n        //             {\n        //                 actor: DATA.player,\n        //                 item: tile.name,\n        //             }\n        //         );\n        //     }\n        // }\n    }\n    redrawCell(x, y, clearMemory) {\n        if (clearMemory) {\n            this.clearMemory(x, y);\n        }\n        this.cells[x][y].needsRedraw = true;\n    }\n    clearMemory(x, y) {\n        this.memory[x][y].clear();\n    }\n    storeMemory(x, y) {\n        const cell = this.cell(x, y);\n        this.memory[x][y].store(cell);\n    }\n}\nexport function make(w, h, opts = {}, boundary) {\n    if (typeof opts === 'string') {\n        opts = { tile: opts };\n    }\n    if (boundary) {\n        opts.boundary = boundary;\n    }\n    if (opts.tile === true) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === true) {\n        opts.boundary = 'WALL';\n    }\n    const map = new Map(w, h, opts);\n    if (opts.tile) {\n        map.fill(opts.tile, opts.boundary);\n    }\n    map.light.update();\n    // if (!DATA.map) {\n    //     DATA.map = map;\n    // }\n    return map;\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && typeof value[0] === 'string';\n}\nexport function from(prefab, charToTile, opts = {}) {\n    let height = 0;\n    let width = 0;\n    let map;\n    if (isString(prefab)) {\n        prefab = prefab.split('\\n');\n    }\n    if (isStringArray(prefab)) {\n        height = prefab.length;\n        width = prefab.reduce((len, line) => Math.max(len, line.length), 0);\n        map = make(width, height, opts);\n        prefab.forEach((line, y) => {\n            for (let x = 0; x < width; ++x) {\n                const ch = line[x] || '.';\n                const tile = charToTile[ch] || 'FLOOR';\n                map.setTile(x, y, tile);\n            }\n        });\n    }\n    else {\n        height = prefab.height;\n        width = prefab.width;\n        map = make(width, height, opts);\n        prefab.forEach((v, x, y) => {\n            const tile = charToTile[v] || 'FLOOR';\n            map.setTile(x, y, tile);\n        });\n    }\n    map.light.update();\n    return map;\n}\n//# sourceMappingURL=map.js.map","import * as Grid from '../grid';\nimport * as Utils from '../utils';\nimport { GameObject as ObjectFlags } from '../gameObject/flags';\nimport { Cell as CellFlags } from './flags';\nexport function analyze(map, updateChokeCounts = true) {\n    updateLoopiness(map);\n    updateChokepoints(map, updateChokeCounts);\n}\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n// TODO - Move to Map?\nexport function updateChokepoints(map, updateCounts) {\n    const passMap = Grid.alloc(map.width, map.height);\n    const grid = Grid.alloc(map.width, map.height);\n    for (let i = 0; i < map.width; i++) {\n        for (let j = 0; j < map.height; j++) {\n            const cell = map.cell(i, j);\n            if ((cell.blocksPathing() || cell.blocksMove()) &&\n                !cell.hasObjectFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n                // cell.flags &= ~CellFlags.IS_IN_LOOP;\n                passMap[i][j] = 0;\n            }\n            else {\n                // cell.flags |= CellFlags.IS_IN_LOOP;\n                passMap[i][j] = 1;\n            }\n        }\n    }\n    let passableArcCount;\n    // done finding loops; now flag chokepoints\n    for (let i = 1; i < passMap.width - 1; i++) {\n        for (let j = 1; j < passMap.height - 1; j++) {\n            map.cell(i, j).flags.cell &= ~CellFlags.IS_CHOKEPOINT;\n            if (passMap[i][j] &&\n                !(map.cell(i, j).flags.cell & CellFlags.IS_IN_LOOP)) {\n                passableArcCount = 0;\n                for (let dir = 0; dir < 8; dir++) {\n                    const oldX = i + Utils.CLOCK_DIRS[(dir + 7) % 8][0];\n                    const oldY = j + Utils.CLOCK_DIRS[(dir + 7) % 8][1];\n                    const newX = i + Utils.CLOCK_DIRS[dir][0];\n                    const newY = j + Utils.CLOCK_DIRS[dir][1];\n                    if ((map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                        passMap[newX][newY]) !=\n                        (map.hasXY(oldX, oldY) && // RUT.Map.makeValidXy(map, oldXy) &&\n                            passMap[oldX][oldY])) {\n                        if (++passableArcCount > 2) {\n                            if ((!passMap[i - 1][j] && !passMap[i + 1][j]) ||\n                                (!passMap[i][j - 1] && !passMap[i][j + 1])) {\n                                map.cell(i, j).flags.cell |=\n                                    CellFlags.IS_CHOKEPOINT;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (updateCounts) {\n        // Done finding chokepoints; now create a chokepoint map.\n        // The chokepoint map is a number for each passable tile. If the tile is a chokepoint,\n        // then the number indicates the number of tiles that would be rendered unreachable if the\n        // chokepoint were blocked. If the tile is not a chokepoint, then the number indicates\n        // the number of tiles that would be rendered unreachable if the nearest exit chokepoint\n        // were blocked.\n        // The cost of all of this is one depth-first flood-fill per open point that is adjacent to a chokepoint.\n        // Start by setting the chokepoint values really high, and roping off room machines.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                map.cell(i, j).chokeCount = 30000;\n                if (map.cell(i, j).flags.cell & CellFlags.IS_IN_ROOM_MACHINE) {\n                    passMap[i][j] = 0;\n                }\n            }\n        }\n        // Scan through and find a chokepoint next to an open point.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                const cell = map.cell(i, j);\n                if (passMap[i][j] &&\n                    cell.flags.cell & CellFlags.IS_CHOKEPOINT) {\n                    for (let dir = 0; dir < 4; dir++) {\n                        const newX = i + Utils.DIRS[dir][0];\n                        const newY = j + Utils.DIRS[dir][1];\n                        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                            passMap[newX][newY] &&\n                            !(map.cell(newX, newY).flags.cell &\n                                CellFlags.IS_CHOKEPOINT)) {\n                            // OK, (newX, newY) is an open point and (i, j) is a chokepoint.\n                            // Pretend (i, j) is blocked by changing passMap, and run a flood-fill cell count starting on (newX, newY).\n                            // Keep track of the flooded region in grid[][].\n                            grid.fill(0);\n                            passMap[i][j] = 0;\n                            let cellCount = floodFillCount(map, grid, passMap, newX, newY);\n                            passMap[i][j] = 1;\n                            // CellCount is the size of the region that would be obstructed if the chokepoint were blocked.\n                            // CellCounts less than 4 are not useful, so we skip those cases.\n                            if (cellCount >= 4) {\n                                // Now, on the chokemap, all of those flooded cells should take the lesser of their current value or this resultant number.\n                                for (let i2 = 0; i2 < grid.width; i2++) {\n                                    for (let j2 = 0; j2 < grid.height; j2++) {\n                                        if (grid[i2][j2] &&\n                                            cellCount <\n                                                map.cell(i2, j2).chokeCount) {\n                                            map.cell(i2, j2).chokeCount = cellCount;\n                                            map.cell(i2, j2).flags.cell &= ~CellFlags.IS_GATE_SITE;\n                                        }\n                                    }\n                                }\n                                // The chokepoint itself should also take the lesser of its current value or the flood count.\n                                if (cellCount < cell.chokeCount) {\n                                    cell.chokeCount = cellCount;\n                                    cell.flags.cell |= CellFlags.IS_GATE_SITE;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    Grid.free(passMap);\n    Grid.free(grid);\n}\n// Assumes it is called with respect to a passable (startX, startY), and that the same is not already included in results.\n// Returns 10000 if the area included an area machine.\nexport function floodFillCount(map, results, passMap, startX, startY) {\n    let count = passMap[startX][startY] == 2 ? 5000 : 1;\n    if (map.cell(startX, startY).flags.cell & CellFlags.IS_IN_AREA_MACHINE) {\n        count = 10000;\n    }\n    results[startX][startY] = 1;\n    for (let dir = 0; dir < 4; dir++) {\n        const newX = startX + Utils.DIRS[dir][0];\n        const newY = startY + Utils.DIRS[dir][1];\n        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n            passMap[newX][newY] &&\n            !results[newX][newY]) {\n            count += floodFillCount(map, results, passMap, newX, newY);\n        }\n    }\n    return Math.min(count, 10000);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n// TODO = Move loopiness to Map\nexport function updateLoopiness(map) {\n    map.eachCell(resetLoopiness);\n    map.eachCell(checkLoopiness);\n    cleanLoopiness(map);\n}\nexport function resetLoopiness(cell, _x, _y, _map) {\n    if ((cell.blocksPathing() || cell.blocksMove()) &&\n        !cell.hasObjectFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n        cell.flags.cell &= ~CellFlags.IS_IN_LOOP;\n        // passMap[i][j] = false;\n    }\n    else {\n        cell.flags.cell |= CellFlags.IS_IN_LOOP;\n        // passMap[i][j] = true;\n    }\n}\nexport function checkLoopiness(cell, x, y, map) {\n    let inString;\n    let newX, newY, dir, sdir;\n    let numStrings, maxStringLength, currentStringLength;\n    if (!cell || !(cell.flags.cell & CellFlags.IS_IN_LOOP)) {\n        return false;\n    }\n    // find an unloopy neighbor to start on\n    for (sdir = 0; sdir < 8; sdir++) {\n        newX = x + Utils.CLOCK_DIRS[sdir][0];\n        newY = y + Utils.CLOCK_DIRS[sdir][1];\n        if (!map.hasXY(newX, newY))\n            continue;\n        const cell = map.get(newX, newY);\n        if (!cell || !(cell.flags.cell & CellFlags.IS_IN_LOOP)) {\n            break;\n        }\n    }\n    if (sdir == 8) {\n        // no unloopy neighbors\n        return false; // leave cell loopy\n    }\n    // starting on this unloopy neighbor,\n    // work clockwise and count up:\n    // (a) the number of strings of loopy neighbors, and\n    // (b) the length of the longest such string.\n    numStrings = maxStringLength = currentStringLength = 0;\n    inString = false;\n    for (dir = sdir; dir < sdir + 8; dir++) {\n        newX = x + Utils.CLOCK_DIRS[dir % 8][0];\n        newY = y + Utils.CLOCK_DIRS[dir % 8][1];\n        if (!map.hasXY(newX, newY))\n            continue;\n        const newCell = map.get(newX, newY);\n        if (newCell && newCell.flags.cell & CellFlags.IS_IN_LOOP) {\n            currentStringLength++;\n            if (!inString) {\n                if (numStrings > 0) {\n                    return false; // more than one string here; leave loopy\n                }\n                numStrings++;\n                inString = true;\n            }\n        }\n        else if (inString) {\n            if (currentStringLength > maxStringLength) {\n                maxStringLength = currentStringLength;\n            }\n            currentStringLength = 0;\n            inString = false;\n        }\n    }\n    if (inString && currentStringLength > maxStringLength) {\n        maxStringLength = currentStringLength;\n    }\n    if (numStrings == 1 && maxStringLength <= 4) {\n        cell.flags.cell &= ~CellFlags.IS_IN_LOOP;\n        for (dir = 0; dir < 8; dir++) {\n            const newX = x + Utils.CLOCK_DIRS[dir][0];\n            const newY = y + Utils.CLOCK_DIRS[dir][1];\n            if (map.hasXY(newX, newY)) {\n                const newCell = map.cell(newX, newY);\n                checkLoopiness(newCell, newX, newY, map);\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function fillInnerLoopGrid(map, grid) {\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            const cell = map.cell(x, y);\n            if (cell.flags.cell & CellFlags.IS_IN_LOOP) {\n                grid[x][y] = 1;\n            }\n            else if (x > 0 && y > 0) {\n                const up = map.cell(x, y - 1);\n                const left = map.cell(x - 1, y);\n                if (up.flags.cell & CellFlags.IS_IN_LOOP &&\n                    left.flags.cell & CellFlags.IS_IN_LOOP) {\n                    grid[x][y] = 1;\n                }\n            }\n        }\n    }\n}\nexport function cleanLoopiness(map) {\n    // remove extraneous loop markings\n    const grid = Grid.alloc(map.width, map.height);\n    fillInnerLoopGrid(map, grid);\n    // const xy = { x: 0, y: 0 };\n    let designationSurvives;\n    for (let i = 0; i < grid.width; i++) {\n        for (let j = 0; j < grid.height; j++) {\n            const cell = map.cell(i, j);\n            if (cell.flags.cell & CellFlags.IS_IN_LOOP) {\n                designationSurvives = false;\n                for (let dir = 0; dir < 8; dir++) {\n                    let newX = i + Utils.CLOCK_DIRS[dir][0];\n                    let newY = j + Utils.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, xy, newX, newY) &&\n                        !grid[newX][newY] &&\n                        !(map.cell(newX, newY).flags.cell &\n                            CellFlags.IS_IN_LOOP)) {\n                        designationSurvives = true;\n                        break;\n                    }\n                }\n                if (!designationSurvives) {\n                    grid[i][j] = 1;\n                    map.cell(i, j).flags.cell &= ~CellFlags.IS_IN_LOOP;\n                }\n            }\n        }\n    }\n    Grid.free(grid);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n//# sourceMappingURL=analyze.js.map","import * as Flags from './flags';\nimport * as Tile from '../tile';\nimport * as Entity from '../gameObject';\nimport * as Effect from '../effect';\nimport * as Flag from '../flag';\nimport * as Grid from '../grid';\nimport * as Utils from '../utils';\nimport { random } from '../random';\nimport { Actor } from '../actor';\nimport { Item } from '../item';\nexport class SpawnEffect {\n    make(src, dest) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (!src.tile)\n            return true; // no error\n        let config = src.tile;\n        if (typeof config === 'string') {\n            const parts = config.split(/[,|]/).map((p) => p.trim());\n            config = {\n                tile: parts[0],\n                grow: Number.parseInt(parts[1] || '0'),\n                decrement: Number.parseInt(parts[2] || '0'),\n            };\n        }\n        const info = {\n            grow: (_b = (_a = config.grow) !== null && _a !== void 0 ? _a : config.spread) !== null && _b !== void 0 ? _b : 0,\n            decrement: (_c = config.decrement) !== null && _c !== void 0 ? _c : 0,\n            flags: Flag.from(Effect.Flags, config.flags),\n            volume: (_d = config.volume) !== null && _d !== void 0 ? _d : 0,\n            next: (_e = config.next) !== null && _e !== void 0 ? _e : null,\n        };\n        const id = (_f = config.tile) !== null && _f !== void 0 ? _f : config.id;\n        if (typeof id === 'string') {\n            info.tile = id;\n        }\n        else {\n            throw new Error('Invalid tile spawn config: ' + id);\n        }\n        if (!info.tile) {\n            throw new Error('Must have tile.');\n        }\n        const match = (_g = config.matchTile) !== null && _g !== void 0 ? _g : config.match;\n        if (typeof match === 'string') {\n            info.matchTile = match;\n        }\n        else if (match) {\n            throw new Error('Invalid tile spawn match tile: ' + config.matchTile);\n        }\n        dest.tile = info;\n        return true;\n    }\n    async fire(effect, map, x, y, ctx) {\n        let didSomething = false;\n        const spawned = this.fireSync(effect, map, x, y, ctx);\n        if (spawned) {\n            didSomething = true;\n            // await spawnMap.forEachAsync( (v, x, y) => {\n            //     if (!v) return;\n            //     await map.applyInstantEffects(x, y);\n            // });\n            // if (applyEffects) {\n            // if (PLAYER.xLoc == i && PLAYER.yLoc == j && !PLAYER.status.levitating && refresh) {\n            // \tflavorMessage(tileFlavor(PLAYER.xLoc, PLAYER.yLoc));\n            // }\n            // if (cell.actor || cell.item) {\n            // \tfor(let t of cell.tiles()) {\n            // \t\tawait t.applyInstantEffects(map, i, j, cell);\n            // \t\tif (Data.gameHasEnded) {\n            // \t\t\treturn true;\n            // \t\t}\n            // \t}\n            // }\n            // if (tile.flags & TileFlags.T_IS_FIRE) {\n            // \tif (cell.flags & CellFlags.HAS_ITEM) {\n            // \t\ttheItem = map.itemAt(i, j);\n            // \t\tif (theItem.flags & Flags.Item.ITEM_FLAMMABLE) {\n            // \t\t\tawait burnItem(theItem);\n            // \t\t}\n            // \t}\n            // }\n            // }\n        }\n        // Grid.free(spawnMap);\n        return didSomething;\n    }\n    fireSync(effect, map, x, y, ctx) {\n        if (!effect.tile)\n            return false; // did nothing\n        const id = effect.tile.tile;\n        const tile = Tile.tiles[id] || null;\n        if (!tile) {\n            throw new Error('Failed to find tile for effect: ' + id);\n        }\n        const abortIfBlocking = !!(effect.flags & Effect.Flags.E_ABORT_IF_BLOCKS_MAP);\n        const isBlocking = !!(abortIfBlocking &&\n            !(effect.flags & Effect.Flags.E_PERMIT_BLOCKING) &&\n            (tile.blocksPathing() ||\n                effect.flags & Effect.Flags.E_TREAT_AS_BLOCKING));\n        let didSomething = false;\n        didSomething = computeSpawnMap(effect, map, x, y, ctx);\n        if (!didSomething) {\n            return false;\n        }\n        if (abortIfBlocking &&\n            isBlocking &&\n            this.mapDisruptedBy(map, effect.grid)) {\n            // Grid.free(spawnMap);\n            return false;\n        }\n        if (effect.flags & Effect.Flags.E_EVACUATE_CREATURES) {\n            // first, evacuate creatures, so that they do not re-trigger the tile.\n            if (evacuateCreatures(map, ctx.grid)) {\n                didSomething = true;\n            }\n        }\n        if (effect.flags & Effect.Flags.E_EVACUATE_ITEMS) {\n            // first, evacuate items, so that they do not re-trigger the tile.\n            if (evacuateItems(map, ctx.grid)) {\n                didSomething = true;\n            }\n        }\n        if (effect.flags & Effect.Flags.E_CLEAR_CELL) {\n            // first, clear other tiles (not base/ground)\n            if (clearCells(map, ctx.grid, effect.flags)) {\n                didSomething = true;\n            }\n        }\n        const spawned = spawnTiles(effect.flags, ctx.grid, map, tile, effect.tile.volume);\n        return spawned;\n    }\n    mapDisruptedBy(map, blockingGrid, blockingToMapX = 0, blockingToMapY = 0) {\n        const walkableGrid = Grid.alloc(map.width, map.height);\n        let disrupts = false;\n        // Get all walkable locations after lake added\n        Utils.forRect(map.width, map.height, (i, j) => {\n            const lakeX = i + blockingToMapX;\n            const lakeY = j + blockingToMapY;\n            if (blockingGrid.get(lakeX, lakeY)) {\n                if (map.cellInfo(i, j).isStairs()) {\n                    disrupts = true;\n                }\n            }\n            else if (!map.cellInfo(i, j).blocksMove()) {\n                walkableGrid[i][j] = 1;\n            }\n        });\n        let first = true;\n        for (let i = 0; i < walkableGrid.width && !disrupts; ++i) {\n            for (let j = 0; j < walkableGrid.height && !disrupts; ++j) {\n                if (walkableGrid[i][j] == 1) {\n                    if (first) {\n                        walkableGrid.floodFill(i, j, 1, 2);\n                        first = false;\n                    }\n                    else {\n                        disrupts = true;\n                    }\n                }\n            }\n        }\n        // console.log('WALKABLE GRID');\n        // walkableGrid.dump();\n        Grid.free(walkableGrid);\n        return disrupts;\n    }\n}\nEffect.installType('tile', new SpawnEffect());\n// tick\n// Spawn\nexport function spawnTiles(flags, spawnMap, map, tile, volume = 0) {\n    let i, j;\n    let accomplishedSomething;\n    accomplishedSomething = false;\n    const blockedByOtherLayers = !!(flags & Effect.Flags.E_BLOCKED_BY_OTHER_LAYERS);\n    const superpriority = !!(flags & Effect.Flags.E_SUPERPRIORITY);\n    const blockedByActors = !!(flags & Effect.Flags.E_BLOCKED_BY_ACTORS);\n    const blockedByItems = !!(flags & Effect.Flags.E_BLOCKED_BY_ITEMS);\n    // const applyEffects = ctx.refreshCell;\n    volume = volume || 0; // (tile ? tile.volume : 0);\n    for (i = 0; i < spawnMap.width; i++) {\n        for (j = 0; j < spawnMap.height; j++) {\n            if (!spawnMap[i][j])\n                continue; // If it's not flagged for building in the spawn map,\n            // const isRoot = spawnMap[i][j] === 1;\n            spawnMap[i][j] = 0; // so that the spawnmap reflects what actually got built\n            const cell = map.cell(i, j);\n            if (cell.hasTile(tile)) {\n                // If the new cell already contains the fill terrain,\n                // if (tile.depth == Entity.flags.Depth.GAS) {\n                //     spawnMap[i][j] = 1;\n                //     cell.gasVolume += volume;\n                // } else if (tile.depth == Entity.flags.Depth.LIQUID) {\n                //     spawnMap[i][j] = 1;\n                //     cell.liquidVolume += volume;\n                // }\n            }\n            else if (map.setTile(i, j, tile, {\n                volume,\n                superpriority,\n                blockedByOtherLayers,\n                blockedByActors,\n                blockedByItems,\n            })) {\n                // if the fill won't violate the priority of the most important terrain in this cell:\n                spawnMap[i][j] = 1; // so that the spawnmap reflects what actually got built\n                // map.redrawCell(cell);\n                // if (volume && cell.gas) {\n                //     cell.volume += (feat.volume || 0);\n                // }\n                cell.flags.cell |= Flags.Cell.EVENT_FIRED_THIS_TURN;\n                if (flags & Effect.Flags.E_PROTECTED) {\n                    cell.flags.cell |= Flags.Cell.EVENT_PROTECTED;\n                }\n                accomplishedSomething = true;\n                // debug('- tile', i, j, 'tile=', tile.id);\n            }\n        }\n    }\n    if (accomplishedSomething) {\n        map.setMapFlag(Flags.Map.MAP_CHANGED);\n    }\n    return accomplishedSomething;\n}\n// Spread\nfunction cellIsOk(effect, map, x, y, isStart) {\n    if (!map.hasXY(x, y))\n        return false;\n    const cell = map.cell(x, y);\n    if (cell.hasCellFlag(Flags.Cell.EVENT_PROTECTED))\n        return false;\n    if (cell.blocksEffects() && !effect.tile.matchTile && !isStart) {\n        return false;\n    }\n    if (effect.flags & Effect.Flags.E_BUILD_IN_WALLS) {\n        if (!map.cellInfo(x, y).isWall())\n            return false;\n    }\n    else if (effect.flags & Effect.Flags.E_MUST_TOUCH_WALLS) {\n        let ok = false;\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (map.cellInfo(i, j).isWall()) {\n                ok = true;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    else if (effect.flags & Effect.Flags.E_NO_TOUCH_WALLS) {\n        let ok = true;\n        if (map.cellInfo(x, y).isWall())\n            return false; // or on wall\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (map.cellInfo(i, j).isWall()) {\n                ok = false;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    // if (ctx.bounds && !ctx.bounds.containsXY(x, y)) return false;\n    if (effect.tile.matchTile &&\n        !isStart &&\n        !cell.hasTile(effect.tile.matchTile)) {\n        return false;\n    }\n    return true;\n}\nexport function computeSpawnMap(effect, map, x, y, ctx) {\n    let i, j, dir, t, x2, y2;\n    let madeChange;\n    // const bounds = ctx.bounds || null;\n    // if (bounds) {\n    //   // Activation.debug('- bounds', bounds);\n    // }\n    const config = effect.tile;\n    let startProb = config.grow || 0;\n    let probDec = config.decrement || 0;\n    const spawnMap = ctx.grid;\n    spawnMap.fill(0);\n    if (!cellIsOk(effect, map, x, y, true)) {\n        return false;\n    }\n    spawnMap[x][y] = t = 1; // incremented before anything else happens\n    let count = 1;\n    if (startProb) {\n        madeChange = true;\n        if (startProb >= 100) {\n            probDec = probDec || 100;\n        }\n        if (probDec <= 0) {\n            probDec = startProb;\n        }\n        while (madeChange && startProb > 0) {\n            madeChange = false;\n            t++;\n            for (i = 0; i < map.width; i++) {\n                for (j = 0; j < map.height; j++) {\n                    if (spawnMap[i][j] == t - 1) {\n                        for (dir = 0; dir < 4; dir++) {\n                            x2 = i + Utils.DIRS[dir][0];\n                            y2 = j + Utils.DIRS[dir][1];\n                            if (spawnMap.hasXY(x2, y2) &&\n                                !spawnMap[x2][y2] &&\n                                random.chance(startProb) &&\n                                cellIsOk(effect, map, x2, y2, false)) {\n                                spawnMap[x2][y2] = t;\n                                madeChange = true;\n                                ++count;\n                            }\n                        }\n                    }\n                }\n            }\n            startProb -= probDec;\n        }\n    }\n    return count > 0;\n}\n// export function spreadCircle(\n//     this: any,\n//     ctx: Effect.EffectCtx,\n//     spawnMap: Grid.NumGrid\n// ) {\n//     const x = ctx.x;\n//     const y = ctx.y;\n//     let startProb = this.spread || 0;\n//     let probDec = this.decrement || 0;\n//     spawnMap.fill(0);\n//     spawnMap[x][y] = 1; // incremented before anything else happens\n//     let radius = 0;\n//     startProb = startProb || 100;\n//     if (startProb >= 100) {\n//         probDec = probDec || 100;\n//     }\n//     while (GW.random.chance(startProb)) {\n//         startProb -= probDec;\n//         ++radius;\n//     }\n//     // startProb = 100;\n//     // probDec = 0;\n//     spawnMap.updateCircle(x, y, radius, (_v, i, j) => {\n//         if (!cellIsOk(this, i, j, ctx)) return 0;\n//         // const dist = Math.floor(Utils.distanceBetween(x, y, i, j));\n//         // const prob = startProb - dist * probDec;\n//         // if (!random.chance(prob)) return 0;\n//         return 1;\n//     });\n//     // spawnMap[x][y] = 1;\n//     // if (!isOk(flags, x, y, ctx)) {\n//     //     spawnMap[x][y] = 0;\n//     // }\n//     return true;\n// }\n// export function spreadLine(\n//     this: any,\n//     ctx: Effect.EffectCtx,\n//     spawnMap: Grid.NumGrid\n// ) {\n//     let x2, y2;\n//     let madeChange;\n//     const x = ctx.x;\n//     const y = ctx.y;\n//     let startProb = this.spread || 0;\n//     let probDec = this.decrement || 0;\n//     spawnMap.fill(0);\n//     spawnMap[x][y] = 1; // incremented before anything else happens\n//     if (startProb) {\n//         madeChange = true;\n//         if (startProb >= 100) {\n//             probDec = probDec || 100;\n//         }\n//         x2 = x;\n//         y2 = y;\n//         const dir = Utils.DIRS[GW.random.number(4)];\n//         while (madeChange) {\n//             madeChange = false;\n//             x2 = x2 + dir[0];\n//             y2 = y2 + dir[1];\n//             if (\n//                 spawnMap.hasXY(x2, y2) &&\n//                 !spawnMap[x2][y2] &&\n//                 cellIsOk(this, x2, y2, ctx) &&\n//                 GW.random.chance(startProb)\n//             ) {\n//                 spawnMap[x2][y2] = 1;\n//                 madeChange = true;\n//                 startProb -= probDec;\n//             }\n//         }\n//     }\n//     if (!cellIsOk(this, x, y, ctx)) {\n//         spawnMap[x][y] = 0;\n//     }\n//     return true;\n// }\nexport function clearCells(map, spawnMap, flags = 0) {\n    let didSomething = false;\n    const clearAll = (flags & Effect.Flags.E_CLEAR_CELL) === Effect.Flags.E_CLEAR_CELL;\n    spawnMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        const cell = map.cell(i, j);\n        if (clearAll) {\n            cell.clear();\n        }\n        else {\n            if (flags & Effect.Flags.E_CLEAR_GAS) {\n                cell.clearDepth(Entity.flags.Depth.GAS);\n            }\n            if (flags & Effect.Flags.E_CLEAR_LIQUID) {\n                cell.clearDepth(Entity.flags.Depth.LIQUID);\n            }\n            if (flags & Effect.Flags.E_CLEAR_SURFACE) {\n                cell.clearDepth(Entity.flags.Depth.SURFACE);\n            }\n            if (flags & Effect.Flags.E_CLEAR_GROUND) {\n                cell.clearDepth(Entity.flags.Depth.GROUND);\n            }\n        }\n        didSomething = true;\n    });\n    return didSomething;\n}\nexport function evacuateCreatures(map, blockingMap) {\n    let i = 0, j = 0;\n    let didSomething = false;\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            if (!blockingMap[i][j])\n                continue;\n            const cell = map.cell(i, j);\n            if (!cell.hasActor())\n                continue;\n            Utils.eachChain(cell.actor, (obj) => {\n                if (!(obj instanceof Actor))\n                    return;\n                const monst = obj;\n                const loc = random.matchingLocNear(i, j, (x, y) => {\n                    if (!map.hasXY(x, y))\n                        return false;\n                    if (blockingMap[x][y])\n                        return false;\n                    const c = map.cell(x, y);\n                    return !monst.forbidsCell(c);\n                });\n                if (loc && loc[0] >= 0 && loc[1] >= 0) {\n                    map.moveActor(monst, loc[0], loc[1]);\n                    // map.redrawXY(loc[0], loc[1]);\n                    didSomething = true;\n                }\n            });\n        }\n    }\n    return didSomething;\n}\nexport function evacuateItems(map, blockingMap) {\n    let didSomething = false;\n    blockingMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        const cell = map.cell(i, j);\n        if (!cell.hasItem())\n            return;\n        Utils.eachChain(cell.item, (obj) => {\n            if (!(obj instanceof Item))\n                return;\n            const item = obj;\n            const loc = random.matchingLocNear(i, j, (x, y) => {\n                if (!map.hasXY(x, y))\n                    return false;\n                if (blockingMap[x][y])\n                    return false;\n                const dest = map.cell(x, y);\n                return !item.forbidsCell(dest);\n            });\n            if (loc && loc[0] >= 0 && loc[1] >= 0) {\n                map.moveItem(item, loc[0], loc[1]);\n                // map.redrawXY(loc[0], loc[1]);\n                didSomething = true;\n            }\n        });\n    });\n    return didSomething;\n}\nclass ClearTileEffect {\n    make(src, dest) {\n        if (!src.clear)\n            return true;\n        let config = src.clear;\n        let layers = 0;\n        if (typeof config === 'string') {\n            config = config.split(/[,|]/).map((t) => t.trim());\n        }\n        if (config === true) {\n            layers = Entity.flags.Depth.ALL_LAYERS;\n        }\n        else if (typeof config === 'number') {\n            layers = config;\n        }\n        else if (Array.isArray(config)) {\n            layers = config.reduce((out, v) => {\n                if (typeof v === 'number')\n                    return out | v;\n                const depth = Entity.flags.Depth[v] ||\n                    0;\n                return out | depth;\n            }, 0);\n        }\n        else {\n            throw new Error('clear effect must have number or string config.');\n        }\n        dest.clear = layers;\n        return layers > 0;\n    }\n    fire(config, map, x, y, ctx) {\n        return this.fireSync(config, map, x, y, ctx);\n    }\n    fireSync(config, map, x, y, _ctx) {\n        if (!config.clear)\n            return false;\n        if (!map)\n            return false;\n        const cell = map.cell(x, y);\n        return cell.clearDepth(config.clear);\n    }\n}\nEffect.installType('clear', new ClearTileEffect());\n//# sourceMappingURL=effect.js.map","import { Cell, Map, GameObject, Depth, Tile } from './flags';\nexport const flags = { Cell, Map, GameObject, Depth, Tile };\nexport * from './types';\nexport * from './cell';\nexport * from './map';\nexport * from './analyze';\nexport * from './effect';\nexport * from './cellMemory';\nexport * from './layers';\nexport * from './gasLayer';\nexport * from './fireLayer';\n//# sourceMappingURL=index.js.map"],"names":["eachChain","item","fn","index","next","addToChain","obj","name","entry","removeFromChain","root","prev","current","findInChain","cb","DIRS","CLOCK_DIRS","NOOP","TRUE","clamp","v","min","max","x","src","y","Bounds","[object Object]","w","h","this","width","height","left","right","top","bottom","args","eachNeighbor","only4dirs","i","dir","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","assignField","dest","key","updated","copy","clear","nullify","clone","Array","isArray","slice","length","setDefaults","def","custom","Object","keys","forEach","origKey","defValue","parts","split","shift","undefined","ERROR","message","Error","WARN","console","warn","first","find","FP_FACTOR","forLine","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","forCircle","radius","j","forRect","arguments","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","a","b","pct","dx","dy","async","matchFn","maxIndex","d","x0","y0","findIndex","result","push","diff","steps","c","last","step","currentXValue","maxXValue","sin","PI","omit","map","t","trim","includes","field","val","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","some","av","arr","reduce","line","iterable","count","chain","sort","onchange","other","o","out","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","Random","_fn","ROT","RNG","setSeed","getUniform","value","Number","MAX_SAFE_INTEGER","number","lo","hi","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","fromIndex","toIndex","r","buf","n","shuffle","percent","outOf","clumps","numSides","locationCount","Utils.forRect","k","candidateLocs","loc","random","cosmetic","Range","lower","upper","rng","_rng","clumped","make","config","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","from","fl","N","u","startsWith","substring","flagObj","inverse","join","Utils.DIRS","makeArray","l","fill","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","_width","_height","hasXY","Utils.eachNeighbor","sequence","constructor","update","col","Utils.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","log","dumpRect","Utils.clamp","output","padStart","bestLoc","bestDistance","dist","Utils.distanceBetween","chance","get","matchingLoc","matchingLocNear","Utils.arcCount","GRID_CACHE","stats","active","alloc","create","free","NumGrid","bind","grid","pop","_resize","indexOf","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","Utils.Bounds","matchValue","numberOfCells","fillFn","floodFill","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","makeKeyEvent","e","toLowerCase","toUpperCase","clientX","clientY","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","unshift","ms","Utils.TRUE","done","elapsed","Promise","resolve","keymap","interval","setInterval","pushEvent","nextEvent","draw","clearInterval","setTimeout","nextKeyOrClick","pause","loop","FovFlags","id","clearEvents","preventDefault","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","ITEM_DETECTED","MONSTER_DETECTED","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","Utils.calcRadius","_hasXY","_debug","debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","FovSystem","site","flags","Grid.make","_changed","viewportChanged","fov","FOV.FOV","blocksVision","visible","makeAlwaysVisible","revealed","revealAll","changed","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","REVEALED","ALWAYS_VISIBLE","flag","WAS_ANY_KIND_OF_VISIBLE","WAS_IN_FOV","isVisible","wasVisible","onCellRevealed","isClairy","wasClairy","storeMemory","redrawCell","isTele","wasTele","isMonst","wasMonst","WAS_MONSTER_DETECTED","hasVisibleLight","updateCellVisibility","updateCellClairyvoyance","updateCellTelepathy","updateCellDetect","cx","cy","cr","lightingChanged","demoteCellVisibility","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","Utils.addToChain","removeListener","success","Utils.eachChain","matches","Utils.removeFromChain","clearEvent","emit","apply","p","level","funcs","levels","frequency","start","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","toColorInt","g","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","set","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","assign","separate","A","hDiff","mix","WHITE","BLACK","install","info","installSpread","lighten","darken","NONE","temp","Mixer","Utils.first","fg","Color.from","bg","equals","opacity","color","multiply","multiplier","scale","add","Color.separate","bake","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","remove","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","_data","Uint32Array","orig","style","toGlyph","sprite","Text.eachChar","Text.wordWrap","xi","strength","mixer","drawSprite","header","Buffer","canvas","_target","copyTo","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","_requestRender","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","Color.make","templates","msg","Text.compile","GW.config","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","Text.apply","commitCombatMessage","addMessage","_a","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","Text.length","addMessageLine","Effect","needs","actor","isPlayer","addCombatMessage","fromFlag","Flags","effectTypes","effect","effects","reset","E_FIRED","E_CLEAR_GROUND","E_CLEAR_SURFACE","E_CLEAR_LIQUID","E_CLEAR_GAS","E_BLOCKED_BY_ITEMS","E_BLOCKED_BY_ACTORS","installType","effectType","fire","ctx_","force","Grid.alloc","didSomething","handlers","E_NO_MARK_FIRED","E_NEXT_ALWAYS","DATA","gameHasEnded","nextInfo","E_NEXT_EVERYWHERE","forEachAsync","Grid.free","MessageEffect","fired","Msg.add","_x","_y","EmitEffect","Events.emit","fireSync","Blob","rounds","minWidth","minHeight","maxWidth","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","UTILS.Bounds","GRID.alloc","tries","_cellularAutomataRound","valueBounds","GRID.free","nbCount","buffer2","UTILS.DIRS","carve","CONFIG","light","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","calcFov","lightValue","addCellLight","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","LightSystem","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","anyLightChanged","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor","GameObject","Depth","L_BLOCKS_ITEMS","L_BLOCKS_SURFACE","L_BLOCKS_GAS","L_BLOCKS_LIQUID","L_BLOCKS_EFFECTS","L_BLOCKS_ACTORS","L_BLOCKS_MOVE","L_BLOCKS_VISION","L_BLOCKS_DIAGONAL","L_WALL_FLAGS","depth","object","hasObjectFlag","Flags.GameObject","Item","quantity","ITEM","_cell","Actor","Flags.Depth","ACTOR","hasActorFlag","Flags.Actor","IS_PLAYER","Tile","TileMech","T_UP_STAIRS","T_DOWN_STAIRS","T_PORTAL","T_AUTO_DESCENT","T_LAVA","T_DEEP_WATER","T_SPONTANEOUSLY_IGNITES","T_HAS_STAIRS","T_IS_TRAP","T_IS_FIRE","T_ENTANGLES","_c","dissipate","priority","groundTile","Sprite.make","description","flavor","article","tile","tileMech","ObjectFlags","blocksMove","hasTileFlag","Flags.Tile","T_PATHING_BLOCKER","getName","_e","_f","extends","tiles","makeEffect","Flag.from","Flags.TileMech","Light.make","all","enter","open","tick","close","Cell","Map","IS_IN_ROOM_MACHINE","IS_IN_AREA_MACHINE","HAS_ITEM","HAS_DORMANT_MONSTER","STABLE_MEMORY","SEARCHED_FROM_HERE","PRESSURE_PLATE_DEPRESSED","KNOWN_TO_BE_TRAP_FREE","IS_IN_LOOP","IS_CHOKEPOINT","IS_GATE_SITE","IS_IN_MACHINE","IMPREGNABLE","HAS_PLAYER","HAS_ACTOR","HAS_ANY_ACTOR","NEEDS_REDRAW","CELL_CHANGED","CellObjects","cell","_item","_actor","chokeCount","_objects","TILE.tiles","NULL","TILE.get","setTile","objectFlags","tileFlags","tileMechFlags","itemFlags","actorFlags","needsRedraw","TILE.Tile","highestPriorityTile","blocksPathing","blocksEffects","TILE.flags","T_BLOCKS_OTHER_LAYERS","hasAllObjectFlags","TileFlags","tileFlag","tileMechFlag","hasTileMechFlag","clearDepth","depthTile","_fire","Effect.effects","Effect.fire","hasEffect","hasCellFlag","setCellFlag","clearCellFlag","MapLayer","properties","_other","_dt","ActorLayer","_opts","forbidsCell","Flags.Cell","ItemLayer","TileLayer","Tile.tiles","superpriority","blocksLayer","blockedByItems","hasItem","blockedByActors","blockedByOtherLayers","highestPriority","GROUND","ground","Tile.get","CAUGHT_FIRE_THIS_TURN","hasKey","activate","CellMemory","blocks","vision","move","pathing","_tile","_hasKey","snapshot","cellFlags","CellFlags","TileMechFlags","FireLayer","exposeToFire","alwaysIgnite","ignitionChance","bestExtinguishingPriority","explosiveNeighborCount","fireIgnited","explosivePromotion","T_IS_FLAMMABLE","eachTile","T_EXTINGUISHES_FIRE","GAS","Effect.from","TM_EXPLOSIVE_PROMOTE","GasLayer","volume","startingVolume","spread","highestVolume","startingTile","highestTile","updateCellVolume","calcOpacity","layers","cells","memory","FOV.FovSystem","initLayers","useMemory","addLayer","SURFACE","layer","Canvas.Canvas","getAppearanceAt","hasPlayer","isAnyKindOfVisible","fmt","dump","boundary","cellInfo","hasTile","fireAll","setAmbient","getAmbient","willFire","EVENT_FIRED_THIS_TURN","EVENT_PROTECTED","promoteChance","putAppearance","COLORS_DANCE","putSnapshot","getSnapshot","getLight","isRevealed","L_VISUALLY_DISTINCT","_cb","isDark","clearMemory","store","updateChokepoints","updateCounts","passMap","L_SECRETLY_PASSABLE","passableArcCount","Utils.CLOCK_DIRS","cellCount","floodFillCount","i2","j2","startX","startY","updateLoopiness","eachCell","resetLoopiness","checkLoopiness","cleanLoopiness","inString","sdir","numStrings","maxStringLength","currentStringLength","newCell","fillInnerLoopGrid","up","designationSurvives","SpawnEffect","grow","decrement","Effect.Flags","matchTile","abortIfBlocking","E_ABORT_IF_BLOCKS_MAP","isBlocking","E_PERMIT_BLOCKING","E_TREAT_AS_BLOCKING","computeSpawnMap","mapDisruptedBy","E_EVACUATE_CREATURES","evacuateCreatures","E_EVACUATE_ITEMS","evacuateItems","E_CLEAR_CELL","clearCells","spawnTiles","blockingGrid","blockingToMapX","blockingToMapY","walkableGrid","disrupts","lakeX","lakeY","isStairs","spawnMap","accomplishedSomething","E_BLOCKED_BY_OTHER_LAYERS","E_SUPERPRIORITY","E_PROTECTED","setMapFlag","Flags.Map","MAP_CHANGED","cellIsOk","isStart","E_BUILD_IN_WALLS","isWall","E_MUST_TOUCH_WALLS","E_NO_TOUCH_WALLS","madeChange","startProb","probDec","clearAll","Entity.flags.Depth","LIQUID","blockingMap","monst","moveActor","moveItem","ALL_LAYERS","prefab","charToTile","isStringArray","updateChokeCounts"],"mappings":"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"}