!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("gw-utils")):"function"==typeof define&&define.amd?define(["exports","gw-utils"],o):o((t="undefined"!=typeof globalThis?globalThis:t||self).GW=t.GW||{},t.GW)}(this,(function(t,o){"use strict";class i{constructor(t,i,e,r=1){this.width=1,this.doors=[],this.x=t[0],this.y=t[1];const n=o.utils.DIRS[i];this.length=e,this.width=r,i===o.utils.UP||i===o.utils.DOWN?(this.x2=this.x+(r-1),this.y2=this.y+(e-1)*n[1]):(this.x2=this.x+(e-1)*n[0],this.y2=this.y+(r-1)),this.dir=i}translate(t,o){this.x+=t,this.y+=o,this.x2+=t,this.y2+=o,this.doors&&this.doors.forEach((i=>{i&&(i[0]<0||i[1]<0||(i[0]+=t,i[1]+=o))}))}}class e{constructor(t,o,i,e,r){this.doors=[],this.hall=null,this.digger=t,this.x=o,this.y=i,this.width=e,this.height=r}get cx(){return this.x+Math.floor(this.width/2)}get cy(){return this.y+Math.floor(this.height/2)}translate(t,o){this.x+=t,this.y+=o,this.doors&&this.doors.forEach((i=>{i&&(i[0]<0||i[1]<0||(i[0]+=t,i[1]+=o))})),this.hall&&this.hall.translate(t,o)}}var r={};function n(t,o,i){const e=o(i||{});return e.fn=o,e.id=t,r[t]=e,e}function l(t,i){return t=t||{},i=i||{},Object.entries(i).forEach((([i,e])=>{let r=t[i];if("tile"===i)return void(void 0===r&&(t[i]=e));if(!0===e){if(!r)return void o.utils.WARN("Missing required config for digger: "+i)}else if("number"==typeof e)r=r||e;else{if(!Array.isArray(e))return void o.utils.WARN("Unexpected digger configuration parameter: ",i,""+e);r=r||e}const n=o.range.make(r);n||o.utils.ERROR("Invalid configuration for digger: "+i),t[i]=n})),t}function h(t,o){if(t=l(t,{width:[3,6],height:[3,6]}),!o)return t;const i=t.width.value(),r=t.height.value(),n=t.tile||1;o.fill(0);const h=Math.floor((o.width-i)/2),a=Math.floor((o.height-r)/2);return o.fillRect(h,a,i,r,n),new e(t.id,h,a,i,r)}n("DEFAULT",h);var a={__proto__:null,Hall:i,Room:e,rooms:r,install:n,checkConfig:l,cavern:function(t,i){if(t=l(t,{width:12,height:8}),!i)return t;let r,n,h;const a=t.width.value(),f=t.height.value(),s=t.tile||1;h=o.grid.alloc(i.width,i.height,0);const c=Math.floor(.5*a),u=a,d=Math.floor(.5*f),g=f;i.fill(0);const m=h.fillBlob(5,c,d,u,g,55,"ffffffttt","ffffttttt");return r=Math.floor((i.width-m.width)/2),n=Math.floor((i.height-m.height)/2),o.grid.offsetZip(i,h,r-m.x,n-m.y,s),o.grid.free(h),new e(t.id,r,n,m.width,m.height)},choiceRoom:function(t,i){let e;if(t=t||{},Array.isArray(t.choices))e=o.random.item.bind(o.random,t.choices);else{if("object"!=typeof t.choices)return o.utils.ERROR("Expected choices to be either array of choices or map { digger: weight }"),null;e=o.random.weighted.bind(o.random,t.choices)}if(!i)return t;let n=e();const l=r[n];if(!l)return o.utils.ERROR("Missing digger choice: "+n),null;let h=l;return t.opts&&(h=Object.assign({},l,t.opts)),l.fn(h,i)},entrance:function(t,o){if(t=l(t,{width:20,height:10}),!o)return t;const i=t.width.value(),r=t.height.value(),n=t.tile||1,h=Math.floor(.4*i),a=r,f=i,s=Math.floor(.5*r),c=Math.floor(o.width/2-h/2-1),u=o.height-a-2,d=Math.floor(o.width/2-f/2-1),g=o.height-s-2;return o.fill(0),o.fillRect(c,u,h,a,n),o.fillRect(d,g,f,s,n),new e(t.id,Math.min(c,d),Math.min(u,g),Math.max(h,f),Math.max(a,s))},cross:function(t,i){if(t=l(t,{width:12,height:20}),!i)return t;const r=t.width.value(),n=t.height.value(),h=t.tile||1,a=r,f=Math.max(3,Math.floor(r*o.random.range(25,75)/100)),s=Math.max(3,Math.floor(n*o.random.range(25,75)/100)),c=n,u=Math.floor((i.width-a)/2),d=u+o.random.range(2,Math.max(2,a-f-2)),g=Math.floor((i.height-c)/2),m=g+o.random.range(2,Math.max(2,c-s-2));return i.fill(0),i.fillRect(u,m,a,s,h),i.fillRect(d,g,f,c,h),new e(t.id,u,g,Math.max(a,f),Math.max(s,c))},symmetricalCross:function(t,i){if(t=l(t,{width:7,height:7}),!i)return t;const r=t.width.value(),n=t.height.value(),h=t.tile||1;let a=Math.max(3,Math.floor(r*o.random.range(25,50)/100));n%2==0&&a>2&&(a-=1);let f=Math.max(3,Math.floor(n*o.random.range(25,50)/100));i.fill(0);const s=Math.floor((i.width-r)/2),c=Math.floor((i.height-f)/2);i.fillRect(s,c,r,f,h);const u=Math.floor((i.width-a)/2),d=Math.floor((i.height-n)/2);return i.fillRect(u,d,a,n,h),new e(t.id,Math.min(s,u),Math.min(c,d),Math.max(r,a),Math.max(n,f))},rectangular:h,circular:function(t,o){if(t=l(t,{radius:[3,4]}),!o)return t;const i=t.radius.value(),r=t.tile||1;o.fill(0);const n=Math.floor(o.width/2),h=Math.floor(o.height/2);return i>1&&o.fillCircle(n,h,i,r),new e(t.id,n,h,2*i,2*i)},brogueDonut:function(t,i){if(t=l(t,{radius:[5,10],ringMinWidth:3,holeMinSize:3,holeChance:50}),!i)return t;const r=t.radius.value(),n=t.ringMinWidth.value(),h=t.holeMinSize.value(),a=t.tile||1;i.fill(0);const f=Math.floor(i.width/2),s=Math.floor(i.height/2);return i.fillCircle(f,s,r,a),r>n+h&&o.random.chance(t.holeChance.value())&&i.fillCircle(f,s,o.random.range(h,r-h),0),new e(t.id,f-r,s-r,2*r+1,2*r+1)},chunkyRoom:function(t,i){if(t=l(t,{count:[2,12],width:[5,20],height:[5,20]}),!i)return t;let r,n,h,a,f,s,c,u=t.count.value();const d=t.width.value(),g=t.height.value(),m=t.tile||1;for(a=Math.floor(i.width/2)-Math.floor(d/2),f=Math.floor(i.width/2)+Math.floor(d/2),s=Math.floor(i.height/2)-Math.floor(g/2),c=Math.floor(i.height/2)+Math.floor(g/2),i.fill(0),i.fillCircle(Math.floor(i.width/2),Math.floor(i.height/2),2,m),r=0;r<u;)if(n=o.random.range(a,f),h=o.random.range(s,c),i[n][h]){if(n-2<a)continue;if(n+2>f)continue;if(h-2<s)continue;if(h+2>c)continue;i.fillCircle(n,h,2,m),r++}const M=i.valueBounds(m);return new e(t.id,M.x,M.y,M.width,M.height)}};const f=o.utils.DIRS;var s={};function c(t,i){return i.length||(i.length=[]),Array.isArray(i.length)?t==o.utils.UP||t==o.utils.DOWN?o.range.make(i.length[1]||[2,9]):o.range.make(i.length[0]||[9,15]):o.range.make(i.length)}function u(t,e,r){if((t=t||{}).width=1,!e)return t;const n=function(t,i,e){const r=i.doors;let n=e.dir||o.utils.NO_DIRECTION;if(n==o.utils.NO_DIRECTION){const i=o.random.sequence(4);for(let l=0;l<4;l++){n=i[l];const h=c(n,e).hi,a=r[n];if(a&&-1!=a[0]&&-1!=a[1]){const o=a[0]+Math.floor(f[n][0]*h),i=a[1]+Math.floor(f[n][1]*h);if(t.hasXY(o,i))break}n=o.utils.NO_DIRECTION}}return n}(e,r,t);if(n===o.utils.NO_DIRECTION)return null;const l=c(n,t).value(),h=r.doors[n],a=f[n];let s=h[0],u=h[1];const d=t.tile||1;for(let t=0;t<l;t++)e[s][u]=d,s+=a[0],u+=a[1];s-=a[0],u-=a[1];const g=new i(h,n,l);return g.doors=function(t,i,e,r,n){let l,h;const a=o.utils.firstOpt("obliqueChance",n,15),s=o.random.chance(a),c=[];for(let o=0;o<4;o++)l=i+f[o][0],h=e+f[o][1],o!=r&&!s||!t.hasXY(l,h)||t[l][h]||(c[o]=[l,h]);return c}(e,s,u,n,t),g}!function(t,o,i={}){const e=o(i||{});e.fn=o,e.id=t,s[t]=e}("DEFAULT",u,{chance:15});const d=o.utils.DIRS;var g;function m(t,i,e,r){const n=e.hall?e.hall.doors:e.doors;for(let l=0;l<g.length;l++){const h=Math.floor(g[l]/t.height),a=g[l]%t.height;if(0!=t.get(h,a))continue;const f=o.grid.directionOfDoorSite(t,h,a,1);if(f!=o.utils.NO_DIRECTION){const l=n[(f+2)%4];if(!l)continue;const s=h-l[0],c=a-l[1];if(-1!=l[0]&&M(t,i,s,c)){if(o.grid.offsetZip(t,i,s,c,((o,i,e,n)=>{t[e][n]=r.room.tile||1})),!1!==r.room.door){const o=!0!==r.room.door&&r.room.door?r.room.door:2;t[h][a]=o}return e.translate(s,c),!0}}}return!1}function M(t,o,i,e){let r,n,l,h,a,f;for(r=0;r<o.width;r++)for(n=0;n<o.height;n++)if(o[r][n])for(l=r+i,h=n+e,a=l-1;a<=l+1;a++)for(f=h-1;f<=h+1;f++)if(!t.hasXY(a,f)||t.isBoundaryXY(a,f)||0!==t.get(a,f))return!1;return!0}function w(t,i,e,r,n){const l=o.random.sequence(i.length);for(let o=0;o<l.length;o++){const h=i[l[o]];if(!h)continue;if(R(t,h[0],h[1],e,r,n))return!0}return!1}function R(t,i,e,r,n,l){const h=n.hall?n.hall.doors:n.doors,a=o.random.sequence(4);for(let f of a){const a=h[(f+2)%4];if(a&&(-1!=a[0]&&M(t,r,i-a[0],e-a[1]))){const h=i-a[0],f=e-a[1];if(o.grid.offsetZip(t,r,h,f,((o,i,e,r)=>{t[e][r]=l.room.tile||1})),!1!==l.room.door){const o=!0!==l.room.door&&l.room.door?l.room.door:2;t[i][e]=o}return n.translate(h,f),!0}}return!1}function y(t){let i,e,r,n,l,h,a;const f=o.grid.alloc(t.width,t.height);for(f.copy(t),i=0;i<f.width;i++)for(e=0;e<f.height;e++)if(!f[i][e]&&(h=o.grid.directionOfDoorSite(f,i,e,1),h!=o.utils.NO_DIRECTION)){for(n=i+d[h][0],l=e+d[h][1],a=!1,r=0;r<10&&f.hasXY(n,l)&&!a;r++)f[n][l]&&(a=!0),n+=d[h][0],l+=d[h][1];a||(f[i][e]=h+200)}let s=[];for(h=0;h<4;h++){const t=f.randomMatchingLoc(h+200)||[-1,-1];s[h]=[t[0],t[1]]}return o.grid.free(f),s}function O(t,o,i){const e=t.get(o,i);return 1===e||2===e||5===e}function v(t,o,i){const e=t.get(o,i);return 0===e||3===e}function p(t){let i,e,r,n,l,h;do{for(h=!1,i=0;i<t.width-1;i++)for(e=0;e<t.height-1;e++)for(r=0;r<=1;r++)O(t,i+r,e)&&!O(t,i+(1-r),e)&&v(t,i+(1-r),e)&&!O(t,i+r,e+1)&&v(t,i+r,e+1)&&O(t,i+(1-r),e+1)&&(o.random.chance(50)?(n=i+(1-r),l=e):(n=i+r,l=e+1),h=!0,t[n][l]=1)}while(1==h)}function x(t){t.forEach(((o,i,e)=>{t.isBoundaryXY(i,e)||2==o&&(1!=t.get(i+1,e)&&1!=t.get(i-1,e)||1!=t.get(i,e+1)&&1!=t.get(i,e-1)?(1!==t.get(i+1,e)?1:0)+(1!==t.get(i-1,e)?1:0)+(1!==t.get(i,e+1)?1:0)+(1!==t.get(i,e-1)?1:0)>=3&&(t[i][e]=1):t[i][e]=1)}))}function D(t){t.forEach(((o,i,e)=>{0==o&&(t[i][e]=3)}))}var E={__proto__:null,room:a,start:function(t){g=o.random.sequence(t.width*t.height),t.fill(0)},finish:function(t){p(t),D(t),x(t)},dig:function(t,i){if("string"==typeof(i=i||{room:"DEFAULT",hall:"DEFAULT",tries:10})&&(i={room:i}),i.loc&&(i.locs=[i.loc]),i.room||(i.room="DEFAULT"),"string"==typeof i.room){const t=i.room;i.room=r[t],i.room||o.utils.ERROR("Failed to find room: "+t)}const e=i.room;if(!0===i.hall&&(i.hall="DEFAULT"),!1===i.hall||i.hall||(i.hall="DEFAULT"),"string"==typeof i.hall){const t=i.hall;if(i.hall=s[t],!i.hall)return o.utils.ERROR("Failed to find hall: "+t),null}const n=i.hall?i.hall:null;let l=i.locs||null;if(l&&Array.isArray(l))l&&l.length&&2==l.length&&"number"==typeof l[0]?l=[l]:0==l.length&&(l=null);else if(l=null,0===t.count(1)){l=[[Math.floor(t.width/2),t.height-2]]}const h=i.room,a=o.grid.alloc(t.width,t.height);let f=!1;if(n){let t=void 0!==n.chance?n.chance:15;f=o.random.chance(t)}let c,d=!1,g=i.tries||10;for(;--g>=0&&!d;)a.fill(0),c=h.fn(e,a),c.doors=y(a),f&&(c.hall=u(n,a,c)),d=l?w(t,l,a,c,i):m(t,a,c,i);return o.grid.free(a),c&&d?c:null},attachRoom:m,roomFitsAt:M,forceRoomAtMapLoc:function(t,i,e,r,n){for(let l=0;l<g.length;l++){const h=Math.floor(g[l]/t.height),a=g[l]%t.height;if(e[h][a])continue;if(o.grid.directionOfDoorSite(e,h,a,1)!=o.utils.NO_DIRECTION){const l=i[0]-h,f=i[1]-a;if(M(t,e,l,f)){if(o.grid.offsetZip(t,e,l,f,((o,i,e,r)=>{t[e][r]=n.room.tile||1})),!1!==n.room.door){const o=!0!==n.room.door&&n.room.door?n.room.door:2;t[i[0]][i[1]]=o}return r.translate(l,f),!0}}}return!1},chooseRandomDoorSites:y,isPassable:O,isObstruction:v,removeDiagonalOpenings:p,finishDoors:x,finishWalls:D,Room:e,Hall:i,NOTHING:0,FLOOR:1,DOOR:2,WALL:3,LAKE:4,BRIDGE:5};t.dig=E,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=gw-dig.min.js.map
