!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("gw-utils")):"function"==typeof define&&define.amd?define(["exports","gw-utils"],i):i((t="undefined"!=typeof globalThis?globalThis:t||self).GW=t.GW||{},t.GW)}(this,(function(t,i){"use strict";function o(t,o){t.forEach(((r,n,l)=>{o[n][l]=e(t,n,l)?1:i.path.OBSTRUCTION}))}function e(t,i,o){const e=t.get(i,o);return 1===e||2===e||5===e||6===e||7===e||8===e}function r(t,i,o){return 1==t.get(i,o)}function n(t,i,o){return 2===t.get(i,o)}function l(t,i,o){const e=t.get(i,o);return 0===e||3===e}function h(t,i,o){const e=t.get(i,o);return 6===e||7===e}function a(t,i,o){const e=t.get(i,o);return 4===e||8===e}class s{constructor(t,o,e,r=1){this.width=1,this.doors=[],this.x=t[0],this.y=t[1];const n=i.utils.DIRS[o];this.length=e,this.width=r,o===i.utils.UP||o===i.utils.DOWN?(this.x2=this.x+(r-1),this.y2=this.y+(e-1)*n[1]):(this.x2=this.x+(e-1)*n[0],this.y2=this.y+(r-1)),this.dir=o}translate(t,i){this.x+=t,this.y+=i,this.x2+=t,this.y2+=i,this.doors&&this.doors.forEach((o=>{o&&(o[0]<0||o[1]<0||(o[0]+=t,o[1]+=i))}))}}class f{constructor(t,i,o,e,r){this.doors=[],this.hall=null,this.digger=t,this.x=i,this.y=o,this.width=e,this.height=r}get cx(){return this.x+Math.floor(this.width/2)}get cy(){return this.y+Math.floor(this.height/2)}translate(t,i){this.x+=t,this.y+=i,this.doors&&this.doors.forEach((o=>{o&&(o[0]<0||o[1]<0||(o[0]+=t,o[1]+=i))})),this.hall&&this.hall.translate(t,i)}}var c={};function u(t,i,o){const e=i(o||{});return e.fn=i,e.id=t,c[t]=e,e}function d(t,o){return t=t||{},o=o||{},Object.entries(o).forEach((([o,e])=>{let r=t[o];if("tile"===o)return void(void 0===r&&(t[o]=e));if(!0===e){if(!r)return i.utils.ERROR("Missing required config for digger: "+o)}else r=("number"==typeof e||Array.isArray(e),r||e);const n=i.range.make(r);t[o]=n})),t}function g(t,i){if(t=d(t,{width:[3,6],height:[3,6]}),!i)return t;const o=t.width.value(),e=t.height.value(),r=t.tile||1;i.fill(0);const n=Math.floor((i.width-o)/2),l=Math.floor((i.height-e)/2);return i.fillRect(n,l,o,e,r),new f(t.id,n,l,o,e)}u("DEFAULT",g);var m={__proto__:null,Hall:s,Room:f,rooms:c,install:u,checkConfig:d,cavern:function(t,o){if(t=d(t,{width:12,height:8}),!o)return t;let e,r,n;const l=t.width.value(),h=t.height.value(),a=t.tile||1;n=i.grid.alloc(o.width,o.height,0);const s=Math.floor(.5*l),c=l,u=Math.floor(.5*h),g=h;o.fill(0);const m=n.fillBlob(5,s,u,c,g,55,"ffffffttt","ffffttttt");return e=Math.floor((o.width-m.width)/2),r=Math.floor((o.height-m.height)/2),i.grid.offsetZip(o,n,e-m.x,r-m.y,a),i.grid.free(n),new f(t.id,e,r,m.width,m.height)},choiceRoom:function(t,o){let e;if(t=t||{},Array.isArray(t.choices)?e=i.random.item.bind(i.random,t.choices):"object"==typeof t.choices?e=i.random.weighted.bind(i.random,t.choices):i.utils.ERROR("Expected choices to be either array of room ids or map - ex: { ROOM_ID: weight }"),!o)return t;let r=e();const n=c[r];n||i.utils.ERROR("Missing digger choice: "+r);let l=n;return t.opts&&(l=Object.assign({},n,t.opts)),n.fn(l,o)},entrance:function(t,i){if(t=d(t,{width:20,height:10}),!i)return t;const o=t.width.value(),e=t.height.value(),r=t.tile||1,n=Math.floor(.4*o),l=e,h=o,a=Math.floor(.5*e),s=Math.floor(i.width/2-n/2-1),c=i.height-l-2,u=Math.floor(i.width/2-h/2-1),g=i.height-a-2;return i.fill(0),i.fillRect(s,c,n,l,r),i.fillRect(u,g,h,a,r),new f(t.id,Math.min(s,u),Math.min(c,g),Math.max(n,h),Math.max(l,a))},cross:function(t,o){if(t=d(t,{width:12,height:20}),!o)return t;const e=t.width.value(),r=t.height.value(),n=t.tile||1,l=e,h=Math.max(3,Math.floor(e*i.random.range(25,75)/100)),a=Math.max(3,Math.floor(r*i.random.range(25,75)/100)),s=r,c=Math.floor((o.width-l)/2),u=c+i.random.range(2,Math.max(2,l-h-2)),g=Math.floor((o.height-s)/2),m=g+i.random.range(2,Math.max(2,s-a-2));return o.fill(0),o.fillRect(c,m,l,a,n),o.fillRect(u,g,h,s,n),new f(t.id,c,g,Math.max(l,h),Math.max(a,s))},symmetricalCross:function(t,o){if(t=d(t,{width:7,height:7}),!o)return t;const e=t.width.value(),r=t.height.value(),n=t.tile||1;let l=Math.max(3,Math.floor(e*i.random.range(25,50)/100)),h=Math.max(3,Math.floor(r*i.random.range(25,50)/100));o.fill(0);const a=Math.floor((o.width-e)/2),s=Math.floor((o.height-h)/2);o.fillRect(a,s,e,h,n);const c=Math.floor((o.width-l)/2),u=Math.floor((o.height-r)/2);return o.fillRect(c,u,l,r,n),new f(t.id,Math.min(a,c),Math.min(s,u),Math.max(e,l),Math.max(r,h))},rectangular:g,circular:function(t,i){if(t=d(t,{radius:[3,4]}),!i)return t;const o=t.radius.value(),e=t.tile||1;i.fill(0);const r=Math.floor(i.width/2),n=Math.floor(i.height/2);return o>1&&i.fillCircle(r,n,o,e),new f(t.id,r-o,n-o,2*o+1,2*o+1)},brogueDonut:function(t,o){if(t=d(t,{radius:[5,10],ringMinWidth:3,holeMinSize:3,holeChance:50}),!o)return t;const e=t.radius.value(),r=t.ringMinWidth.value(),n=t.holeMinSize.value(),l=t.tile||1;o.fill(0);const h=Math.floor(o.width/2),a=Math.floor(o.height/2);return o.fillCircle(h,a,e,l),e>r+n&&i.random.chance(t.holeChance.value())&&o.fillCircle(h,a,i.random.range(n,e-n),0),new f(t.id,h-e,a-e,2*e+1,2*e+1)},chunkyRoom:function(t,o){if(t=d(t,{count:[2,12],width:[5,20],height:[5,20]}),!o)return t;let e,r,n,l,h,a,s,c=t.count.value();const u=t.width.value(),g=t.height.value(),m=t.tile||1;for(l=Math.floor(o.width/2)-Math.floor(u/2),h=Math.floor(o.width/2)+Math.floor(u/2),a=Math.floor(o.height/2)-Math.floor(g/2),s=Math.floor(o.height/2)+Math.floor(g/2),o.fill(0),o.fillCircle(Math.floor(o.width/2),Math.floor(o.height/2),2,m),e=0;e<c;)if(r=i.random.range(l,h),n=i.random.range(a,s),o[r][n]){if(r-2<l)continue;if(r+2>h)continue;if(n-2<a)continue;if(n+2>s)continue;o.fillCircle(r,n,2,m),e++}const w=o.valueBounds(m);return new f(t.id,w.x,w.y,w.width,w.height)}};const w=i.utils.DIRS;var M={};function y(t,i,o={}){const e=i(o||{});return e.fn=i,e.id=t,M[t]=e,e}function p(t={}){return i.utils.clamp(function(t){if(!t)return 1;if("number"==typeof t)return t;if(void 0===t.width)return 1;let o=t.width;if("number"==typeof o)return o;o=Array.isArray(o)?i.random.weighted(o)+1:"string"==typeof o?i.range.make(o).value():Number.parseInt(i.random.weighted(o));return o}(t),1,3)}function R(t,o){return o.length||(o.length=[]),Array.isArray(o.length)?t==i.utils.UP||t==i.utils.DOWN?i.range.make(o.length[1]||[2,9]):i.range.make(o.length[0]||[9,15]):i.range.make(o.length)}function O(t,o,e){const r=o.doors;let n=e.dir||i.utils.NO_DIRECTION;if(n==i.utils.NO_DIRECTION){const o=i.random.sequence(4);for(let l=0;l<4;l++){n=o[l];const h=R(n,e).hi,a=r[n];if(a&&-1!=a[0]&&-1!=a[1]){const i=a[0]+Math.floor(w[n][0]*h),o=a[1]+Math.floor(w[n][1]*h);if(t.hasXY(i,o))break}n=i.utils.NO_DIRECTION}}return n}function x(t,o,e,r,n){let l,h;const a=i.utils.firstOpt("obliqueChance",n,15),s=i.random.chance(a),f=[];for(let i=0;i<4;i++)l=o+w[i][0],h=e+w[i][1],i!=r&&!s||!t.hasXY(l,h)||t[l][h]||(f[i]=[l,h]);return f}function D(t,o,e){if((t=t||{}).width=1,!o)return t;const r=O(o,e,t);if(r===i.utils.NO_DIRECTION)return null;const n=R(r,t).value(),l=e.doors[r],h=w[r];let a=l[0],f=l[1];const c=t.tile||1;for(let t=0;t<n;t++)o[a][f]=c,a+=h[0],f+=h[1];a-=h[0],f-=h[1];const u=new s(l,r,n);return u.doors=x(o,a,f,r,t),u}y("DEFAULT",D,{chance:15});var _={__proto__:null,halls:M,install:y,pickWidth:p,pickLengthRange:R,pickHallDirection:O,pickHallExits:x,digWide:function(t,o,e){if((t=t||{}).width||(t.width=2),!o)return t;const r=O(o,e,t);if(r===i.utils.NO_DIRECTION)return null;const n=R(r,t).value(),l=p(t)||2,h=e.doors[r],a=t.tile||1,f=[];let c,u,d;if(r===i.utils.UP){c=i.utils.clamp(h[0],e.x,e.x+e.width-l),u=h[1]-n+1;for(let t=c;t<c+l;++t)for(let i=u;i<u+n;++i)o[t][i]=a;f[r]=[c,u-1],d=new s([c,h[1]],r,n,2)}else if(r===i.utils.DOWN){c=i.utils.clamp(h[0],e.x,e.x+e.width-l),u=h[1]+n-1;for(let t=c;t<c+l;++t)for(let i=u;i>u-n;--i)o[t][i]=a;f[r]=[c,u+1],d=new s([c,h[1]],r,n,2)}else if(r===i.utils.LEFT){c=h[0]-n+1,u=i.utils.clamp(h[1],e.y,e.y+e.height-l);for(let t=c;t<c+n;++t)for(let i=u;i<u+l;++i)o[t][i]=a;f[r]=[c-1,u],d=new s([h[0],u],r,n,2)}else{c=h[0]+n-1,u=i.utils.clamp(h[1],e.y,e.y+e.height-l);for(let t=c;t>c-n;--t)for(let i=u;i<u+l;++i)o[t][i]=a;f[r]=[c+1,u],d=new s([h[0],u],r,n,l)}return d.doors=f,d.width=l,d},dig:D};function I(t,o={}){let e,r,n,l,h,a,s,f,c,u,d,g=0;a=o.height||15,s=o.width||30,f=o.minSize||5,c=o.tries||20,u=o.count||1,d=o.canDisrupt||!1;const m=o.wreath||0,w=o.wreathTile||8,M=o.tile||4,y=i.grid.alloc(t.width,t.height,0);let p=0;for(;p<u&&g<u;){const o=Math.round((s-f)*(u-p)/u)+f,R=Math.round((a-f)*(u-p)/u)+f;y.fill(0);const O=y.fillBlob(5,4,4,o,R,55,"ffffftttt","ffffttttt");let x=!1;for(n=0;n<c&&!x;n++)if(l=i.random.range(1-O.x,y.width-O.width-O.x-2),h=i.random.range(1-O.y,y.height-O.height-O.y-2),d||!N(t,y,-l,-h)){for(x=!0,e=0;e<O.width;e++)for(r=0;r<O.height;r++)if(y[e+O.x][r+O.y]){const i=e+O.x+l,o=r+O.y+h;t[i][o]=M,m&&t.forCircle(i,o,m,((i,o,e)=>{1!==i&&2!==i||(t[o][e]=w)}))}break}x?++g:++p}return i.grid.free(y),g}function N(t,o,r=0,n=0){const l=i.grid.alloc(t.width,t.height);let a=!1;t.forEach(((i,s,f)=>{const c=s+r,u=f+n;if(i)if(h(t,s,f))o.get(c,u)?a=!0:l[s][f]=1;else if(e(t,s,f)){if(o.get(c,u))return;l[s][f]=1}}));let s=!0;for(let t=0;t<l.width&&!a;++t)for(let i=0;i<l.height&&!a;++i)1==l[t][i]&&(s?(l.floodFill(t,i,1,2),s=!1):a=!0);return i.grid.free(l),a}function v(t,i,o,e){return 5===t.get(i,o)||!!a(t,i,o)&&(!!a(t,i+e[1],o+e[0])&&!!a(t,i-e[1],o-e[0]))}function E(t,r,n){let l,h,s,f,c,u,d;n=n||1;const g=t,m=i.grid.alloc(t.width,t.height),w=i.grid.alloc(t.width,t.height),M=[[1,0],[0,1]];o(t,w);const y=i.random.sequence(t.width*t.height);for(s=0;s<y.length;s++)if(u=Math.floor(y[s]/g.height),d=y[s]%g.height,t.hasXY(u,d)&&t.get(u,d)&&e(t,u,d)&&!a(t,u,d))for(c=0;c<=1;c++){const o=M[c];if(l=u+o[0],h=d+o[1],f=n,t.hasXY(l,h)){if(a(t,l,h))for(f=0;f<n&&(l+=o[0],h+=o[1],a(t,l,h));++f);if(t.get(l,h)&&e(t,l,h)&&f<n&&(i.path.calculateDistances(m,l,h,w,!1),m[u][d]>r&&m[u][d]<i.path.NO_PATH)){for(;u!==l||d!==h;)v(t,u,d,o)?(t[u][d]=5,w[u][d]=1):(t[u][d]=1,w[u][d]=1),u+=o[0],d+=o[1];break}}}i.grid.free(m),i.grid.free(w)}var L={__proto__:null,digLakes:I,digBridges:E};function A(t,o,e,n){let h=0;if(!l(n,o,e))return!1;for(let t=0;t<4;++t){const a=i.utils.DIRS[t];if(!n.hasXY(o+a[0],e+a[1]))return!1;if(!n.hasXY(o-a[0],e-a[1]))return!1;if(r(n,o+a[0],e+a[1])){if(h+=1,!l(n,o-a[0]+a[1],e-a[1]+a[0]))return!1;if(!l(n,o-a[0]-a[1],e-a[1]-a[0]))return!1}else if(!l(n,o+a[0],e+a[1]))return!1}return 1==h}function C(t,o,e,n){const h=i.random.sequence(4);let a=null;for(let n=0;n<h.length;++n){a=i.utils.DIRS[n];if(r(t,o+a[0],e+a[1])&&l(t,o-a[0],e-a[1]))break;a=null}a||i.utils.ERROR("No stair direction found!"),t.set(o,e,n);const s=i.utils.CLOCK_DIRS.findIndex((t=>t[0]==a[0]&&t[1]==a[1]));for(let r=0;r<i.utils.CLOCK_DIRS.length;++r){const n=r?r-1:7,l=(r+1)%8;if(r==s||n==s||l==s)continue;const h=i.utils.CLOCK_DIRS[r];t.set(o+h[0],e+h[1],3)}return!0}function T(t,o={}){let e=!1!==o.up,r=!1!==o.down;const n=o.minDistance||Math.floor(Math.max(t.width,t.height)/2),l=o.isValid||A,h=o.setup||C;let a=Array.isArray(o.up)?o.up:null,s=Array.isArray(o.down)?o.down:null;const f={};if(o.start&&"string"!=typeof o.start){let e=o.start;e=!0===e?t.randomMatchingLoc(l):t.matchingLocNear(i.utils.x(e),i.utils.y(e),l),f.start=e}return a&&s?(a=t.matchingLocNear(i.utils.x(a),i.utils.y(a),l),s=t.matchingLocNear(i.utils.x(s),i.utils.y(s),l)):a&&!s?(a=t.matchingLocNear(i.utils.x(a),i.utils.y(a),l),r&&(s=t.randomMatchingLoc(((o,e,r)=>!(i.utils.distanceBetween(e,r,a[0],a[1])<n)&&l(o,e,r,t))))):s&&!a?(s=t.matchingLocNear(i.utils.x(s),i.utils.y(s),l),e&&(a=t.randomMatchingLoc(((o,e,r)=>!(i.utils.distanceBetween(e,r,s[0],s[1])<n)&&A(0,e,r,t))))):e?(a=t.randomMatchingLoc(l),r&&(s=t.randomMatchingLoc(((o,e,r)=>!(i.utils.distanceBetween(e,r,a[0],a[1])<n)&&A(0,e,r,t))))):r&&(s=t.randomMatchingLoc(l)),a&&(f.up=a.slice(),h(t,a[0],a[1],o.upTile||6),"up"===o.start&&(f.start=f.up)),s&&(f.down=s.slice(),h(t,s[0],s[1],o.downTile||7),"down"===o.start&&(f.start=f.down)),a||s?f:null}var b={__proto__:null,isValidStairLoc:A,setupStairs:C,addStairs:T};const S=i.utils.DIRS;var X;function Y(t,o,e,r){const n=e.hall?e.hall.doors:e.doors;for(let l=0;l<X.length;l++){const h=Math.floor(X[l]/t.height),a=X[l]%t.height;if(0!=t.get(h,a))continue;const s=F(t,h,a,1);if(s!=i.utils.NO_DIRECTION){const l=(s+2)%4,f=n[l];if(!f)continue;const c=h-f[0],u=a-f[1];if(-1!=f[0]&&W(t,o,c,u))return i.grid.offsetZip(t,o,c,u,((i,o,e,n)=>{t[e][n]=r.room.tile||1})),k(t,e,r,h,a,l),e.translate(c,u),!0}}return!1}function k(t,o,e,r,n,l){if(0===e.door)return;const h=e.door||2;if(t[r][n]=h,o.hall&&o.hall.width>1&&o.hall.dir===l)if(l===i.utils.UP||l===i.utils.DOWN){let i=!0,o=1;for(;i;)i=!1,0===t.get(r-o,n)&&t.get(r-o,n-1)&&t.get(r-o,n+1)&&(t[r-o][n]=h,i=!0),0===t.get(r+o,n)&&t.get(r+o,n-1)&&t.get(r+o,n+1)&&(t[r+o][n]=h,i=!0),++o}else{let i=!0,o=1;for(;i;)i=!1,0===t.get(r,n-o)&&t.get(r-1,n-o)&&t.get(r+1,n-o)&&(t[r][n-o]=e.door,i=!0),0===t.get(r,n+o)&&t.get(r-1,n+o)&&t.get(r+1,n+o)&&(t[r][n+o]=e.door,i=!0),++o}}function W(t,i,o,e){let r,n,l,h,a,s;for(r=0;r<i.width;r++)for(n=0;n<i.height;n++)if(i[r][n])for(l=r+o,h=n+e,a=l-1;a<=l+1;a++)for(s=h-1;s<=h+1;s++)if(!t.hasXY(a,s)||t.isBoundaryXY(a,s)||0!==t.get(a,s))return!1;return!0}function F(t,o,e,r){let n,l,h,a,s,f;const c="function"==typeof r?r:t=>t==r;for(l=i.utils.NO_DIRECTION,n=0;n<4;n++)if(h=o+S[n][0],a=e+S[n][1],s=o-S[n][0],f=e-S[n][1],t.hasXY(s,f)&&t.hasXY(h,a)&&c(t[s][f],s,f,t)){if(l!=i.utils.NO_DIRECTION)return i.utils.NO_DIRECTION;l=n}return l}function U(t,o,e,r,n){const l=i.random.sequence(o.length);for(let i=0;i<l.length;i++){const h=o[l[i]];if(!h)continue;if(B(t,h[0],h[1],e,r,n))return!0}return!1}function B(t,o,e,r,n,l){const h=n.hall?n.hall.doors:n.doors,a=i.random.sequence(4);for(let s of a){const a=(s+2)%4,f=h[a];if(f&&(-1!=f[0]&&W(t,r,o-f[0],e-f[1]))){const h=o-f[0],s=e-f[1];return i.grid.offsetZip(t,r,h,s,((i,o,e,r)=>{t[e][r]=l.room.tile||1})),k(t,n,l,o,e,a),n.translate(h,s),!0}}return!1}function q(t,o){let e,r,n,l,h,a,s;o=o||1;const f=i.grid.alloc(t.width,t.height);for(f.copy(t),e=0;e<f.width;e++)for(r=0;r<f.height;r++)if(!f[e][r]&&(a=F(f,e,r,o),a!=i.utils.NO_DIRECTION)){for(l=e+S[a][0],h=r+S[a][1],s=!1,n=0;n<10&&f.hasXY(l,h)&&!s;n++)f[l][h]&&(s=!0),l+=S[a][0],h+=S[a][1];s||(f[e][r]=a+200)}let c=[];for(a=0;a<4;a++){const t=f.randomMatchingLoc(a+200)||[-1,-1];c[a]=[t[0],t[1]]}return i.grid.free(f),c}function P(t){let o,r,n,h,a,s;do{for(s=!1,o=0;o<t.width-1;o++)for(r=0;r<t.height-1;r++)for(n=0;n<=1;n++)e(t,o+n,r)&&!e(t,o+(1-n),r)&&l(t,o+(1-n),r)&&!e(t,o+n,r+1)&&l(t,o+n,r+1)&&e(t,o+(1-n),r+1)&&(i.random.chance(50)?(h=o+(1-n),a=r):(h=o+n,a=r+1),s=!0,t[h][a]=1)}while(1==s)}function H(t){t.forEach(((i,o,e)=>{t.isBoundaryXY(o,e)||2==i&&(1!=t.get(o+1,e)&&1!=t.get(o-1,e)||1!=t.get(o,e+1)&&1!=t.get(o,e-1)?(1!==t.get(o+1,e)?1:0)+(1!==t.get(o-1,e)?1:0)+(1!==t.get(o,e+1)?1:0)+(1!==t.get(o,e-1)?1:0)>=3&&(t[o][e]=1):t[o][e]=1)}))}function G(t,i=3){t.forEach(((o,e,r)=>{0==o&&(t[e][r]=i)}))}var j={__proto__:null,room:m,hall:_,lake:L,stairs:b,start:function(t){X=i.random.sequence(t.width*t.height),t.fill(0)},finish:function(t){P(t),G(t),H(t)},addRoom:function(t,o){if("string"==typeof(o=o||{room:"DEFAULT",hall:"DEFAULT",tries:10})&&(o={room:o}),o.loc&&(o.locs=[o.loc]),o.room||(o.room="DEFAULT"),"function"==typeof o.room&&(o.room={fn:o.room}),"string"==typeof o.room){const t=o.room;o.room=c[t],o.room||i.utils.ERROR("Failed to find room: "+t)}const e=o.room;let r=null;if(!0===o.hall&&(o.hall="DEFAULT"),!1===o.hall||o.hall||(o.hall="DEFAULT"),"function"==typeof o.hall&&(o.hall={fn:o.hall}),"string"==typeof o.hall){const t=o.hall;if(o.hall=M[t],!o.hall)return i.utils.ERROR("Failed to find hall: "+t),null;r=o.hall}else o.hall&&o.hall.fn&&(r=o.hall);!1===o.door?o.door=0:!0===o.door?o.door=2:"number"==typeof o.door?o.door=i.random.chance(o.door)?2:1:o.door=1;let n=o.locs||null;if(n&&Array.isArray(n))n&&n.length&&2==n.length&&"number"==typeof n[0]?n=[n]:0==n.length&&(n=null);else if(n=null,0===t.count(1)){n=[[Math.floor(t.width/2),t.height-2]]}const l=o.room,h=i.grid.alloc(t.width,t.height);let a=!1;if(r){let t=void 0!==r.chance?r.chance:15;a=i.random.chance(t)}let s,f=!1,u=o.tries||10;for(;--u>=0&&!f;)h.fill(0),s=l.fn(e,h),s.doors=q(h,1),a&&r&&(s.hall=r.fn(r,h,s)),f=n?U(t,n,h,s,o):Y(t,h,s,o);return i.grid.free(h),s&&f?s:null},attachRoom:Y,attachDoor:k,roomFitsAt:W,directionOfDoorSite:F,forceRoomAtMapLoc:function(t,o,e,r,n){for(let l=0;l<X.length;l++){const h=Math.floor(X[l]/t.height),a=X[l]%t.height;if(e[h][a])continue;if(F(e,h,a,1)!=i.utils.NO_DIRECTION){const l=o[0]-h,s=o[1]-a;if(W(t,e,l,s)){if(i.grid.offsetZip(t,e,l,s,((i,o,e,r)=>{t[e][r]=n.room.tile||1})),!1!==n.room.door){const i=!0!==n.room.door&&n.room.door?n.room.door:2;t[o[0]][o[1]]=i}return r.translate(l,s),!0}}}return!1},chooseRandomDoorSites:q,addLoops:function(t,r,l){let h,a,s,f,c,u,d,g,m;r=r||Math.floor(Math.min(t.width,t.height)/2),l=l||1;const w=t,M=i.grid.alloc(t.width,t.height),y=i.grid.alloc(t.width,t.height),p=[[1,0],[0,1]];function R(i,o,e){return!!t.hasXY(i,o)&&(!!t.hasXY(i+e[1],o+e[0])&&(!!t.hasXY(i-e[1],o-e[0])&&(!t.get(i,o)&&(!t.get(i+e[1],o+e[0])&&!t.get(i-e[1],o-e[0])))))}function O(i,o,e){return!!t.hasXY(i,o)&&(!!t.hasXY(i+e[1],o+e[0])&&(!!t.hasXY(i-e[1],o-e[0])&&(!!t.get(i,o)||(!!t.get(i+e[1],o+e[0])||!!t.get(i-e[1],o-e[0])))))}for(o(t,y),c=0;c<X.length;c++){g=Math.floor(X[c]/w.height),m=X[c]%w.height;if(!w[g][m])for(d=0;d<=1;d++){let o=p[d];if(R(g,m,o)){if(u=l,t.hasXY(g+o[0],m+o[1])&&e(t,g+o[0],m+o[1])){if(!t.hasXY(g-o[0],m-o[1])||n(t,g-o[0],m-o[1]))continue}else{if(!t.hasXY(g-o[0],m-o[1])||!e(t,g-o[0],m-o[1]))continue;if(!t.hasXY(g+o[0],m+o[1])||n(t,g+o[0],m+o[1]))continue;o=o.map((t=>-1*t))}for(h=g+o[0],a=m+o[1],s=g,f=m,u=0;u<l&&(s-=o[0],f-=o[1],!O(s,f,o));++u);if(u<l&&(i.path.calculateDistances(M,h,a,y,!1),M[s][f]>r&&M[s][f]<3e4)){for(;s!==h||f!==a;)0==t.get(s,f)&&(t[s][f]=1,y[s][f]=1),s+=o[0],f+=o[1];t[g][m]=2;break}}}}i.grid.free(M),i.grid.free(y)},addLakes:function(t,i={}){return I(t,i)},addBridges:function(t,i,o){return E(t,i,o)},addStairs:function(t,i={}){return T(t,i)},removeDiagonalOpenings:P,finishDoors:H,finishWalls:G,Room:f,Hall:s,NOTHING:0,FLOOR:1,DOOR:2,WALL:3,LAKE:4,BRIDGE:5,UP_STAIRS:6,DOWN_STAIRS:7,SHALLOW:8,fillCostGrid:o,isPassable:e,isFloor:r,isDoor:n,isObstruction:l,isStairs:h,isLake:function(t,i,o){return 4===t.get(i,o)},isAnyWater:a};t.dig=j,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=gw-dig.min.js.map
