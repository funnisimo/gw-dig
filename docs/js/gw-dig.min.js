!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("gw-utils")):"function"==typeof define&&define.amd?define(["exports","gw-utils"],o):o((t="undefined"!=typeof globalThis?globalThis:t||self).GW=t.GW||{},t.GW)}(this,(function(t,o){"use strict";class i{constructor(t,i,r,e=1){this.width=1,this.doors=[],this.x=t[0],this.y=t[1];const n=o.utils.DIRS[i];this.length=r,this.width=e,i===o.utils.UP||i===o.utils.DOWN?(this.x2=this.x+(e-1),this.y2=this.y+(r-1)*n[1]):(this.x2=this.x+(r-1)*n[0],this.y2=this.y+(e-1)),this.dir=i}translate(t,o){this.x+=t,this.y+=o,this.x2+=t,this.y2+=o,this.doors&&this.doors.forEach((i=>{i&&(i[0]<0||i[1]<0||(i[0]+=t,i[1]+=o))}))}}class r{constructor(t,o,i,r,e){this.doors=[],this.hall=null,this.digger=t,this.x=o,this.y=i,this.width=r,this.height=e}get cx(){return this.x+Math.floor(this.width/2)}get cy(){return this.y+Math.floor(this.height/2)}translate(t,o){this.x+=t,this.y+=o,this.doors&&this.doors.forEach((i=>{i&&(i[0]<0||i[1]<0||(i[0]+=t,i[1]+=o))})),this.hall&&this.hall.translate(t,o)}}var e={};function n(t,o,i){const r=o(i||{});return r.fn=o,r.id=t,e[t]=r,r}function h(t,i){return t=t||{},i=i||{},Object.entries(i).forEach((([i,r])=>{let e=t[i];if("tile"===i)return void(void 0===e&&(t[i]=r));if(!0===r){if(!e)return o.utils.ERROR("Missing required config for digger: "+i)}else e=("number"==typeof r||Array.isArray(r),e||r);const n=o.range.make(e);t[i]=n})),t}function l(t,o){if(t=h(t,{width:[3,6],height:[3,6]}),!o)return t;const i=t.width.value(),e=t.height.value(),n=t.tile||1;o.fill(0);const l=Math.floor((o.width-i)/2),a=Math.floor((o.height-e)/2);return o.fillRect(l,a,i,e,n),new r(t.id,l,a,i,e)}n("DEFAULT",l);var a={__proto__:null,Hall:i,Room:r,rooms:e,install:n,checkConfig:h,cavern:function(t,i){if(t=h(t,{width:12,height:8}),!i)return t;let e,n,l;const a=t.width.value(),f=t.height.value(),s=t.tile||1;l=o.grid.alloc(i.width,i.height,0);const c=Math.floor(.5*a),u=a,d=Math.floor(.5*f),g=f;i.fill(0);const m=l.fillBlob(5,c,d,u,g,55,"ffffffttt","ffffttttt");return e=Math.floor((i.width-m.width)/2),n=Math.floor((i.height-m.height)/2),o.grid.offsetZip(i,l,e-m.x,n-m.y,s),o.grid.free(l),new r(t.id,e,n,m.width,m.height)},choiceRoom:function(t,i){let r;if(t=t||{},Array.isArray(t.choices)?r=o.random.item.bind(o.random,t.choices):"object"==typeof t.choices?r=o.random.weighted.bind(o.random,t.choices):o.utils.ERROR("Expected choices to be either array of room ids or map - ex: { ROOM_ID: weight }"),!i)return t;let n=r();const h=e[n];h||o.utils.ERROR("Missing digger choice: "+n);let l=h;return t.opts&&(l=Object.assign({},h,t.opts)),h.fn(l,i)},entrance:function(t,o){if(t=h(t,{width:20,height:10}),!o)return t;const i=t.width.value(),e=t.height.value(),n=t.tile||1,l=Math.floor(.4*i),a=e,f=i,s=Math.floor(.5*e),c=Math.floor(o.width/2-l/2-1),u=o.height-a-2,d=Math.floor(o.width/2-f/2-1),g=o.height-s-2;return o.fill(0),o.fillRect(c,u,l,a,n),o.fillRect(d,g,f,s,n),new r(t.id,Math.min(c,d),Math.min(u,g),Math.max(l,f),Math.max(a,s))},cross:function(t,i){if(t=h(t,{width:12,height:20}),!i)return t;const e=t.width.value(),n=t.height.value(),l=t.tile||1,a=e,f=Math.max(3,Math.floor(e*o.random.range(25,75)/100)),s=Math.max(3,Math.floor(n*o.random.range(25,75)/100)),c=n,u=Math.floor((i.width-a)/2),d=u+o.random.range(2,Math.max(2,a-f-2)),g=Math.floor((i.height-c)/2),m=g+o.random.range(2,Math.max(2,c-s-2));return i.fill(0),i.fillRect(u,m,a,s,l),i.fillRect(d,g,f,c,l),new r(t.id,u,g,Math.max(a,f),Math.max(s,c))},symmetricalCross:function(t,i){if(t=h(t,{width:7,height:7}),!i)return t;const e=t.width.value(),n=t.height.value(),l=t.tile||1;let a=Math.max(3,Math.floor(e*o.random.range(25,50)/100)),f=Math.max(3,Math.floor(n*o.random.range(25,50)/100));i.fill(0);const s=Math.floor((i.width-e)/2),c=Math.floor((i.height-f)/2);i.fillRect(s,c,e,f,l);const u=Math.floor((i.width-a)/2),d=Math.floor((i.height-n)/2);return i.fillRect(u,d,a,n,l),new r(t.id,Math.min(s,u),Math.min(c,d),Math.max(e,a),Math.max(n,f))},rectangular:l,circular:function(t,o){if(t=h(t,{radius:[3,4]}),!o)return t;const i=t.radius.value(),e=t.tile||1;o.fill(0);const n=Math.floor(o.width/2),l=Math.floor(o.height/2);return i>1&&o.fillCircle(n,l,i,e),new r(t.id,n-i,l-i,2*i+1,2*i+1)},brogueDonut:function(t,i){if(t=h(t,{radius:[5,10],ringMinWidth:3,holeMinSize:3,holeChance:50}),!i)return t;const e=t.radius.value(),n=t.ringMinWidth.value(),l=t.holeMinSize.value(),a=t.tile||1;i.fill(0);const f=Math.floor(i.width/2),s=Math.floor(i.height/2);return i.fillCircle(f,s,e,a),e>n+l&&o.random.chance(t.holeChance.value())&&i.fillCircle(f,s,o.random.range(l,e-l),0),new r(t.id,f-e,s-e,2*e+1,2*e+1)},chunkyRoom:function(t,i){if(t=h(t,{count:[2,12],width:[5,20],height:[5,20]}),!i)return t;let e,n,l,a,f,s,c,u=t.count.value();const d=t.width.value(),g=t.height.value(),m=t.tile||1;for(a=Math.floor(i.width/2)-Math.floor(d/2),f=Math.floor(i.width/2)+Math.floor(d/2),s=Math.floor(i.height/2)-Math.floor(g/2),c=Math.floor(i.height/2)+Math.floor(g/2),i.fill(0),i.fillCircle(Math.floor(i.width/2),Math.floor(i.height/2),2,m),e=0;e<u;)if(n=o.random.range(a,f),l=o.random.range(s,c),i[n][l]){if(n-2<a)continue;if(n+2>f)continue;if(l-2<s)continue;if(l+2>c)continue;i.fillCircle(n,l,2,m),e++}const M=i.valueBounds(m);return new r(t.id,M.x,M.y,M.width,M.height)}};const f=o.utils.DIRS;var s={};function c(t,i){return i.length||(i.length=[]),Array.isArray(i.length)?t==o.utils.UP||t==o.utils.DOWN?o.range.make(i.length[1]||[2,9]):o.range.make(i.length[0]||[9,15]):o.range.make(i.length)}function u(t,r,e){if((t=t||{}).width=1,!r)return t;const n=function(t,i,r){const e=i.doors;let n=r.dir||o.utils.NO_DIRECTION;if(n==o.utils.NO_DIRECTION){const i=o.random.sequence(4);for(let h=0;h<4;h++){n=i[h];const l=c(n,r).hi,a=e[n];if(a&&-1!=a[0]&&-1!=a[1]){const o=a[0]+Math.floor(f[n][0]*l),i=a[1]+Math.floor(f[n][1]*l);if(t.hasXY(o,i))break}n=o.utils.NO_DIRECTION}}return n}(r,e,t);if(n===o.utils.NO_DIRECTION)return null;const h=c(n,t).value(),l=e.doors[n],a=f[n];let s=l[0],u=l[1];const d=t.tile||1;for(let t=0;t<h;t++)r[s][u]=d,s+=a[0],u+=a[1];s-=a[0],u-=a[1];const g=new i(l,n,h);return g.doors=function(t,i,r,e,n){let h,l;const a=o.utils.firstOpt("obliqueChance",n,15),s=o.random.chance(a),c=[];for(let o=0;o<4;o++)h=i+f[o][0],l=r+f[o][1],o!=e&&!s||!t.hasXY(h,l)||t[h][l]||(c[o]=[h,l]);return c}(r,s,u,n,t),g}!function(t,o,i={}){const r=o(i||{});r.fn=o,r.id=t,s[t]=r}("DEFAULT",u,{chance:15});const d=o.utils.DIRS;var g;function m(t,i,r,e){const n=r.hall?r.hall.doors:r.doors;for(let h=0;h<g.length;h++){const l=Math.floor(g[h]/t.height),a=g[h]%t.height;if(0!=t.get(l,a))continue;const f=o.grid.directionOfDoorSite(t,l,a,1);if(f!=o.utils.NO_DIRECTION){const h=n[(f+2)%4];if(!h)continue;const s=l-h[0],c=a-h[1];if(-1!=h[0]&&M(t,i,s,c)){if(o.grid.offsetZip(t,i,s,c,((o,i,r,n)=>{t[r][n]=e.room.tile||1})),!1!==e.room.door){const o=!0!==e.room.door&&e.room.door?e.room.door:2;t[l][a]=o}return r.translate(s,c),!0}}}return!1}function M(t,o,i,r){let e,n,h,l,a,f;for(e=0;e<o.width;e++)for(n=0;n<o.height;n++)if(o[e][n])for(h=e+i,l=n+r,a=h-1;a<=h+1;a++)for(f=l-1;f<=l+1;f++)if(!t.hasXY(a,f)||t.isBoundaryXY(a,f)||0!==t.get(a,f))return!1;return!0}function w(t,i,r,e,n){const h=o.random.sequence(i.length);for(let o=0;o<h.length;o++){const l=i[h[o]];if(!l)continue;if(R(t,l[0],l[1],r,e,n))return!0}return!1}function R(t,i,r,e,n,h){const l=n.hall?n.hall.doors:n.doors,a=o.random.sequence(4);for(let f of a){const a=l[(f+2)%4];if(a&&(-1!=a[0]&&M(t,e,i-a[0],r-a[1]))){const l=i-a[0],f=r-a[1];if(o.grid.offsetZip(t,e,l,f,((o,i,r,e)=>{t[r][e]=h.room.tile||1})),!1!==h.room.door){const o=!0!==h.room.door&&h.room.door?h.room.door:2;t[i][r]=o}return n.translate(l,f),!0}}return!1}function y(t){let i,r,e,n,h,l,a;const f=o.grid.alloc(t.width,t.height);for(f.copy(t),i=0;i<f.width;i++)for(r=0;r<f.height;r++)if(!f[i][r]&&(l=o.grid.directionOfDoorSite(f,i,r,1),l!=o.utils.NO_DIRECTION)){for(n=i+d[l][0],h=r+d[l][1],a=!1,e=0;e<10&&f.hasXY(n,h)&&!a;e++)f[n][h]&&(a=!0),n+=d[l][0],h+=d[l][1];a||(f[i][r]=l+200)}let s=[];for(l=0;l<4;l++){const t=f.randomMatchingLoc(l+200)||[-1,-1];s[l]=[t[0],t[1]]}return o.grid.free(f),s}function O(t,o,i){const r=t.get(o,i);return 1===r||2===r||5===r}function v(t,o,i){const r=t.get(o,i);return 0===r||3===r}function x(t){let i,r,e,n,h,l;do{for(l=!1,i=0;i<t.width-1;i++)for(r=0;r<t.height-1;r++)for(e=0;e<=1;e++)O(t,i+e,r)&&!O(t,i+(1-e),r)&&v(t,i+(1-e),r)&&!O(t,i+e,r+1)&&v(t,i+e,r+1)&&O(t,i+(1-e),r+1)&&(o.random.chance(50)?(n=i+(1-e),h=r):(n=i+e,h=r+1),l=!0,t[n][h]=1)}while(1==l)}function D(t){t.forEach(((o,i,r)=>{t.isBoundaryXY(i,r)||2==o&&(1!=t.get(i+1,r)&&1!=t.get(i-1,r)||1!=t.get(i,r+1)&&1!=t.get(i,r-1)?(1!==t.get(i+1,r)?1:0)+(1!==t.get(i-1,r)?1:0)+(1!==t.get(i,r+1)?1:0)+(1!==t.get(i,r-1)?1:0)>=3&&(t[i][r]=1):t[i][r]=1)}))}function p(t){t.forEach(((o,i,r)=>{0==o&&(t[i][r]=3)}))}var E={__proto__:null,room:a,start:function(t){g=o.random.sequence(t.width*t.height),t.fill(0)},finish:function(t){x(t),p(t),D(t)},dig:function(t,i){if("string"==typeof(i=i||{room:"DEFAULT",hall:"DEFAULT",tries:10})&&(i={room:i}),i.loc&&(i.locs=[i.loc]),i.room||(i.room="DEFAULT"),"string"==typeof i.room){const t=i.room;i.room=e[t],i.room||o.utils.ERROR("Failed to find room: "+t)}const r=i.room;if(!0===i.hall&&(i.hall="DEFAULT"),!1===i.hall||i.hall||(i.hall="DEFAULT"),"string"==typeof i.hall){const t=i.hall;if(i.hall=s[t],!i.hall)return o.utils.ERROR("Failed to find hall: "+t),null}const n=i.hall?i.hall:null;let h=i.locs||null;if(h&&Array.isArray(h))h&&h.length&&2==h.length&&"number"==typeof h[0]?h=[h]:0==h.length&&(h=null);else if(h=null,0===t.count(1)){h=[[Math.floor(t.width/2),t.height-2]]}const l=i.room,a=o.grid.alloc(t.width,t.height);let f=!1;if(n){let t=void 0!==n.chance?n.chance:15;f=o.random.chance(t)}let c,d=!1,g=i.tries||10;for(;--g>=0&&!d;)a.fill(0),c=l.fn(r,a),c.doors=y(a),f&&(c.hall=u(n,a,c)),d=h?w(t,h,a,c,i):m(t,a,c,i);return o.grid.free(a),c&&d?c:null},attachRoom:m,roomFitsAt:M,forceRoomAtMapLoc:function(t,i,r,e,n){for(let h=0;h<g.length;h++){const l=Math.floor(g[h]/t.height),a=g[h]%t.height;if(r[l][a])continue;if(o.grid.directionOfDoorSite(r,l,a,1)!=o.utils.NO_DIRECTION){const h=i[0]-l,f=i[1]-a;if(M(t,r,h,f)){if(o.grid.offsetZip(t,r,h,f,((o,i,r,e)=>{t[r][e]=n.room.tile||1})),!1!==n.room.door){const o=!0!==n.room.door&&n.room.door?n.room.door:2;t[i[0]][i[1]]=o}return e.translate(h,f),!0}}}return!1},chooseRandomDoorSites:y,isPassable:O,isObstruction:v,removeDiagonalOpenings:x,finishDoors:D,finishWalls:p,Room:r,Hall:i,NOTHING:0,FLOOR:1,DOOR:2,WALL:3,LAKE:4,BRIDGE:5};t.dig=E,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=gw-dig.min.js.map
